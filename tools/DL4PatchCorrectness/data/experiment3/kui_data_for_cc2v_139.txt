0<ml>Chart-5<ml>Chart-5<ml>mmm Chart5b / source / org / jfree / data / xy / XYSeries . java 	 2017 - 03 - 20 <nl> ppp Chart5b_Patch5 / source / org / jfree / data / xy / XYSeries . java 	 2017 - 04 - 11 <nl> / / new item . . . otherwise it will be just - 1 and we should just <nl> / / append the value to the list . . . <nl> if ( this . autoSort ) { <nl> - this . data . add ( - index - 1 , new XYDataItem ( x , y ) ) ; <nl> + this . data . add ( new org . jfree . data . xy . XYDataItem ( x , y ) ) ; <nl> } <nl> else { <nl> this . data . add ( new XYDataItem ( x , y ) ) ; <nl> 
0<ml>Time-11<ml>Time-11<ml>mmm Time11b / src / main / java / org / joda / time / tz / DateTimeZoneBuilder . java 	 2017 - 05 - 03 <nl> ppp Time11b_Patch182 / src / main / java / org / joda / time / tz / DateTimeZoneBuilder . java 	 2017 - 05 - 03 <nl> } <nl> if ( tailZone ! = null ) { <nl> - if ( tailZone . iStartRecurrence . getNameKey ( ) <nl> - . equals ( tailZone . iEndRecurrence . getNameKey ( ) ) ) { <nl> + if ( id . length ( ) = = 0 ) { <nl> if ( ZoneInfoCompiler . verbose ( ) ) { <nl> System . out . println ( " Fixing duplicate recurrent name key - " + <nl> tailZone . iStartRecurrence . getNameKey ( ) ) ; <nl> 
0<ml>Chart-21<ml>Chart-21<ml>mmm Chart21b / source / org / jfree / data / Range . java 	 2017 - 03 - 20 <nl> ppp Chart21b_Patch14 / source / org / jfree / data / Range . java 	 2017 - 04 - 11 <nl> } <nl> Range range = ( Range ) obj ; <nl> if ( ! ( this . lower = = range . lower ) ) { <nl> + if ( ( ( ! ( 1 < org . jfree . data . Range . this . lower ) ) | | ( org . jfree . data . Range . this . lower < = - 1 + org . jfree . data . Range . this . upper - 1 ) ) & & ( ( ! ( 1 < org . jfree . data . Range . this . lower ) ) | | ( org . jfree . data . Range . this . lower < = - 1 + org . jfree . data . Range . this . upper - 1 ) ) ) <nl> return false ; <nl> } <nl> if ( ! ( this . upper = = range . upper ) ) { <nl> 
1<ml>Math-3<ml>Math-3<ml>mmm Math3b / src / main / java / org / apache / commons / math3 / util / MathArrays . java 	 2017 - 05 - 09 <nl> ppp Math3b_Patch194 / src / main / java / org / apache / commons / math3 / util / MathArrays . java 	 2017 - 05 - 09 <nl> final double prodHighCur = prodHigh [ 0 ] ; <nl> + if ( len = = 1 . 0 ) { return a [ 0 ] * b [ 0 ] ; } <nl> double prodHighNext = prodHigh [ 1 ] ; <nl> double sHighPrev = prodHighCur + prodHighNext ; <nl> double sPrime = sHighPrev - prodHighNext ; <nl> 
0<ml>Math-73<ml>Math-73<ml>mmm Math73b / src / main / java / org / apache / commons / math / analysis / solvers / UnivariateRealSolverImpl . java 	 2017 - 03 - 21 <nl> ppp Math73b_Patch55 / src / main / java / org / apache / commons / math / analysis / solvers / UnivariateRealSolverImpl . java 	 2017 - 04 - 11 <nl> * @ throws IllegalArgumentException <nl> * / <nl> protected void verifySequence ( final double lower , final double initial , final double upper ) { <nl> - if ( ! isSequence ( lower , initial , upper ) ) { <nl> + if ( ( ( ! ( ( 1 ) ! = ( lower ) ) ) & & ( org . apache . commons . math . analysis . solvers . UnivariateRealSolverImpl . this . result < org . apache . commons . math . analysis . solvers . UnivariateRealSolverImpl . this . defaultFunctionValueAccuracy ) ) | | ( initial < = lower ) ) { <nl> throw MathRuntimeException . createIllegalArgumentException ( <nl> " invalid interval , initial value parameters : lower = { 0 } , initial = { 1 } , upper = { 2 } " , <nl> lower , initial , upper ) ; <nl> 
1<ml>Math-89<ml>Math-89<ml>mmm Math89b / src / java / org / apache / commons / math / stat / Frequency . java 	 2017 - 05 - 09 <nl> ppp Math89b_Patch205 / src / java / org / apache / commons / math / stat / Frequency . java 	 2017 - 05 - 09 <nl> * / <nl> @ Deprecated <nl> public void addValue ( Object v ) { <nl> + if ( ! ( v instanceof Comparable < ? > ) ) { throw new IllegalArgumentException ( ) ; } <nl> addValue ( ( Comparable < ? > ) v ) ; <nl> } <nl> 
0<ml>Math-24<ml>Math-24<ml>mmm Math24b / src / main / java / org / apache / commons / math3 / analysis / FunctionUtils . java 	 2017 - 05 - 03 <nl> ppp Math24b_Patch157 / src / main / java / org / apache / commons / math3 / analysis / FunctionUtils . java 	 2017 - 05 - 03 <nl> public double value ( double x ) { <nl> double r = f [ 0 ] . value ( x ) ; <nl> for ( int i = 1 ; i < f . length ; i + + ) { <nl> + if ( ( 0 < r ) | | ( ! ( - 1 < = r ) ) ) { <nl> r + = f [ i ] . value ( x ) ; <nl> } <nl> + } <nl> return r ; <nl> } <nl> } ; <nl> 
0<ml>Math-105<ml>Math-105<ml>mmm Math105b / src / java / org / apache / commons / math / stat / regression / SimpleRegression . java 	 2017 - 03 - 21 <nl> ppp Math105b_Patch79 / src / java / org / apache / commons / math / stat / regression / SimpleRegression . java 	 2017 - 04 - 11 <nl> public void addData ( double x , double y ) { <nl> if ( n = = 0 ) { <nl> xbar = x ; <nl> + if ( ( org . apache . commons . math . stat . regression . SimpleRegression . this . xbar < = 1 ) | | ( ( y < x ) & & ( y < x ) ) ) <nl> ybar = y ; <nl> } else { <nl> double dx = x - xbar ; <nl> 
0<ml>Time-4<ml>Time-4<ml>mmm Time4b / src / main / java / org / joda / time / field / ZeroIsMaxDateTimeField . java 	 2017 - 03 - 21 <nl> ppp Time4b_Patch80 / src / main / java / org / joda / time / field / ZeroIsMaxDateTimeField . java 	 2017 - 04 - 11 <nl> * @ return the minimum value of 1 <nl> * / <nl> public int getMinimumValue ( ReadablePartial instant , int [ ] values ) { <nl> - return 1 ; <nl> + return ( getWrappedField ( ) . getMaximumValue ( ) ) + 1 ; <nl> } <nl> / * * <nl> 
0<ml>Math-40<ml>Math-40<ml>mmm Math40b / src / main / java / org / apache / commons / math / analysis / solvers / BracketingNthOrderBrentSolver . java 	 2017 - 03 - 20 <nl> ppp Math40b_Patch38 / src / main / java / org / apache / commons / math / analysis / solvers / BracketingNthOrderBrentSolver . java 	 2017 - 04 - 11 <nl> / / the guessed root is either not strictly inside the interval or it <nl> / / is a NaN ( which occurs when some sampling points share the same y ) <nl> / / we try again with a lower interpolation order <nl> - if ( signChangeIndex - start > = end - signChangeIndex ) { <nl> - / / we have more points before the sign change , drop the lowest point <nl> + if ( true ) { <nl> + + start ; <nl> } else { <nl> - / / we have more points after sign change , drop the highest point <nl> - - end ; <nl> } <nl> - <nl> / / we need to do one more attempt <nl> nextX = Double . NaN ; <nl> 
0<ml>Math-22<ml>Math-22<ml>mmm Math22b / src / main / java / org / apache / commons / math3 / distribution / FDistribution . java 	 2017 - 08 - 23 <nl> ppp Math22b_PatchHDRepair3 / src / main / java / org / apache / commons / math3 / distribution / FDistribution . java 	 2017 - 08 - 23 <nl> / * * { @ inheritDoc } * / <nl> public boolean isSupportLowerBoundInclusive ( ) { <nl> - return true ; <nl> + return false ; <nl> } <nl> / * * { @ inheritDoc } * / <nl> 
0<ml>Chart-13<ml>Chart-13<ml>mmm Chart13b / source / org / jfree / chart / block / BorderArrangement . java 	 2017 - 03 - 20 <nl> ppp Chart13b_Patch9 / source / org / jfree / chart / block / BorderArrangement . java 	 2017 - 04 - 11 <nl> heightRange3 ) ; <nl> Size2D size = this . rightBlock . arrange ( g2 , c4 ) ; <nl> w [ 3 ] = size . width ; <nl> + this . leftBlock = null ; <nl> h [ 3 ] = size . height ; <nl> } <nl> 
0<ml>Math-40<ml>Math-40<ml>mmm Math40b / src / main / java / org / apache / commons / math / analysis / solvers / BracketingNthOrderBrentSolver . java 	 2017 - 05 - 03 <nl> ppp Math40b_Patch161 / src / main / java / org / apache / commons / math / analysis / solvers / BracketingNthOrderBrentSolver . java 	 2017 - 05 - 03 <nl> / / the guessed root is either not strictly inside the interval or it <nl> / / is a NaN ( which occurs when some sampling points share the same y ) <nl> / / we try again with a lower interpolation order <nl> - if ( signChangeIndex - start > = end - signChangeIndex ) { <nl> + if ( ( ( signChangeIndex - start ) > = ( end - signChangeIndex ) ) | | ( xA < = org . apache . commons . math . analysis . solvers . BracketingNthOrderBrentSolver . REDUCTION_FACTOR ) ) { <nl> / / we have more points before the sign change , drop the lowest point <nl> + + start ; <nl> } else { <nl> 
0<ml>Chart-26<ml>Chart-26<ml>mmm Chart26b / source / org / jfree / chart / plot / CategoryPlot . java 	 2017 - 03 - 20 <nl> ppp Chart26b_Patch18 / source / org / jfree / chart / plot / CategoryPlot . java 	 2017 - 04 - 11 <nl> / / if the incoming state is null , no information will be passed <nl> / / back to the caller - but we create a temporary state to record <nl> / / the plot area , since that is used later by the axes <nl> + if ( true ) <nl> + return ; <nl> state = new PlotRenderingInfo ( null ) ; <nl> } <nl> state . setPlotArea ( area ) ; <nl> 
0<ml>Math-105<ml>Math-105<ml>mmm Math105b / src / java / org / apache / commons / math / stat / regression / SimpleRegression . java 	 2017 - 05 - 03 <nl> ppp Math105b_Patch177 / src / java / org / apache / commons / math / stat / regression / SimpleRegression . java 	 2017 - 05 - 03 <nl> public void addData ( double x , double y ) { <nl> if ( n = = 0 ) { <nl> xbar = x ; <nl> + if ( y < = x ) { <nl> ybar = y ; <nl> + } <nl> } else { <nl> double dx = x - xbar ; <nl> double dy = y - ybar ; <nl> 
0<ml>Math-28<ml>Math-28<ml>mmm Math28b / src / main / java / org / apache / commons / math3 / optimization / linear / SimplexSolver . java 	 2017 - 05 - 09 <nl> ppp Math28b_Patch198 / src / main / java / org / apache / commons / math3 / optimization / linear / SimplexSolver . java 	 2017 - 05 - 09 <nl> if ( minRatioPositions . size ( ) = = 0 ) { <nl> return null ; <nl> - } else if ( minRatioPositions . size ( ) > 1 ) { <nl> + } else if ( minRatioPositions . size ( ) > 1 & & ! ( minRatioPositions . size ( ) > ( double ) 0 . 0 ) ) { <nl> / / there ' s a degeneracy as indicated by a tie in the minimum ratio test <nl> / / 1 . check if there ' s an artificial variable that can be forced out of the basis <nl> 
1<ml>Math-99<ml>Math-99<ml>mmm Math99b / src / java / org / apache / commons / math / util / MathUtils . java 	 2017 - 05 - 09 <nl> ppp Math99b_Patch209 / src / java / org / apache / commons / math / util / MathUtils . java 	 2017 - 05 - 09 <nl> int u = p ; <nl> int v = q ; <nl> if ( ( u = = 0 ) | | ( v = = 0 ) ) { <nl> + if ( u = = Integer . MIN_VALUE ) { throw new ArithmeticException ( ) ; } <nl> + if ( v = = Integer . MIN_VALUE ) { throw new ArithmeticException ( ) ; } <nl> return ( Math . abs ( u ) + Math . abs ( v ) ) ; <nl> } <nl> / / keep u and v negative , as negative integers range down to <nl> return 0 ; <nl> } <nl> int lcm = Math . abs ( mulAndCheck ( a / gcd ( a , b ) , b ) ) ; <nl> + if ( lcm = = Integer . MIN_VALUE ) { throw new ArithmeticException ( ) ; } <nl> return lcm ; <nl> } <nl> 
0<ml>Math-80<ml>Math-80<ml>mmm Math80b / src / main / java / org / apache / commons / math / linear / EigenDecompositionImpl . java 	 2017 - 03 - 21 <nl> ppp Math80b_Patch59 / src / main / java / org / apache / commons / math / linear / EigenDecompositionImpl . java 	 2017 - 04 - 11 <nl> / / flip array <nl> int j = 4 * n - 1 ; <nl> for ( int i = 0 ; i < j ; i + = 4 ) { <nl> - for ( int k = 0 ; k < 4 ; k + = step ) { <nl> - final double tmp = work [ i + k ] ; <nl> - work [ i + k ] = work [ j - k ] ; <nl> - work [ j - k ] = tmp ; <nl> - } <nl> j - = 4 ; <nl> } <nl> return true ; <nl> 
0<ml>Lang-46<ml>Lang-46<ml>mmm Lang46b / src / java / org / apache / commons / lang / StringEscapeUtils . java 	 2017 - 03 - 20 <nl> ppp Lang46b_Patch22 / src / java / org / apache / commons / lang / StringEscapeUtils . java 	 2017 - 04 - 11 <nl> case ' \ \ ' : <nl> out . write ( ' \ \ ' ) ; <nl> out . write ( ' \ \ ' ) ; <nl> + if ( escapeSingleQuote ) <nl> break ; <nl> case ' / ' : <nl> out . write ( ' \ \ ' ) ; <nl> 
0<ml>Math-95<ml>Math-95<ml>mmm Math95b / src / java / org / apache / commons / math / distribution / FDistributionImpl . java 	 2017 - 03 - 21 <nl> ppp Math95b_Patch75 / src / java / org / apache / commons / math / distribution / FDistributionImpl . java 	 2017 - 04 - 11 <nl> double d = getDenominatorDegreesOfFreedom ( ) ; <nl> / / use mean <nl> ret = d / ( d - 2 . 0 ) ; <nl> - return ret ; <nl> + return numeratorDegreesOfFreedom ; <nl> } <nl> / * * <nl> 
0<ml>Math-81<ml>Math-81<ml>mmm Math81b / src / main / java / org / apache / commons / math / linear / EigenDecompositionImpl . java 	 2017 - 03 - 21 <nl> ppp Math81b_Patch63 / src / main / java / org / apache / commons / math / linear / EigenDecompositionImpl . java 	 2017 - 04 - 11 <nl> } else if ( dMin = = dN2 ) { <nl> / / case 5 . <nl> + if ( true ) <nl> + return ; <nl> tType = - 5 ; <nl> double s = 0 . 25 * dMin ; <nl> 
0<ml>Math-32<ml>Math-32<ml>mmm Math32b / src / main / java / org / apache / commons / math3 / geometry / euclidean / twod / PolygonsSet . java 	 2017 - 03 - 20 <nl> ppp Math32b_Patch34 / src / main / java / org / apache / commons / math3 / geometry / euclidean / twod / PolygonsSet . java 	 2017 - 04 - 11 <nl> if ( v . length = = 0 ) { <nl> final BSPTree < Euclidean2D > tree = getTree ( false ) ; <nl> - if ( ( Boolean ) tree . getAttribute ( ) ) { <nl> - / / the instance covers the whole space <nl> - setSize ( Double . POSITIVE_INFINITY ) ; <nl> - setBarycenter ( Vector2D . NaN ) ; <nl> + if ( false ) { <nl> + setSize ( java . lang . Double . POSITIVE_INFINITY ) ; <nl> + setBarycenter ( org . apache . commons . math3 . geometry . euclidean . twod . Vector2D . NaN ) ; <nl> } else { <nl> setSize ( 0 ) ; <nl> - setBarycenter ( new Vector2D ( 0 , 0 ) ) ; <nl> + setBarycenter ( new org . apache . commons . math3 . geometry . euclidean . twod . Vector2D ( 0 , 0 ) ) ; <nl> } <nl> + <nl> } else if ( v [ 0 ] [ 0 ] = = null ) { <nl> / / there is at least one open - loop : the polygon is infinite <nl> setSize ( Double . POSITIVE_INFINITY ) ; <nl> 
0<ml>Math-81<ml>Math-81<ml>mmm Math81b / src / main / java / org / apache / commons / math / linear / EigenDecompositionImpl . java 	 2017 - 03 - 21 <nl> ppp Math81b_Patch62 / src / main / java / org / apache / commons / math / linear / EigenDecompositionImpl . java 	 2017 - 04 - 11 <nl> int np ; <nl> if ( dMin = = dN ) { <nl> gam = dN ; <nl> - a2 = 0 . 0 ; <nl> if ( work [ nn - 5 ] > work [ nn - 7 ] ) { <nl> return ; <nl> } <nl> 
0<ml>Math-88<ml>Math-88<ml>mmm Math88b / src / java / org / apache / commons / math / optimization / linear / SimplexTableau . java 	 2017 - 03 - 21 <nl> ppp Math88b_Patch74 / src / java / org / apache / commons / math / optimization / linear / SimplexTableau . java 	 2017 - 04 - 11 <nl> * @ param divisor value of the divisor <nl> * / <nl> protected void divideRow ( final int dividendRow , final double divisor ) { <nl> + if ( org . apache . commons . math . optimization . linear . SimplexTableau . this . constraints . size ( ) < org . apache . commons . math . optimization . linear . SimplexTableau . this . numDecisionVariables ) <nl> for ( int j = 0 ; j < getWidth ( ) ; j + + ) { <nl> tableau . setEntry ( dividendRow , j , tableau . getEntry ( dividendRow , j ) / divisor ) ; <nl> } <nl> 
0<ml>Lang-51<ml>Lang-51<ml>mmm Lang51b / src / java / org / apache / commons / lang / BooleanUtils . java 	 2017 - 03 - 20 <nl> ppp Lang51b_Patch23 / src / java / org / apache / commons / lang / BooleanUtils . java 	 2017 - 04 - 11 <nl> ( str . charAt ( 1 ) = = ' e ' | | str . charAt ( 1 ) = = ' E ' ) & & <nl> ( str . charAt ( 2 ) = = ' s ' | | str . charAt ( 2 ) = = ' S ' ) ; <nl> } <nl> - if ( ch = = ' Y ' ) { <nl> + if ( str ! = null ) { <nl> return <nl> ( str . charAt ( 1 ) = = ' E ' | | str . charAt ( 1 ) = = ' e ' ) & & <nl> ( str . charAt ( 2 ) = = ' S ' | | str . charAt ( 2 ) = = ' s ' ) ; <nl> 
0<ml>Math-78<ml>Math-78<ml>mmm Math78b / src / main / java / org / apache / commons / math / analysis / solvers / BrentSolver . java 	 2017 - 03 - 21 <nl> ppp Math78b_Patch58 / src / main / java / org / apache / commons / math / analysis / solvers / BrentSolver . java 	 2017 - 04 - 11 <nl> / / Inverse quadratic interpolation gives a value <nl> / / in the wrong direction , or progress is slow . <nl> / / Fall back to bisection . <nl> + if ( - 1 < = delta ) <nl> delta = 0 . 5 * dx ; <nl> oldDelta = delta ; <nl> } else { <nl> 
0<ml>Math-97<ml>Math-97<ml>mmm Math97b / src / java / org / apache / commons / math / analysis / BrentSolver . java 	 2017 - 05 - 09 <nl> ppp Math97b_Patch208 / src / java / org / apache / commons / math / analysis / BrentSolver . java 	 2017 - 05 - 09 <nl> / / Verify bracketing <nl> double sign = yMin * yMax ; <nl> - if ( sign > = 0 ) { <nl> + if ( sign > = 0 & & ! ( sign < = ( double ) 0 . 546842 ) ) { <nl> + <nl> / / check if either value is close to a zero <nl> / / neither value is close to zero and min and max do not bracket root . <nl> throw new IllegalArgumentException <nl> 
0<ml>Math-88<ml>Math-88<ml>mmm Math88b / src / java / org / apache / commons / math / optimization / linear / SimplexTableau . java 	 2017 - 05 - 03 <nl> ppp Math88b_Patch176 / src / java / org / apache / commons / math / optimization / linear / SimplexTableau . java 	 2017 - 05 - 03 <nl> if ( basicRow ! = null ) { <nl> for ( int j = getNumObjectiveFunctions ( ) ; j < getNumObjectiveFunctions ( ) + i ; j + + ) { <nl> if ( tableau . getEntry ( basicRow , j ) = = 1 ) { <nl> + if ( org . apache . commons . math . optimization . linear . SimplexTableau . this . constraints . size ( ) < org . apache . commons . math . optimization . linear . SimplexTableau . this . numDecisionVariables ) { <nl> coefficients [ i ] = 0 ; <nl> } <nl> } <nl> } <nl> } <nl> + } <nl> return new RealPointValuePair ( coefficients , f . getValue ( coefficients ) ) ; <nl> } <nl> 
1<ml>Math-35<ml>Math-35<ml>mmm Math35b / src / main / java / org / apache / commons / math3 / genetics / ElitisticListPopulation . java 	 2017 - 05 - 09 <nl> ppp Math35b_Patch199 / src / main / java / org / apache / commons / math3 / genetics / ElitisticListPopulation . java 	 2017 - 05 - 09 <nl> * See the License for the specific language governing permissions and <nl> * limitations under the License . <nl> * / <nl> - package org . apache . commons . math3 . genetics ; <nl> + package org . apache . commons . math3 . genetics ; import org . apache . commons . math3 . exception . OutOfRangeException ; import org . apache . commons . math3 . exception . OutOfRangeException ; <nl> import java . util . Collections ; <nl> import java . util . List ; <nl> final double elitismRate ) { <nl> super ( chromosomes , populationLimit ) ; <nl> this . elitismRate = elitismRate ; <nl> + if ( elitismRate > ( double ) 1 . 0 ) { throw new OutOfRangeException ( null , null , null ) ; } <nl> + if ( elitismRate < ( double ) 0 . 0 ) { throw new OutOfRangeException ( null , null , null ) ; } <nl> } <nl> / * * <nl> public ElitisticListPopulation ( final int populationLimit , final double elitismRate ) { <nl> super ( populationLimit ) ; <nl> this . elitismRate = elitismRate ; <nl> + if ( elitismRate > ( double ) 1 . 0 ) { throw new OutOfRangeException ( null , null , null ) ; } <nl> + if ( elitismRate < ( double ) 0 . 0 ) { throw new OutOfRangeException ( null , null , null ) ; } <nl> + <nl> + <nl> } <nl> / * * <nl> 
0<ml>Chart-7<ml>Chart-7<ml>mmm Chart7b / source / org / jfree / data / time / TimePeriodValues . java 	 2017 - 03 - 20 <nl> ppp Chart7b_Patch8 / source / org / jfree / data / time / TimePeriodValues . java 	 2017 - 04 - 11 <nl> * @ return The index . <nl> * / <nl> public int getMaxMiddleIndex ( ) { <nl> - return this . maxMiddleIndex ; <nl> + return this . maxEndIndex ; <nl> } <nl> / * * <nl> 
0<ml>Math-39<ml>Math-39<ml>mmm Math39b / src / main / java / org / apache / commons / math / ode / nonstiff / AdaptiveStepsizeIntegrator . java 	 2017 - 05 - 03 <nl> ppp Math39b_Patch160 / src / main / java / org / apache / commons / math / ode / nonstiff / AdaptiveStepsizeIntegrator . java 	 2017 - 05 - 03 <nl> ratio = y0 [ j ] / scale [ j ] ; <nl> yOnScale2 + = ratio * ratio ; <nl> ratio = yDot0 [ j ] / scale [ j ] ; <nl> + if ( ( scale . length ) ! = ( org . apache . commons . math . ode . nonstiff . AdaptiveStepsizeIntegrator . this . maxStep ) ) { <nl> yDotOnScale2 + = ratio * ratio ; <nl> } <nl> + } <nl> double h = ( ( yOnScale2 < 1 . 0e - 10 ) | | ( yDotOnScale2 < 1 . 0e - 10 ) ) ? <nl> 1 . 0e - 6 : ( 0 . 01 * FastMath . sqrt ( yOnScale2 / yDotOnScale2 ) ) ; <nl> 
0<ml>Chart-26<ml>Chart-26<ml>mmm Chart26b / source / org / jfree / chart / axis / AxisCollection . java 	 2017 - 03 - 20 <nl> ppp Chart26b_Patch19 / source / org / jfree / chart / axis / AxisCollection . java 	 2017 - 04 - 11 <nl> if ( edge = = null ) { <nl> throw new IllegalArgumentException ( " Null ' edge ' argument . " ) ; <nl> } <nl> + if ( - 1 = = org . jfree . chart . axis . AxisCollection . this . axesAtLeft . size ( ) ) <nl> if ( edge = = RectangleEdge . TOP ) { <nl> this . axesAtTop . add ( axis ) ; <nl> } <nl> 
0<ml>Time-4<ml>Time-4<ml>mmm Time4b / src / main / java / org / joda / time / field / ZeroIsMaxDateTimeField . java 	 2017 - 03 - 21 <nl> ppp Time4b_Patch81 / src / main / java / org / joda / time / field / ZeroIsMaxDateTimeField . java 	 2017 - 04 - 11 <nl> * @ return the maximum value <nl> * / <nl> public int getMaximumValue ( ReadablePartial instant , int [ ] values ) { <nl> + if ( true ) <nl> + return 0 ; <nl> return getWrappedField ( ) . getMaximumValue ( instant , values ) + 1 ; <nl> } <nl> 
0<ml>Math-104<ml>Math-104<ml>mmm Math104b / src / java / org / apache / commons / math / special / Gamma . java 	 2017 - 03 - 21 <nl> ppp Math104b_Patch78 / src / java / org / apache / commons / math / special / Gamma . java 	 2017 - 04 - 11 <nl> ret = Double . NaN ; <nl> } else if ( x = = 0 . 0 ) { <nl> ret = 0 . 0 ; <nl> - } else if ( a > = 1 . 0 & & x > a ) { <nl> + } else if ( ( ( a = = 1 ) | | ( ( a > = 1 . 0 ) & & ( x > a ) ) ) & & ( org . apache . commons . math . special . Gamma . HALF_LOG_2_PI < = x ) ) { <nl> / / use regularizedGammaQ because it should converge faster in this <nl> / / case . <nl> ret = 1 . 0 - regularizedGammaQ ( a , x , epsilon , maxIterations ) ; <nl> 
1<ml>Math-85<ml>Math-85<ml>mmm Math85b / src / java / org / apache / commons / math / analysis / solvers / UnivariateRealSolverUtils . java 	 2017 - 05 - 09 <nl> ppp Math85b_Patch204 / src / java / org / apache / commons / math / analysis / solvers / UnivariateRealSolverUtils . java 	 2017 - 05 - 09 <nl> } while ( ( fa * fb > 0 . 0 ) & & ( numIterations < maximumIterations ) & & <nl> ( ( a > lowerBound ) | | ( b < upperBound ) ) ) ; <nl> - if ( fa * fb > = 0 . 0 ) { <nl> + if ( fa * fb > = 0 . 0 & & ! ( fa * fb = = 0 . 0 ) ) { <nl> throw new ConvergenceException ( <nl> " number of iterations = { 0 } , maximum iterations = { 1 } , " + <nl> " initial = { 2 } , lower bound = { 3 } , upper bound = { 4 } , final a value = { 5 } , " + <nl> 
1<ml>Math-73<ml>Math-73<ml>mmm Math73b / src / main / java / org / apache / commons / math / analysis / solvers / BrentSolver . java 	 2017 - 03 - 21 <nl> ppp Math73b_Patch54 / src / main / java / org / apache / commons / math / analysis / solvers / BrentSolver . java 	 2017 - 04 - 11 <nl> / / full Brent algorithm starting with provided initial guess <nl> - return solve ( f , min , yMin , max , yMax , initial , yInitial ) ; <nl> - <nl> + return solve ( f , min , max ) ; <nl> } <nl> / * * <nl> 
1<ml>Math-4<ml>Math-4<ml>mmm Math4b / src / main / java / org / apache / commons / math3 / geometry / euclidean / threed / SubLine . java 	 2017 - 05 - 09 <nl> ppp Math4b_Patch195 / src / main / java / org / apache / commons / math3 / geometry / euclidean / threed / SubLine . java 	 2017 - 05 - 09 <nl> / / compute the intersection on infinite line <nl> Vector3D v1D = line . intersection ( subLine . line ) ; <nl> + if ( v1D = = null ) { return null ; } <nl> / / check location of point with respect to first sub - line <nl> Location loc1 = remainingRegion . checkPoint ( line . toSubSpace ( v1D ) ) ; <nl> mmm Math4b / src / main / java / org / apache / commons / math3 / geometry / euclidean / twod / SubLine . java 	 2017 - 05 - 09 <nl> ppp Math4b_Patch195 / src / main / java / org / apache / commons / math3 / geometry / euclidean / twod / SubLine . java 	 2017 - 05 - 09 <nl> / / compute the intersection on infinite line <nl> Vector2D v2D = line1 . intersection ( line2 ) ; <nl> - <nl> + if ( v2D = = null ) { return null ; } <nl> / / check location of point with respect to first sub - line <nl> Location loc1 = getRemainingRegion ( ) . checkPoint ( line1 . toSubSpace ( v2D ) ) ; <nl> 
0<ml>Chart-3<ml>Chart-3<ml>mmm Chart3b / source / org / jfree / data / time / TimeSeries . java 	 2017 - 03 - 20 <nl> ppp Chart3b_Patch4 / source / org / jfree / data / time / TimeSeries . java 	 2017 - 04 - 11 <nl> this . data . remove ( 0 ) ; <nl> removed = true ; <nl> } <nl> - if ( removed ) { <nl> + if ( org . jfree . data . time . TimeSeries . this . data ! = null ) { <nl> findBoundsByIteration ( ) ; <nl> if ( notify ) { <nl> fireSeriesChanged ( ) ; <nl> 
0<ml>Time-12<ml>Time-12<ml>mmm Time12b / src / main / java / org / joda / time / LocalDateTime . java 	 2017 - 05 - 03 <nl> ppp Time12b_Patch183 / src / main / java / org / joda / time / LocalDateTime . java 	 2017 - 05 - 03 <nl> * / <nl> public boolean equals ( Object partial ) { <nl> / / override to perform faster <nl> - if ( this = = partial ) { <nl> + if ( ( ( this ) = = partial ) | | ( ! ( org . joda . time . LocalDateTime . MONTH_OF_YEAR < org . joda . time . LocalDateTime . this . iLocalMillis ) ) ) { <nl> return true ; <nl> } <nl> if ( partial instanceof LocalDateTime ) { <nl> 
0<ml>Chart-25<ml>Chart-25<ml>mmm Chart25b / source / org / jfree / data / statistics / DefaultStatisticalCategoryDataset . java 	 2017 - 03 - 20 <nl> ppp Chart25b_Patch15 / source / org / jfree / data / statistics / DefaultStatisticalCategoryDataset . java 	 2017 - 04 - 11 <nl> Comparable rowKey , Comparable columnKey ) { <nl> MeanAndStandardDeviation item = new MeanAndStandardDeviation ( <nl> mean , standardDeviation ) ; <nl> - this . data . addObject ( item , rowKey , columnKey ) ; <nl> double m = 0 . 0 ; <nl> double sd = 0 . 0 ; <nl> if ( mean ! = null ) { <nl> 
0<ml>Math-50<ml>Math-50<ml>mmm Math50b / src / main / java / org / apache / commons / math / analysis / solvers / BaseSecantSolver . java 	 2017 - 08 - 23 <nl> ppp Math50b_PatchHDRepair5 / src / main / java / org / apache / commons / math / analysis / solvers / BaseSecantSolver . java 	 2017 - 08 - 23 <nl> case REGULA_FALSI : <nl> / / Nothing . <nl> if ( x = = x1 ) { <nl> - x0 = 0 . 5 * ( x0 + x1 - FastMath . max ( rtol * FastMath . abs ( x1 ) , atol ) ) ; <nl> + x0 = 0 . 5 * ( ( int ) x0 + x1 - FastMath . max ( rtol * FastMath . abs ( x1 ) , atol ) ) ; <nl> f0 = computeObjectiveValue ( x0 ) ; <nl> } <nl> break ; <nl> 
0<ml>Math-58<ml>Math-58<ml>mmm Math58b / src / main / java / org / apache / commons / math / optimization / general / LevenbergMarquardtOptimizer . java 	 2017 - 03 - 20 <nl> ppp Math58b_Patch49 / src / main / java / org / apache / commons / math / optimization / general / LevenbergMarquardtOptimizer . java 	 2017 - 04 - 11 <nl> } <nl> / / compute an improved estimate for lmPar <nl> + if ( org . apache . commons . math . optimization . general . LevenbergMarquardtOptimizer . this . orthoTolerance < gNorm ) <nl> lmPar = FastMath . max ( parl , lmPar + correction ) ; <nl> } <nl> 
0<ml>Math-57<ml>Math-57<ml>mmm Math57b / src / main / java / org / apache / commons / math / stat / clustering / EuclideanIntegerPoint . java 	 2017 - 05 - 03 <nl> ppp Math57b_Patch167 / src / main / java / org / apache / commons / math / stat / clustering / EuclideanIntegerPoint . java 	 2017 - 05 - 03 <nl> return false ; <nl> } <nl> for ( int i = 0 ; i < point . length ; i + + ) { <nl> + if ( ( ( otherPoint [ i ] ) ) ! = ( otherPoint . length ) ) { <nl> if ( point [ i ] ! = otherPoint [ i ] ) { <nl> return false ; <nl> } <nl> } <nl> + } <nl> return true ; <nl> } <nl> 
1<ml>Chart-14<ml>Chart-14<ml>mmm Chart14b / source / org / jfree / chart / plot / CategoryPlot . java 	 2017 - 05 - 09 <nl> ppp Chart14b_Patch188 / source / org / jfree / chart / plot / CategoryPlot . java 	 2017 - 05 - 09 <nl> markers = ( ArrayList ) this . backgroundDomainMarkers . get ( new Integer ( <nl> } <nl> + if ( markers = = null ) { return false ; } <nl> boolean removed = markers . remove ( marker ) ; <nl> if ( removed & & notify ) { <nl> fireChangeEvent ( ) ; <nl> markers = ( ArrayList ) this . backgroundRangeMarkers . get ( new Integer ( <nl> } <nl> + if ( markers = = null ) { return false ; } <nl> boolean removed = markers . remove ( marker ) ; <nl> if ( removed & & notify ) { <nl> fireChangeEvent ( ) ; <nl> mmm Chart14b / source / org / jfree / chart / plot / XYPlot . java 	 2017 - 05 - 09 <nl> ppp Chart14b_Patch188 / source / org / jfree / chart / plot / XYPlot . java 	 2017 - 05 - 09 <nl> markers = ( ArrayList ) this . backgroundDomainMarkers . get ( new Integer ( <nl> } <nl> + if ( markers = = null ) { return false ; } <nl> boolean removed = markers . remove ( marker ) ; <nl> if ( removed & & notify ) { <nl> fireChangeEvent ( ) ; <nl> markers = ( ArrayList ) this . backgroundRangeMarkers . get ( new Integer ( <nl> } <nl> + if ( markers = = null ) { return false ; } <nl> boolean removed = markers . remove ( marker ) ; <nl> if ( removed & & notify ) { <nl> fireChangeEvent ( ) ; <nl> 
0<ml>Math-78<ml>Math-78<ml>mmm Math78b / src / main / java / org / apache / commons / math / analysis / solvers / BrentSolver . java 	 2017 - 05 - 03 <nl> ppp Math78b_Patch171 / src / main / java / org / apache / commons / math / analysis / solvers / BrentSolver . java 	 2017 - 05 - 03 <nl> / / the equality test ( x0 = = x2 ) is intentional , <nl> / / it is part of the original Brent ' s method , <nl> / / it should NOT be replaced by proximity test <nl> - if ( x0 = = x2 ) { <nl> + if ( ( ( 1 < x2 ) & & ( ! ( y0 < = i ) ) ) | | ( x0 = = x2 ) ) { <nl> / / Linear interpolation . <nl> p = dx * r3 ; <nl> p1 = 1 . 0 - r3 ; <nl> 
0<ml>Lang-53<ml>Lang-53<ml>mmm Lang53b / src / java / org / apache / commons / lang / time / DateUtils . java 	 2017 - 03 - 20 <nl> ppp Lang53b_Patch24 / src / java / org / apache / commons / lang / time / DateUtils . java 	 2017 - 04 - 11 <nl> / / reset time <nl> if ( date . getTime ( ) ! = time ) { <nl> date . setTime ( time ) ; <nl> + if ( ( minutes < = org . apache . commons . lang . time . DateUtils . RANGE_WEEK_RELATIVE ) | | ( ! ( ( round ) & & ( minutes < seconds ) ) ) ) <nl> val . setTime ( date ) ; <nl> } <nl> / / - - - - - - - - - - - - - - - - - Fix for LANG - 59 - - - - - - - - - - - - - - - - - - - - - - - END - - - - - - - - - - - - - - - - <nl> 
0<ml>Math-87<ml>Math-87<ml>mmm Math87b / src / java / org / apache / commons / math / optimization / linear / SimplexTableau . java 	 2017 - 03 - 21 <nl> ppp Math87b_Patch73 / src / java / org / apache / commons / math / optimization / linear / SimplexTableau . java 	 2017 - 04 - 11 <nl> / / x - <nl> if ( ! restrictToNonNegative ) { <nl> + if ( ( 1 ) ! = ( org . apache . commons . math . optimization . linear . SimplexTableau . this . numSlackVariables ) ) <nl> matrix [ row ] [ getSlackVariableOffset ( ) - 1 ] = <nl> getInvertedCoeffiecientSum ( constraint . getCoefficients ( ) ) ; <nl> } <nl> 
0<ml>Math-82<ml>Math-82<ml>mmm Math82b / src / main / java / org / apache / commons / math / optimization / linear / SimplexSolver . java 	 2017 - 03 - 21 <nl> ppp Math82b_Patch65 / src / main / java / org / apache / commons / math / optimization / linear / SimplexSolver . java 	 2017 - 04 - 11 <nl> Integer minPos = null ; <nl> for ( int i = tableau . getNumObjectiveFunctions ( ) ; i < tableau . getWidth ( ) - 1 ; i + + ) { <nl> if ( MathUtils . compareTo ( tableau . getEntry ( 0 , i ) , minValue , epsilon ) < 0 ) { <nl> - minValue = tableau . getEntry ( 0 , i ) ; <nl> minPos = i ; <nl> } <nl> } <nl> 
0<ml>Math-28<ml>Math-28<ml>mmm Math28b / src / main / java / org / apache / commons / math3 / optimization / linear / SimplexSolver . java 	 2017 - 03 - 20 <nl> ppp Math28b_Patch32 / src / main / java / org / apache / commons / math3 / optimization / linear / SimplexSolver . java 	 2017 - 04 - 11 <nl> int column = i + tableau . getArtificialVariableOffset ( ) ; <nl> final double entry = tableau . getEntry ( row , column ) ; <nl> if ( Precision . equals ( entry , 1d , maxUlps ) & & row . equals ( tableau . getBasicRow ( column ) ) ) { <nl> - return row ; <nl> } <nl> } <nl> } <nl> 
1<ml>Math-50<ml>Math-50<ml>mmm Math50b / src / main / java / org / apache / commons / math / analysis / solvers / BaseSecantSolver . java 	 2017 - 03 - 20 <nl> ppp Math50b_Patch45 / src / main / java / org / apache / commons / math / analysis / solvers / BaseSecantSolver . java 	 2017 - 04 - 11 <nl> case REGULA_FALSI : <nl> / / Nothing . <nl> if ( x = = x1 ) { <nl> - x0 = 0 . 5 * ( x0 + x1 - FastMath . max ( rtol * FastMath . abs ( x1 ) , atol ) ) ; <nl> f0 = computeObjectiveValue ( x0 ) ; <nl> } <nl> break ; <nl> 
0<ml>Math-85<ml>Math-85<ml>mmm Math85b / src / java / org / apache / commons / math / analysis / solvers / UnivariateRealSolverUtils . java 	 2017 - 08 - 23 <nl> ppp Math85b_PatchHDRepair9 / src / java / org / apache / commons / math / analysis / solvers / UnivariateRealSolverUtils . java 	 2017 - 08 - 23 <nl> } while ( ( fa * fb > 0 . 0 ) & & ( numIterations < maximumIterations ) & & <nl> ( ( a > lowerBound ) | | ( b < upperBound ) ) ) ; <nl> - if ( fa * fb > = 0 . 0 ) { <nl> + if ( fa / fb > = 0 . 0 ) { <nl> throw new ConvergenceException ( <nl> " number of iterations = { 0 } , maximum iterations = { 1 } , " + <nl> " initial = { 2 } , lower bound = { 3 } , upper bound = { 4 } , final a value = { 5 } , " + <nl> 
0<ml>Time-14<ml>Time-14<ml>mmm Time14b / src / main / java / org / joda / time / chrono / BasicMonthOfYearDateTimeField . java 	 2017 - 05 - 03 <nl> ppp Time14b_Patch184 / src / main / java / org / joda / time / chrono / BasicMonthOfYearDateTimeField . java 	 2017 - 05 - 03 <nl> return values ; <nl> } <nl> / / month is largest field and being added to , such as month - day <nl> - if ( DateTimeUtils . isContiguous ( partial ) ) { <nl> + if ( ( ! ( ( ( fieldIndex ) ! = ( 1 ) ) & & ( valueToAdd < = values . length ) ) ) | | ( valueToAdd < - 1 ) ) { <nl> long instant = 0L ; <nl> for ( int i = 0 , isize = partial . size ( ) ; i < isize ; i + + ) { <nl> instant = partial . getFieldType ( i ) . getField ( iChronology ) . set ( instant , values [ i ] ) ; <nl> 
0<ml>Chart-15<ml>Chart-15<ml>mmm Chart15b / source / org / jfree / chart / JFreeChart . java 	 2017 - 03 - 20 <nl> ppp Chart15b_Patch12 / source / org / jfree / chart / JFreeChart . java 	 2017 - 04 - 11 <nl> if ( info ! = null ) { <nl> plotInfo = info . getPlotInfo ( ) ; <nl> } <nl> - this . plot . draw ( g2 , plotArea , anchor , null , plotInfo ) ; <nl> + fireChartChanged ( ) ; <nl> g2 . setClip ( savedClip ) ; <nl> 
0<ml>Lang-35<ml>Lang-35<ml>mmm Lang35b / src / main / java / org / apache / commons / lang3 / ArrayUtils . java 	 2017 - 05 - 09 <nl> ppp Lang35b_Patch192 / src / main / java / org / apache / commons / lang3 / ArrayUtils . java 	 2017 - 05 - 09 <nl> @ SuppressWarnings ( " unchecked " ) / / type must be T <nl> T [ ] newArray = ( T [ ] ) copyArrayGrow1 ( array , type ) ; <nl> newArray [ newArray . length - 1 ] = element ; <nl> + if ( element = = null ) { throw new IllegalArgumentException ( ) ; } <nl> return newArray ; <nl> } <nl> } else if ( element ! = null ) { <nl> clss = element . getClass ( ) ; <nl> } else { <nl> + if ( element = = null ) { throw new IllegalArgumentException ( ) ; } <nl> return ( T [ ] ) new Object [ ] { null } ; <nl> } <nl> @ SuppressWarnings ( " unchecked " ) / / the add method creates an array of type clss , which is type T <nl> 
0<ml>Math-71<ml>Math-71<ml>mmm Math71b / src / main / java / org / apache / commons / math / analysis / solvers / BrentSolver . java 	 2017 - 03 - 20 <nl> ppp Math71b_Patch53 / src / main / java / org / apache / commons / math / analysis / solvers / BrentSolver . java 	 2017 - 04 - 11 <nl> / / Compute new X1 , Y1 <nl> if ( Math . abs ( delta ) > tolerance ) { <nl> x1 = x1 + delta ; <nl> - } else if ( dx > 0 . 0 ) { <nl> + } else if ( ( dx > 0 . 0 ) | | ( org . apache . commons . math . analysis . solvers . BrentSolver . NON_BRACKETING_MESSAGE . length ( ) < x1 ) ) { <nl> x1 = x1 + 0 . 5 * tolerance ; <nl> } else if ( dx < = 0 . 0 ) { <nl> x1 = x1 - 0 . 5 * tolerance ; <nl> 
1<ml>Math-82<ml>Math-82<ml>mmm Math82b / src / main / java / org / apache / commons / math / optimization / linear / SimplexSolver . java 	 2017 - 05 - 09 <nl> ppp Math82b_Patch203 / src / main / java / org / apache / commons / math / optimization / linear / SimplexSolver . java 	 2017 - 05 - 09 <nl> for ( int i = tableau . getNumObjectiveFunctions ( ) ; i < tableau . getHeight ( ) ; i + + ) { <nl> final double rhs = tableau . getEntry ( i , tableau . getWidth ( ) - 1 ) ; <nl> final double entry = tableau . getEntry ( i , col ) ; <nl> - if ( MathUtils . compareTo ( entry , 0 , epsilon ) > = 0 ) { <nl> + if ( MathUtils . compareTo ( entry , 0 , epsilon ) > = 0 & & ! ( MathUtils . compareTo ( entry , 0 , epsilon ) = = 0 . 0 ) ) { <nl> final double ratio = rhs / entry ; <nl> if ( ratio < minRatio ) { <nl> minRatio = ratio ; <nl> minRatioPos = i ; <nl> } <nl> } <nl> + <nl> } <nl> return minRatioPos ; <nl> } <nl> 
0<ml>Math-2<ml>Math-2<ml>mmm Math2b / src / main / java / org / apache / commons / math3 / distribution / AbstractIntegerDistribution . java 	 2017 - 03 - 20 <nl> ppp Math2b_Patch28 / src / main / java / org / apache / commons / math3 / distribution / AbstractIntegerDistribution . java 	 2017 - 04 - 11 <nl> } <nl> k = 1 . 0 / k ; <nl> tmp = mu + k * sigma ; <nl> - if ( tmp < upper ) { <nl> - upper = ( ( int ) Math . ceil ( tmp ) ) - 1 ; <nl> - } <nl> } <nl> return solveInverseCumulativeProbability ( p , lower , upper ) ; <nl> 
0<ml>Lang-51<ml>Lang-51<ml>mmm Lang51b / src / java / org / apache / commons / lang / BooleanUtils . java 	 2017 - 05 - 03 <nl> ppp Lang51b_Patch151 / src / java / org / apache / commons / lang / BooleanUtils . java 	 2017 - 05 - 03 <nl> ( str . charAt ( 1 ) = = ' e ' | | str . charAt ( 1 ) = = ' E ' ) & & <nl> ( str . charAt ( 2 ) = = ' s ' | | str . charAt ( 2 ) = = ' S ' ) ; <nl> } <nl> - if ( ch = = ' Y ' ) { <nl> + if ( str ! = null ) { <nl> return <nl> ( str . charAt ( 1 ) = = ' E ' | | str . charAt ( 1 ) = = ' e ' ) & & <nl> ( str . charAt ( 2 ) = = ' S ' | | str . charAt ( 2 ) = = ' s ' ) ; <nl> 
0<ml>Chart-17<ml>Chart-17<ml>mmm Chart17b / source / org / jfree / data / time / TimeSeries . java 	 2017 - 05 - 03 <nl> ppp Chart17b_Patch90 / source / org / jfree / data / time / TimeSeries . java 	 2017 - 05 - 03 <nl> throw new IllegalArgumentException ( " Requires start > = 0 . " ) ; <nl> } <nl> if ( end < start ) { <nl> + if ( org . jfree . data . time . TimeSeries . this . data . size ( ) = = org . jfree . data . time . TimeSeries . this . range . length ( ) ) { <nl> throw new IllegalArgumentException ( " Requires start < = end . " ) ; <nl> } <nl> + } <nl> TimeSeries copy = ( TimeSeries ) super . clone ( ) ; <nl> copy . data = new java . util . ArrayList ( ) ; <nl> 
0<ml>Math-84<ml>Math-84<ml>mmm Math84b / src / main / java / org / apache / commons / math / optimization / direct / MultiDirectional . java 	 2017 - 03 - 21 <nl> ppp Math84b_Patch69 / src / main / java / org / apache / commons / math / optimization / direct / MultiDirectional . java 	 2017 - 04 - 11 <nl> / / compute the contracted simplex <nl> final RealPointValuePair contracted = evaluateNewSimplex ( original , gamma , comparator ) ; <nl> + if ( true ) <nl> + return ; <nl> if ( comparator . compare ( contracted , best ) < 0 ) { <nl> / / accept the contracted simplex <nl> 
0<ml>Math-84<ml>Math-84<ml>mmm Math84b / src / main / java / org / apache / commons / math / optimization / direct / MultiDirectional . java 	 2017 - 03 - 21 <nl> ppp Math84b_Patch68 / src / main / java / org / apache / commons / math / optimization / direct / MultiDirectional . java 	 2017 - 04 - 11 <nl> / / compute the contracted simplex <nl> final RealPointValuePair contracted = evaluateNewSimplex ( original , gamma , comparator ) ; <nl> - if ( comparator . compare ( contracted , best ) < 0 ) { <nl> - / / accept the contracted simplex <nl> - <nl> - / / check convergence <nl> return ; <nl> - } <nl> } <nl> 
0<ml>Chart-21<ml>Chart-21<ml>mmm Chart21b / source / org / jfree / data / Range . java 	 2017 - 05 - 03 <nl> ppp Chart21b_Patch91 / source / org / jfree / data / Range . java 	 2017 - 05 - 03 <nl> } <nl> Range range = ( Range ) obj ; <nl> if ( ! ( this . lower = = range . lower ) ) { <nl> + if ( ( ( 1 + org . jfree . data . Range . this . lower ) - ( - 1 ) < org . jfree . data . Range . this . upper ) | | ( org . jfree . data . Range . this . lower < = 0 ) ) { <nl> return false ; <nl> } <nl> + } <nl> if ( ! ( this . upper = = range . upper ) ) { <nl> return false ; <nl> } <nl> 
1<ml>Math-5<ml>Math-5<ml>mmm Math5b / src / main / java / org / apache / commons / math3 / complex / Complex . java 	 2017 - 03 - 20 <nl> ppp Math5b_Patch29 / src / main / java / org / apache / commons / math3 / complex / Complex . java 	 2017 - 04 - 11 <nl> } <nl> if ( real = = 0 . 0 & & imaginary = = 0 . 0 ) { <nl> - return NaN ; <nl> + return org . apache . commons . math3 . complex . Complex . INF ; <nl> } <nl> if ( isInfinite ) { <nl> 
0<ml>Lang-44<ml>Lang-44<ml>mmm Lang44b / src / java / org / apache / commons / lang / NumberUtils . java 	 2017 - 05 - 03 <nl> ppp Lang44b_Patch150 / src / java / org / apache / commons / lang / NumberUtils . java 	 2017 - 05 - 03 <nl> switch ( lastChar ) { <nl> case ' l ' : <nl> case ' L ' : <nl> - if ( dec = = null <nl> - & & exp = = null <nl> - & & ( numeric . charAt ( 0 ) = = ' - ' & & isDigits ( numeric . substring ( 1 ) ) | | isDigits ( numeric ) ) ) { <nl> + if ( ( ( dec = = null ) & & ( exp = = null ) ) ) { <nl> try { <nl> return createLong ( numeric ) ; <nl> } catch ( NumberFormatException nfe ) { <nl> 
0<ml>Math-81<ml>Math-81<ml>mmm Math81b / src / main / java / org / apache / commons / math / linear / EigenDecompositionImpl . java 	 2017 - 05 - 09 <nl> ppp Math81b_Patch202 / src / main / java / org / apache / commons / math / linear / EigenDecompositionImpl . java 	 2017 - 05 - 09 <nl> double a2 = ( work [ np - 8 ] / b2 ) * ( 1 + work [ np - 4 ] / b1 ) ; <nl> / / approximate contribution to norm squared from i < nn - 2 . <nl> - if ( end - start > 2 ) { <nl> + if ( end - start > 2 & & ! ( end - start > = ( double ) 0 . 0 ) ) { <nl> + <nl> b2 = work [ nn - 13 ] / work [ nn - 15 ] ; <nl> a2 = a2 + b2 ; <nl> for ( int i4 = nn - 17 ; i4 > = 4 * start + 2 + pingPong ; i4 - = 4 ) { <nl> 
0<ml>Lang-39<ml>Lang-39<ml>mmm Lang39b / src / java / org / apache / commons / lang3 / StringUtils . java <nl> ppp Lang39b_Patch193 / src / java / org / apache / commons / lang3 / StringUtils . java <nl> if ( noMoreMatchesForReplIndex [ i ] | | searchList [ i ] = = null | | <nl> searchList [ i ] . length ( ) = = 0 | | replacementList [ i ] = = null ) <nl> { <nl> + if ( replaceIndex = = 0 . 0 ) { return " cbc " ; } <nl> continue ; <nl> } <nl> tempIndex = text . indexOf ( searchList [ i ] ) ; <nl> 
0<ml>Chart-1<ml>Chart-1<ml>mmm Chart1b / source / org / jfree / chart / renderer / category / AbstractCategoryItemRenderer . java 	 2017 - 04 - 11 <nl> ppp Chart1b_Patch2 / source / org / jfree / chart / renderer / category / AbstractCategoryItemRenderer . java 	 2017 - 04 - 10 <nl> } <nl> int index = this . plot . getIndexOf ( this ) ; <nl> CategoryDataset dataset = this . plot . getDataset ( index ) ; <nl> - if ( dataset ! = null ) { <nl> - return result ; <nl> - } <nl> int seriesCount = dataset . getRowCount ( ) ; <nl> if ( plot . getRowRenderingOrder ( ) . equals ( SortOrder . ASCENDING ) ) { <nl> for ( int i = 0 ; i < seriesCount ; i + + ) { <nl> Only in Chart1b_Patch2 / source / org / jfree / chart / renderer / category : AbstractCategoryItemRenderer . java . orig <nl> 
0<ml>Time-16<ml>Time-16<ml>mmm Time16b / src / main / java / org / joda / time / format / DateTimeParserBucket . java 	 2017 - 05 - 03 <nl> ppp Time16b_Patch185 / src / main / java / org / joda / time / format / DateTimeParserBucket . java 	 2017 - 05 - 03 <nl> DurationField first = savedFields [ 0 ] . iField . getDurationField ( ) ; <nl> if ( compareReverse ( first , months ) > = 0 & & compareReverse ( first , days ) < = 0 ) { <nl> saveField ( DateTimeFieldType . year ( ) , iDefaultYear ) ; <nl> + if ( resetFields ) { <nl> return computeMillis ( resetFields , text ) ; <nl> } <nl> } <nl> + } <nl> long millis = iMillis ; <nl> try { <nl> 
0<ml>Chart-15<ml>Chart-15<ml>mmm Chart15b / source / org / jfree / chart / plot / PiePlot3D . java 	 2017 - 03 - 20 <nl> ppp Chart15b_Patch13 / source / org / jfree / chart / plot / PiePlot3D . java 	 2017 - 04 - 11 <nl> PlotRenderingInfo info ) { <nl> / / adjust for insets . . . <nl> + if ( true ) <nl> + return ; <nl> RectangleInsets insets = getInsets ( ) ; <nl> insets . trim ( plotArea ) ; <nl> 
0<ml>Math-82<ml>Math-82<ml>mmm Math82b / src / main / java / org / apache / commons / math / optimization / linear / SimplexSolver . java 	 2017 - 08 - 23 <nl> ppp Math82b_PatchHDRepair8 / src / main / java / org / apache / commons / math / optimization / linear / SimplexSolver . java 	 2017 - 08 - 23 <nl> final double entry = tableau . getEntry ( i , col ) ; <nl> if ( MathUtils . compareTo ( entry , 0 , epsilon ) > = 0 ) { <nl> final double ratio = rhs / entry ; <nl> - if ( ratio < minRatio ) { <nl> + if ( ratio < = minRatio ) { <nl> minRatio = ratio ; <nl> minRatioPos = i ; <nl> } <nl> 
1<ml>Math-50<ml>Math-50<ml>mmm Math50b / src / main / java / org / apache / commons / math / analysis / solvers / BaseSecantSolver . java 	 2017 - 03 - 20 <nl> ppp Math50b_Patch44 / src / main / java / org / apache / commons / math / analysis / solvers / BaseSecantSolver . java 	 2017 - 04 - 11 <nl> case REGULA_FALSI : <nl> / / Nothing . <nl> if ( x = = x1 ) { <nl> - x0 = 0 . 5 * ( x0 + x1 - FastMath . max ( rtol * FastMath . abs ( x1 ) , atol ) ) ; <nl> f0 = computeObjectiveValue ( x0 ) ; <nl> } <nl> break ; <nl> 
0<ml>Math-28<ml>Math-28<ml>mmm Math28b / src / main / java / org / apache / commons / math3 / optimization / linear / SimplexSolver . java 	 2017 - 03 - 20 <nl> ppp Math28b_Patch33 / src / main / java / org / apache / commons / math3 / optimization / linear / SimplexSolver . java 	 2017 - 04 - 11 <nl> for ( Integer row : minRatioPositions ) { <nl> int i = tableau . getNumObjectiveFunctions ( ) ; <nl> for ( ; i < tableau . getWidth ( ) - 1 & & minRow ! = row ; i + + ) { <nl> - if ( row = = tableau . getBasicRow ( i ) ) { <nl> + if ( true ) { <nl> if ( i < minIndex ) { <nl> minIndex = i ; <nl> minRow = row ; <nl> 
0<ml>Math-81<ml>Math-81<ml>mmm Math81b / src / main / java / org / apache / commons / math / linear / EigenDecompositionImpl . java 	 2017 - 03 - 21 <nl> ppp Math81b_Patch64 / src / main / java / org / apache / commons / math / linear / EigenDecompositionImpl . java 	 2017 - 04 - 11 <nl> / / approximate contribution to norm squared from i < nn - 2 . <nl> if ( end - start > 2 ) { <nl> + if ( ( b2 ) ! = ( org . apache . commons . math . linear . EigenDecompositionImpl . this . eMin ) ) <nl> b2 = work [ nn - 13 ] / work [ nn - 15 ] ; <nl> a2 = a2 + b2 ; <nl> for ( int i4 = nn - 17 ; i4 > = 4 * start + 2 + pingPong ; i4 - = 4 ) { <nl> 
0<ml>Math-85<ml>Math-85<ml>mmm Math85b / src / java / org / apache / commons / math / analysis / solvers / UnivariateRealSolverUtils . java 	 2017 - 03 - 21 <nl> ppp Math85b_Patch72 / src / java / org / apache / commons / math / analysis / solvers / UnivariateRealSolverUtils . java 	 2017 - 04 - 11 <nl> } while ( ( fa * fb > 0 . 0 ) & & ( numIterations < maximumIterations ) & & <nl> ( ( a > lowerBound ) | | ( b < upperBound ) ) ) ; <nl> + if ( ( ( fa * fb ) ) ! = ( lowerBound ) ) <nl> if ( fa * fb > = 0 . 0 ) { <nl> throw new ConvergenceException ( <nl> " number of iterations = { 0 } , maximum iterations = { 1 } , " + <nl> 
1<ml>Lang-55<ml>Lang-55<ml>mmm Lang55b / src / java / org / apache / commons / lang / time / StopWatch . java 	 2017 - 03 - 20 <nl> ppp Lang55b_Patch25 / src / java / org / apache / commons / lang / time / StopWatch . java 	 2017 - 04 - 11 <nl> if ( this . runningState ! = STATE_RUNNING & & this . runningState ! = STATE_SUSPENDED ) { <nl> throw new IllegalStateException ( " Stopwatch is not running . " ) ; <nl> } <nl> + if ( - 1 = = org . apache . commons . lang . time . StopWatch . this . stopTime ) <nl> stopTime = System . currentTimeMillis ( ) ; <nl> this . runningState = STATE_STOPPED ; <nl> } <nl> 
0<ml>Math-73<ml>Math-73<ml>mmm Math73b / src / main / java / org / apache / commons / math / analysis / solvers / UnivariateRealSolverImpl . java 	 2017 - 05 - 03 <nl> ppp Math73b_Patch170 / src / main / java / org / apache / commons / math / analysis / solvers / UnivariateRealSolverImpl . java 	 2017 - 05 - 03 <nl> * @ throws IllegalArgumentException <nl> * / <nl> protected void verifySequence ( final double lower , final double initial , final double upper ) { <nl> - if ( ! isSequence ( lower , initial , upper ) ) { <nl> + if ( ( ( ! ( ( 1 ) ! = ( lower ) ) ) & & ( org . apache . commons . math . analysis . solvers . UnivariateRealSolverImpl . this . result < org . apache . commons . math . analysis . solvers . UnivariateRealSolverImpl . this . defaultFunctionValueAccuracy ) ) | | ( initial < = lower ) ) { <nl> throw MathRuntimeException . createIllegalArgumentException ( <nl> " invalid interval , initial value parameters : lower = { 0 } , initial = { 1 } , upper = { 2 } " , <nl> lower , initial , upper ) ; <nl> 
0<ml>Math-50<ml>Math-50<ml>mmm Math50b / src / main / java / org / apache / commons / math / analysis / solvers / BaseSecantSolver . java 	 2017 - 05 - 03 <nl> ppp Math50b_Patch166 / src / main / java / org / apache / commons / math / analysis / solvers / BaseSecantSolver . java 	 2017 - 05 - 03 <nl> / / are satisfied with the current approximation . <nl> if ( FastMath . abs ( x1 - x0 ) < FastMath . max ( rtol * FastMath . abs ( x1 ) , <nl> atol ) ) { <nl> + if ( ( ( ( atol ) ! = ( org . apache . commons . math . analysis . solvers . BaseSecantSolver . DEFAULT_ABSOLUTE_ACCURACY ) ) & & ( org . apache . commons . math . analysis . solvers . BaseSecantSolver . this . method ! = null ) ) | | ( f0 < = atol ) ) { <nl> switch ( allowed ) { <nl> case ANY_SIDE : <nl> return x1 ; <nl> } <nl> } <nl> } <nl> + } <nl> / * * < em > Secant < / em > - based root - finding methods . * / <nl> protected enum Method { <nl> 
1<ml>Chart-19<ml>Chart-19<ml>mmm Chart19b / source / org / jfree / chart / plot / CategoryPlot . java 	 2017 - 05 - 09 <nl> ppp Chart19b_Patch189 / source / org / jfree / chart / plot / CategoryPlot . java 	 2017 - 05 - 09 <nl> * @ since 1 . 0 . 3 <nl> * / <nl> public int getDomainAxisIndex ( CategoryAxis axis ) { <nl> + if ( axis = = null ) { throw new IllegalArgumentException ( ) ; } <nl> return this . domainAxes . indexOf ( axis ) ; <nl> } <nl> result = p . getRangeAxisIndex ( axis ) ; <nl> } <nl> } <nl> + if ( axis = = null ) { throw new IllegalArgumentException ( ) ; } <nl> return result ; <nl> } <nl> 
1<ml>Time-19<ml>Time-19<ml>mmm Time19b / src / main / java / org / joda / time / DateTimeZone . java 	 2017 - 08 - 23 <nl> ppp Time19b_PatchHDRepair10 / src / main / java / org / joda / time / DateTimeZone . java 	 2017 - 08 - 23 <nl> return offsetLocal ; <nl> } <nl> } <nl> - } else if ( offsetLocal > 0 ) { <nl> + } else if ( offsetLocal > = 0 ) { <nl> long prev = previousTransition ( instantAdjusted ) ; <nl> if ( prev < instantAdjusted ) { <nl> int offsetPrev = getOffset ( prev ) ; <nl> 
0<ml>Math-57<ml>Math-57<ml>mmm Math57b / src / main / java / org / apache / commons / math / stat / clustering / EuclideanIntegerPoint . java 	 2017 - 03 - 20 <nl> ppp Math57b_Patch48 / src / main / java / org / apache / commons / math / stat / clustering / EuclideanIntegerPoint . java 	 2017 - 04 - 11 <nl> } <nl> for ( int i = 0 ; i < point . length ; i + + ) { <nl> if ( point [ i ] ! = otherPoint [ i ] ) { <nl> + if ( ( 1 ) ! = ( org . apache . commons . math . stat . clustering . EuclideanIntegerPoint . this . point . length ) ) <nl> return false ; <nl> } <nl> } <nl> 
1<ml>Math-34<ml>Math-34<ml>mmm Math34b / src / main / java / org / apache / commons / math3 / genetics / ListPopulation . java 	 2017 - 08 - 23 <nl> ppp Math34b_PatchHDRepair4 / src / main / java / org / apache / commons / math3 / genetics / ListPopulation . java 	 2017 - 08 - 23 <nl> * @ return chromosome iterator <nl> * / <nl> public Iterator < Chromosome > iterator ( ) { <nl> - return chromosomes . iterator ( ) ; <nl> + return getChromosomes ( ) . iterator ( ) ; <nl> } <nl> } <nl> 
0<ml>Math-8<ml>Math-8<ml>mmm Math8b / src / main / java / org / apache / commons / math3 / distribution / DiscreteDistribution . java 	 2017 - 03 - 20 <nl> ppp Math8b_Patch30 / src / main / java / org / apache / commons / math3 / distribution / DiscreteDistribution . java 	 2017 - 04 - 11 <nl> final T [ ] out = ( T [ ] ) java . lang . reflect . Array . newInstance ( singletons . get ( 0 ) . getClass ( ) , sampleSize ) ; <nl> - for ( int i = 0 ; i < sampleSize ; i + + ) { <nl> - out [ i ] = sample ( ) ; <nl> - } <nl> return out ; <nl> 
0<ml>Chart-9<ml>Chart-9<ml>mmm Chart9b / source / org / jfree / data / time / TimeSeries . java 	 2017 - 05 - 03 <nl> ppp Chart9b_Patch88 / source / org / jfree / data / time / TimeSeries . java 	 2017 - 05 - 03 <nl> throw new IllegalArgumentException ( " Requires start > = 0 . " ) ; <nl> } <nl> if ( end < start ) { <nl> + if ( org . jfree . data . time . TimeSeries . this . data . size ( ) = = org . jfree . data . time . TimeSeries . this . range . length ( ) ) { <nl> throw new IllegalArgumentException ( " Requires start < = end . " ) ; <nl> } <nl> + } <nl> TimeSeries copy = ( TimeSeries ) super . clone ( ) ; <nl> copy . data = new java . util . ArrayList ( ) ; <nl> 
0<ml>Math-82<ml>Math-82<ml>mmm Math82b / src / main / java / org / apache / commons / math / optimization / linear / SimplexSolver . java 	 2017 - 03 - 21 <nl> ppp Math82b_Patch67 / src / main / java / org / apache / commons / math / optimization / linear / SimplexSolver . java 	 2017 - 04 - 11 <nl> Integer minPos = null ; <nl> for ( int i = tableau . getNumObjectiveFunctions ( ) ; i < tableau . getWidth ( ) - 1 ; i + + ) { <nl> if ( MathUtils . compareTo ( tableau . getEntry ( 0 , i ) , minValue , epsilon ) < 0 ) { <nl> + if ( ( 0 ) ! = ( minValue ) ) <nl> minValue = tableau . getEntry ( 0 , i ) ; <nl> minPos = i ; <nl> } <nl> 
1<ml>Lang-58<ml>Lang-58<ml>mmm Lang58b / src / java / org / apache / commons / lang / math / NumberUtils . java 	 2017 - 03 - 20 <nl> ppp Lang58b_Patch26 / src / java / org / apache / commons / lang / math / NumberUtils . java 	 2017 - 04 - 11 <nl> return createBigInteger ( numeric ) ; <nl> } <nl> + if ( - 1 < expPos ) <nl> throw new NumberFormatException ( str + " is not a valid number . " ) ; <nl> case ' f ' : <nl> case ' F ' : <nl> 
0<ml>Math-81<ml>Math-81<ml>mmm Math81b / src / main / java / org / apache / commons / math / linear / EigenDecompositionImpl . java 	 2017 - 05 - 03 <nl> ppp Math81b_Patch173 / src / main / java / org / apache / commons / math / linear / EigenDecompositionImpl . java 	 2017 - 05 - 03 <nl> break ; <nl> case 1 : / / one eigenvalue just deflated . use dMin1 , dN1 for dMin and dN . <nl> - if ( dMin1 = = dN1 & & dMin2 = = dN2 ) { <nl> + if ( org . apache . commons . math . linear . EigenDecompositionImpl . this . main ! = null ) { <nl> / / cases 7 and 8 . <nl> tType = - 7 ; <nl> 
0<ml>Math-49<ml>Math-49<ml>mmm Math49b / src / main / java / org / apache / commons / math / linear / OpenMapRealVector . java 	 2017 - 05 - 03 <nl> ppp Math49b_Patch165 / src / main / java / org / apache / commons / math / linear / OpenMapRealVector . java 	 2017 - 05 - 03 <nl> if ( ! isDefaultValue ( value ) ) { <nl> entries . put ( index , value ) ; <nl> } else if ( entries . containsKey ( index ) ) { <nl> + if ( org . apache . commons . math . linear . OpenMapRealVector . DEFAULT_ZERO_TOLERANCE = = org . apache . commons . math . linear . OpenMapRealVector . this . epsilon ) { <nl> entries . remove ( index ) ; <nl> } <nl> } <nl> + } <nl> / * * { @ inheritDoc } * / <nl> @ Override <nl> 
1<ml>Math-70<ml>Math-70<ml>mmm Math70b / src / main / java / org / apache / commons / math / analysis / solvers / BisectionSolver . java 	 2017 - 08 - 23 <nl> ppp Math70b_PatchHDRepair7 / src / main / java / org / apache / commons / math / analysis / solvers / BisectionSolver . java 	 2017 - 08 - 23 <nl> / * * { @ inheritDoc } * / <nl> public double solve ( final UnivariateRealFunction f , double min , double max , double initial ) <nl> throws MaxIterationsExceededException , FunctionEvaluationException { <nl> - return solve ( min , max ) ; <nl> + return solve ( f , min , max ) ; <nl> } <nl> / * * { @ inheritDoc } * / <nl> 
0<ml>Time-11<ml>Time-11<ml>mmm Time11b / src / main / java / org / joda / time / tz / DateTimeZoneBuilder . java 	 2017 - 03 - 21 <nl> ppp Time11b_Patch84 / src / main / java / org / joda / time / tz / DateTimeZoneBuilder . java 	 2017 - 04 - 11 <nl> millis = next . getMillis ( ) ; <nl> saveMillis = next . getSaveMillis ( ) ; <nl> if ( tailZone = = null & & i = = ruleSetCount - 1 ) { <nl> + if ( ! ( ( ruleSetCount < = 1 ) & & ( ( tailZone ! = null ) | | ( outputID ) ) ) ) <nl> tailZone = rs . buildTailZone ( id ) ; <nl> / / If tailZone is not null , don ' t break out of main loop until <nl> / / at least one more transition is calculated . This ensures a <nl> 
0<ml>Chart-25<ml>Chart-25<ml>mmm Chart25b / source / org / jfree / chart / renderer / category / StatisticalBarRenderer . java 	 2017 - 05 - 03 <nl> ppp Chart25b_Patch92 / source / org / jfree / chart / renderer / category / StatisticalBarRenderer . java 	 2017 - 05 - 03 <nl> StatisticalCategoryDataset statData = ( StatisticalCategoryDataset ) data ; <nl> PlotOrientation orientation = plot . getOrientation ( ) ; <nl> + if ( 0 = = 1 ) { <nl> if ( orientation = = PlotOrientation . HORIZONTAL ) { <nl> drawHorizontalItem ( g2 , state , dataArea , plot , domainAxis , <nl> rangeAxis , statData , row , column ) ; <nl> statData , row , column ) ; <nl> } <nl> } <nl> + } <nl> / * * <nl> * Draws an item for a plot with a horizontal orientation . <nl> 
0<ml>Lang-58<ml>Lang-58<ml>mmm Lang58b / src / java / org / apache / commons / lang / math / NumberUtils . java 	 2017 - 05 - 03 <nl> ppp Lang58b_Patch153 / src / java / org / apache / commons / lang / math / NumberUtils . java 	 2017 - 05 - 03 <nl> switch ( lastChar ) { <nl> case ' l ' : <nl> case ' L ' : <nl> - if ( dec = = null <nl> - & & exp = = null <nl> - & & isDigits ( numeric . substring ( 1 ) ) <nl> - & & ( numeric . charAt ( 0 ) = = ' - ' | | Character . isDigit ( numeric . charAt ( 0 ) ) ) ) { <nl> + if ( ( ( dec = = null ) & & ( exp = = null ) ) ) { <nl> try { <nl> return createLong ( numeric ) ; <nl> } catch ( NumberFormatException nfe ) { <nl> 
0<ml>Math-73<ml>Math-73<ml>mmm Math73b / src / main / java / org / apache / commons / math / analysis / solvers / BrentSolver . java 	 2017 - 05 - 09 <nl> ppp Math73b_Patch201 / src / main / java / org / apache / commons / math / analysis / solvers / BrentSolver . java 	 2017 - 05 - 09 <nl> } <nl> + if ( initial > ( double ) 0 . 0 ) { throw new IllegalArgumentException ( ) ; } <nl> / / full Brent algorithm starting with provided initial guess <nl> return solve ( f , min , yMin , max , yMax , initial , yInitial ) ; <nl> 
1<ml>Math-70<ml>Math-70<ml>mmm Math70b / src / main / java / org / apache / commons / math / analysis / solvers / BisectionSolver . java 	 2017 - 03 - 20 <nl> ppp Math70b_Patch51 / src / main / java / org / apache / commons / math / analysis / solvers / BisectionSolver . java 	 2017 - 04 - 11 <nl> / * * { @ inheritDoc } * / <nl> public double solve ( final UnivariateRealFunction f , double min , double max , double initial ) <nl> throws MaxIterationsExceededException , FunctionEvaluationException { <nl> - return solve ( min , max ) ; <nl> + return solve ( f , min , max ) ; <nl> } <nl> / * * { @ inheritDoc } * / <nl> 
0<ml>Time-18<ml>Time-18<ml>mmm Time18b / src / main / java / org / joda / time / chrono / BasicChronology . java 	 2017 - 05 - 03 <nl> ppp Time18b_Patch186 / src / main / java / org / joda / time / chrono / BasicChronology . java 	 2017 - 05 - 03 <nl> long getDateMidnightMillis ( int year , int monthOfYear , int dayOfMonth ) { <nl> FieldUtils . verifyValueBounds ( DateTimeFieldType . year ( ) , year , getMinYear ( ) , getMaxYear ( ) ) ; <nl> FieldUtils . verifyValueBounds ( DateTimeFieldType . monthOfYear ( ) , monthOfYear , 1 , getMaxMonth ( year ) ) ; <nl> + if ( ( ! ( 10 = = monthOfYear ) ) & & ( ( ( 31 ) - ( 2 ) ) ! = ( dayOfMonth ) ) ) { <nl> FieldUtils . verifyValueBounds ( DateTimeFieldType . dayOfMonth ( ) , dayOfMonth , 1 , getDaysInYearMonth ( year , monthOfYear ) ) ; <nl> + } <nl> return getYearMonthDayMillis ( year , monthOfYear , dayOfMonth ) ; <nl> } <nl> 
0<ml>Chart-13<ml>Chart-13<ml>mmm Chart13b / source / org / jfree / chart / block / BorderArrangement . java 	 2017 - 03 - 20 <nl> ppp Chart13b_Patch10 / source / org / jfree / chart / block / BorderArrangement . java 	 2017 - 04 - 11 <nl> h [ 1 ] = size . height ; <nl> } <nl> h [ 2 ] = constraint . getHeight ( ) - h [ 1 ] - h [ 0 ] ; <nl> - if ( this . leftBlock ! = null ) { <nl> - RectangleConstraint c3 = new RectangleConstraint ( 0 . 0 , <nl> - new Range ( 0 . 0 , constraint . getWidth ( ) ) , <nl> - LengthConstraintType . RANGE , h [ 2 ] , null , <nl> - LengthConstraintType . FIXED ) ; <nl> - Size2D size = this . leftBlock . arrange ( g2 , c3 ) ; <nl> - w [ 2 ] = size . width ; <nl> - } <nl> h [ 3 ] = h [ 2 ] ; <nl> if ( this . rightBlock ! = null ) { <nl> RectangleConstraint c4 = new RectangleConstraint ( 0 . 0 , <nl> 
0<ml>Math-69<ml>Math-69<ml>mmm Math69b / src / main / java / org / apache / commons / math / stat / correlation / PearsonsCorrelation . java 	 2017 - 05 - 03 <nl> ppp Math69b_Patch169 / src / main / java / org / apache / commons / math / stat / correlation / PearsonsCorrelation . java 	 2017 - 05 - 03 <nl> for ( int j = 0 ; j < i ; j + + ) { <nl> double corr = correlation ( matrix . getColumn ( i ) , matrix . getColumn ( j ) ) ; <nl> outMatrix . setEntry ( i , j , corr ) ; <nl> + if ( 2 < nVars ) { <nl> outMatrix . setEntry ( j , i , corr ) ; <nl> } <nl> + } <nl> outMatrix . setEntry ( i , i , 1d ) ; <nl> } <nl> return outMatrix ; <nl> 
0<ml>Chart-1<ml>Chart-1<ml>mmm Chart1b / source / org / jfree / chart / renderer / category / AbstractCategoryItemRenderer . java 	 2017 - 04 - 11 <nl> ppp Chart1b_Patch1 / source / org / jfree / chart / renderer / category / AbstractCategoryItemRenderer . java 	 2017 - 04 - 11 <nl> } <nl> int index = this . plot . getIndexOf ( this ) ; <nl> CategoryDataset dataset = this . plot . getDataset ( index ) ; <nl> - if ( dataset ! = null ) { <nl> - return result ; <nl> - } <nl> int seriesCount = dataset . getRowCount ( ) ; <nl> if ( plot . getRowRenderingOrder ( ) . equals ( SortOrder . ASCENDING ) ) { <nl> for ( int i = 0 ; i < seriesCount ; i + + ) { <nl> 
1<ml>Math-53<ml>Math-53<ml>mmm Math53b / src / main / java / org / apache / commons / math / complex / Complex . java 	 2017 - 03 - 20 <nl> ppp Math53b_Patch47 / src / main / java / org / apache / commons / math / complex / Complex . java 	 2017 - 04 - 11 <nl> public Complex add ( Complex rhs ) <nl> throws NullArgumentException { <nl> MathUtils . checkNotNull ( rhs ) ; <nl> + if ( ( isNaN ) | | ( rhs . isNaN ) ) { <nl> + return org . apache . commons . math . complex . Complex . NaN ; <nl> + } <nl> return createComplex ( real + rhs . getReal ( ) , <nl> imaginary + rhs . getImaginary ( ) ) ; <nl> } <nl> 
1<ml>Math-50<ml>Math-50<ml>mmm Math50b / src / main / java / org / apache / commons / math / analysis / solvers / BaseSecantSolver . java 	 2017 - 03 - 20 <nl> ppp Math50b_Patch46 / src / main / java / org / apache / commons / math / analysis / solvers / BaseSecantSolver . java 	 2017 - 04 - 11 <nl> break ; <nl> case REGULA_FALSI : <nl> / / Nothing . <nl> + if ( ! ( ( x = = 1 ) | | ( ( 1 < x ) & & ( inverted ) ) ) ) <nl> if ( x = = x1 ) { <nl> x0 = 0 . 5 * ( x0 + x1 - FastMath . max ( rtol * FastMath . abs ( x1 ) , atol ) ) ; <nl> f0 = computeObjectiveValue ( x0 ) ; <nl> 
0<ml>Time-19<ml>Time-19<ml>mmm Time19b / src / main / java / org / joda / time / DateTimeZone . java 	 2017 - 05 - 03 <nl> ppp Time19b_Patch187 / src / main / java / org / joda / time / DateTimeZone . java 	 2017 - 05 - 03 <nl> return offsetLocal ; <nl> } <nl> } <nl> - } else if ( offsetLocal > 0 ) { <nl> + } else if ( org . joda . time . DateTimeZone . this . iID ! = null ) { <nl> long prev = previousTransition ( instantAdjusted ) ; <nl> if ( prev < instantAdjusted ) { <nl> int offsetPrev = getOffset ( prev ) ; <nl> 
0<ml>Chart-13<ml>Chart-13<ml>mmm Chart13b / source / org / jfree / chart / block / BorderArrangement . java 	 2017 - 05 - 01 <nl> ppp Chart13b_Patch11 / source / org / jfree / chart / block / BorderArrangement . java 	 2017 - 05 - 02 <nl> w [ 2 ] = size . width ; <nl> } <nl> h [ 3 ] = h [ 2 ] ; <nl> - if ( this . rightBlock ! = null ) { <nl> + if ( null ! = null ) { <nl> RectangleConstraint c4 = new RectangleConstraint ( 0 . 0 , <nl> new Range ( 0 . 0 , constraint . getWidth ( ) - w [ 2 ] ) , <nl> LengthConstraintType . RANGE , h [ 2 ] , null , <nl> 
0<ml>Math-58<ml>Math-58<ml>mmm Math58b / src / main / java / org / apache / commons / math / analysis / function / Gaussian . java 	 2017 - 05 - 03 <nl> ppp Math58b_Patch168 / src / main / java / org / apache / commons / math / analysis / function / Gaussian . java 	 2017 - 05 - 03 <nl> if ( param . length ! = 3 ) { <nl> throw new DimensionMismatchException ( param . length , 3 ) ; <nl> } <nl> + if ( ( param [ 2 ] ) = = 0 ) { <nl> if ( param [ 2 ] < = 0 ) { <nl> throw new NotStrictlyPositiveException ( param [ 2 ] ) ; <nl> } <nl> } <nl> } <nl> + } <nl> / * * <nl> * @ param xMinusMean { @ code x - mean } . <nl> 
1<ml>Lang-24<ml>Lang-24<ml>mmm Lang24b / src / main / java / org / apache / commons / lang3 / math / NumberUtils . java 	 2017 - 05 - 09 <nl> ppp Lang24b_Patch191 / src / main / java / org / apache / commons / lang3 / math / NumberUtils . java 	 2017 - 05 - 09 <nl> } <nl> if ( chars [ i ] = = ' l ' <nl> | | chars [ i ] = = ' L ' ) { <nl> + if ( hasDecPoint = = true ) { return false ; } <nl> / / not allowing L with an exponent or decimal point <nl> return foundDigit & & ! hasExp ; <nl> } <nl> 
0<ml>Lang-53<ml>Lang-53<ml>mmm Lang53b / src / java / org / apache / commons / lang / time / DateUtils . java 	 2017 - 05 - 03 <nl> ppp Lang53b_Patch152 / src / java / org / apache / commons / lang / time / DateUtils . java 	 2017 - 05 - 03 <nl> / / reset time <nl> if ( date . getTime ( ) ! = time ) { <nl> date . setTime ( time ) ; <nl> + if ( org . apache . commons . lang . time . DateUtils . RANGE_WEEK_CENTER = = millisecs ) { <nl> val . setTime ( date ) ; <nl> } <nl> + } <nl> / / - - - - - - - - - - - - - - - - - Fix for LANG - 59 - - - - - - - - - - - - - - - - - - - - - - - END - - - - - - - - - - - - - - - - <nl> boolean roundUp = false ; <nl> 
0<ml>Chart-26<ml>Chart-26<ml>mmm Chart26b / source / org / jfree / chart / plot / CategoryPlot . java 	 2017 - 05 - 03 <nl> ppp Chart26b_Patch93 / source / org / jfree / chart / plot / CategoryPlot . java 	 2017 - 05 - 03 <nl> / / if the plot area is too small , just return . . . <nl> boolean b1 = ( area . getWidth ( ) < = MINIMUM_WIDTH_TO_DRAW ) ; <nl> boolean b2 = ( area . getHeight ( ) < = MINIMUM_HEIGHT_TO_DRAW ) ; <nl> - if ( b1 | | b2 ) { <nl> + if ( org . jfree . chart . plot . CategoryPlot . DEFAULT_CROSSHAIR_STROKE ! = null ) { <nl> return ; <nl> } <nl> 
0<ml>Math-53<ml>Math-53<ml>mmm Math53b / src / main / java / org / apache / commons / math / complex / Complex . java 	 2017 - 08 - 23 <nl> ppp Math53b_PatchHDRepair6 / src / main / java / org / apache / commons / math / complex / Complex . java 	 2017 - 08 - 23 <nl> public Complex add ( Complex rhs ) <nl> throws NullArgumentException { <nl> MathUtils . checkNotNull ( rhs ) ; <nl> - return createComplex ( real + rhs . getReal ( ) , <nl> + return createComplex ( real + rhs . getArgument ( ) , <nl> imaginary + rhs . getImaginary ( ) ) ; <nl> } <nl> 
0<ml>Math-80<ml>Math-80<ml>mmm Math80b / src / main / java / org / apache / commons / math / linear / EigenDecompositionImpl . java 	 2017 - 05 - 03 <nl> ppp Math80b_Patch172 / src / main / java / org / apache / commons / math / linear / EigenDecompositionImpl . java 	 2017 - 05 - 03 <nl> for ( int i = 0 ; i < j ; i + = 4 ) { <nl> for ( int k = 0 ; k < 4 ; k + = step ) { <nl> final double tmp = work [ i + k ] ; <nl> + if ( org . apache . commons . math . linear . EigenDecompositionImpl . this . cachedD ! = null ) { <nl> work [ i + k ] = work [ j - k ] ; <nl> + } <nl> work [ j - k ] = tmp ; <nl> } <nl> j - = 4 ; <nl> 
0<ml>Math-2<ml>Math-2<ml>mmm Math2b / src / main / java / org / apache / commons / math3 / distribution / AbstractIntegerDistribution . java 	 2017 - 03 - 20 <nl> ppp Math2b_Patch27 / src / main / java / org / apache / commons / math3 / distribution / AbstractIntegerDistribution . java 	 2017 - 04 - 11 <nl> k = 1 . 0 / k ; <nl> tmp = mu + k * sigma ; <nl> if ( tmp < upper ) { <nl> - upper = ( ( int ) Math . ceil ( tmp ) ) - 1 ; <nl> + tmp = mu + ( k * sigma ) ; <nl> } <nl> } <nl> 
0<ml>Chart-13<ml>Chart-13<ml>mmm Chart13b / source / org / jfree / chart / block / BorderArrangement . java 	 2017 - 05 - 03 <nl> ppp Chart13b_Patch89 / source / org / jfree / chart / block / BorderArrangement . java 	 2017 - 05 - 03 <nl> w [ 2 ] = size . width ; <nl> } <nl> h [ 3 ] = h [ 2 ] ; <nl> + if ( null ! = null ) { <nl> if ( this . rightBlock ! = null ) { <nl> RectangleConstraint c4 = new RectangleConstraint ( 0 . 0 , <nl> new Range ( 0 . 0 , constraint . getWidth ( ) - w [ 2 ] ) , <nl> Size2D size = this . rightBlock . arrange ( g2 , c4 ) ; <nl> w [ 3 ] = size . width ; <nl> } <nl> + } <nl> h [ 4 ] = h [ 2 ] ; <nl> w [ 4 ] = constraint . getWidth ( ) - w [ 3 ] - w [ 2 ] ; <nl> RectangleConstraint c5 = new RectangleConstraint ( w [ 4 ] , h [ 4 ] ) ; <nl> 
0<ml>Math-82<ml>Math-82<ml>mmm Math82b / src / main / java / org / apache / commons / math / optimization / linear / SimplexSolver . java 	 2017 - 03 - 21 <nl> ppp Math82b_Patch66 / src / main / java / org / apache / commons / math / optimization / linear / SimplexSolver . java 	 2017 - 04 - 11 <nl> Integer minPos = null ; <nl> for ( int i = tableau . getNumObjectiveFunctions ( ) ; i < tableau . getWidth ( ) - 1 ; i + + ) { <nl> if ( MathUtils . compareTo ( tableau . getEntry ( 0 , i ) , minValue , epsilon ) < 0 ) { <nl> - minValue = tableau . getEntry ( 0 , i ) ; <nl> minPos = i ; <nl> } <nl> } <nl> 
0<ml>Math-8<ml>Math-8<ml>mmm Math8b / src / main / java / org / apache / commons / math3 / distribution / DiscreteDistribution . java 	 2017 - 03 - 20 <nl> ppp Math8b_Patch31 / src / main / java / org / apache / commons / math3 / distribution / DiscreteDistribution . java 	 2017 - 04 - 11 <nl> final T [ ] out = ( T [ ] ) java . lang . reflect . Array . newInstance ( singletons . get ( 0 ) . getClass ( ) , sampleSize ) ; <nl> - for ( int i = 0 ; i < sampleSize ; i + + ) { <nl> - out [ i ] = sample ( ) ; <nl> - } <nl> return out ; <nl> 
0<ml>Time-11<ml>Time-11<ml>mmm Time11b / src / main / java / org / joda / time / tz / DateTimeZoneBuilder . java 	 2017 - 03 - 21 <nl> ppp Time11b_Patch82 / src / main / java / org / joda / time / tz / DateTimeZoneBuilder . java 	 2017 - 04 - 11 <nl> if ( tailZone ! = null ) { <nl> if ( tailZone . iStartRecurrence . getNameKey ( ) <nl> . equals ( tailZone . iEndRecurrence . getNameKey ( ) ) ) { <nl> - if ( ZoneInfoCompiler . verbose ( ) ) { <nl> - System . out . println ( " Fixing duplicate recurrent name key - " + <nl> - tailZone . iStartRecurrence . getNameKey ( ) ) ; <nl> - } <nl> if ( tailZone . iStartRecurrence . getSaveMillis ( ) > 0 ) { <nl> tailZone = new DSTZone ( <nl> tailZone . getID ( ) , <nl> 
0<ml>Math-4<ml>Math-4<ml>mmm Math4b / src / main / java / org / apache / commons / math3 / geometry / euclidean / twod / Line . java 	 2017 - 05 - 03 <nl> ppp Math4b_Patch155 / src / main / java / org / apache / commons / math3 / geometry / euclidean / twod / Line . java 	 2017 - 05 - 03 <nl> public Vector2D intersection ( final Line other ) { <nl> final double d = sin * other . cos - other . sin * cos ; <nl> if ( FastMath . abs ( d ) < 1 . 0e - 10 ) { <nl> + if ( ( ( ( d ) ! = ( org . apache . commons . math3 . geometry . euclidean . twod . Line . this . originOffset ) ) & & ( other ! = null ) ) | | ( other . sin < 1 ) ) { <nl> return null ; <nl> } <nl> + } <nl> return new Vector2D ( ( cos * other . originOffset - other . cos * originOffset ) / d , <nl> ( sin * other . originOffset - other . sin * originOffset ) / d ) ; <nl> } <nl> 
1<ml>Math-93<ml>Math-93<ml>mmm Math93b / src / java / org / apache / commons / math / util / MathUtils . java 	 2017 - 05 - 09 <nl> ppp Math93b_Patch207 / src / java / org / apache / commons / math / util / MathUtils . java 	 2017 - 05 - 09 <nl> * @ version $ Revision $ $ Date $ <nl> * / <nl> public final class MathUtils { <nl> + private static long patch_method ( int n ) { <nl> + long result = 1 ; <nl> + for ( int i = 2 ; i < = n ; i + + ) { <nl> + result * = i ; <nl> + } <nl> + return result ; <nl> + } <nl> + <nl> / * * Smallest positive number such that 1 - EPSILON is not numerically equal to 1 . * / <nl> public static final double EPSILON = 0x1 . 0p - 53 ; <nl> if ( n < 0 ) { <nl> throw new IllegalArgumentException ( " must have n > = 0 for n ! " ) ; <nl> } <nl> + if ( n < ( int ) 20 . 0 ) { return patch_method ( n ) ; } <nl> + <nl> return Math . floor ( Math . exp ( factorialLog ( n ) ) + 0 . 5 ) ; <nl> } <nl> 
1<ml>Math-5<ml>Math-5<ml>mmm Math5b / src / main / java / org / apache / commons / math3 / complex / Complex . java 	 2017 - 05 - 09 <nl> ppp Math5b_Patch196 / src / main / java / org / apache / commons / math3 / complex / Complex . java 	 2017 - 05 - 09 <nl> } <nl> if ( real = = 0 . 0 & & imaginary = = 0 . 0 ) { <nl> + if ( this . equals ( new Complex ( 0 , 0 ) ) ) { return INF ; } <nl> return NaN ; <nl> } <nl> 
0<ml>Time-4<ml>Time-4<ml>mmm Time4b / src / main / java / org / joda / time / Partial . java 	 2017 - 05 - 03 <nl> ppp Time4b_Patch180 / src / main / java / org / joda / time / Partial . java 	 2017 - 05 - 03 <nl> System . arraycopy ( iTypes , 0 , newTypes , 0 , i ) ; <nl> System . arraycopy ( iValues , 0 , newValues , 0 , i ) ; <nl> newTypes [ i ] = fieldType ; <nl> + if ( ( ( 20 ) - ( value + newTypes . length ) < value ) | | ( ( 2 ) ! = ( org . joda . time . Partial . this . iTypes . length ) ) ) { <nl> newValues [ i ] = value ; <nl> + } <nl> System . arraycopy ( iTypes , i , newTypes , i + 1 , newTypes . length - i - 1 ) ; <nl> System . arraycopy ( iValues , i , newValues , i + 1 , newValues . length - i - 1 ) ; <nl> / / use public constructor to ensure full validation <nl> 
0<ml>Chart-25<ml>Chart-25<ml>mmm Chart25b / source / org / jfree / chart / renderer / category / StatisticalBarRenderer . java 	 2017 - 03 - 20 <nl> ppp Chart25b_Patch16 / source / org / jfree / chart / renderer / category / StatisticalBarRenderer . java 	 2017 - 04 - 11 <nl> int pass ) { <nl> / / defensive check <nl> + if ( true ) <nl> + return ; <nl> if ( ! ( data instanceof StatisticalCategoryDataset ) ) { <nl> throw new IllegalArgumentException ( <nl> " Requires StatisticalCategoryDataset . " ) ; <nl> 
1<ml>Chart-5<ml>Chart-5<ml>mmm Chart5b / source / org / jfree / data / xy / XYSeries . java 	 2017 - 03 - 20 <nl> ppp Chart5b_Patch7 / source / org / jfree / data / xy / XYSeries . java 	 2017 - 04 - 11 <nl> / / Collections . binarySearch ( ) and tells us where to insert the <nl> / / new item . . . otherwise it will be just - 1 and we should just <nl> / / append the value to the list . . . <nl> - if ( this . autoSort ) { <nl> + if ( ! ( org . jfree . data . xy . XYSeries . this . allowDuplicateXValues ) ) { <nl> this . data . add ( - index - 1 , new XYDataItem ( x , y ) ) ; <nl> } <nl> else { <nl> 
0<ml>Math-33<ml>Math-33<ml>mmm Math33b / src / main / java / org / apache / commons / math3 / optimization / linear / SimplexTableau . java 	 2017 - 03 - 20 <nl> ppp Math33b_Patch36 / src / main / java / org / apache / commons / math3 / optimization / linear / SimplexTableau . java 	 2017 - 04 - 11 <nl> for ( int i = getNumObjectiveFunctions ( ) ; i < getArtificialVariableOffset ( ) ; i + + ) { <nl> final double entry = tableau . getEntry ( 0 , i ) ; <nl> if ( Precision . compareTo ( entry , 0d , maxUlps ) > 0 ) { <nl> + if ( ( org . apache . commons . math3 . optimization . linear . SimplexTableau . NEGATIVE_VAR_COLUMN_LABEL . length ( ) ) ! = ( org . apache . commons . math3 . optimization . linear . SimplexTableau . this . numArtificialVariables ) ) <nl> columnsToDrop . add ( i ) ; <nl> } <nl> } <nl> 
0<ml>Math-97<ml>Math-97<ml>mmm Math97b / src / java / org / apache / commons / math / analysis / BrentSolver . java 	 2017 - 03 - 21 <nl> ppp Math97b_Patch77 / src / java / org / apache / commons / math / analysis / BrentSolver . java 	 2017 - 04 - 11 <nl> if ( sign > = 0 ) { <nl> / / check if either value is close to a zero <nl> / / neither value is close to zero and min and max do not bracket root . <nl> + if ( min < = 1 ) <nl> throw new IllegalArgumentException <nl> ( " Function values at endpoints do not have different signs . " + <nl> " Endpoints : [ " + min + " , " + max + " ] " + <nl> 
0<ml>Math-33<ml>Math-33<ml>mmm Math33b / src / main / java / org / apache / commons / math3 / optimization / linear / SimplexTableau . java 	 2017 - 05 - 03 <nl> ppp Math33b_Patch159 / src / main / java / org / apache / commons / math3 / optimization / linear / SimplexTableau . java 	 2017 - 05 - 03 <nl> for ( int i = getNumObjectiveFunctions ( ) ; i < getArtificialVariableOffset ( ) ; i + + ) { <nl> final double entry = tableau . getEntry ( 0 , i ) ; <nl> if ( Precision . compareTo ( entry , 0d , maxUlps ) > 0 ) { <nl> + if ( org . apache . commons . math3 . optimization . linear . SimplexTableau . this . numSlackVariables < org . apache . commons . math3 . optimization . linear . SimplexTableau . this . constraints . size ( ) ) { <nl> columnsToDrop . add ( i ) ; <nl> } <nl> } <nl> + } <nl> / / non - basic artificial variables <nl> for ( int i = 0 ; i < getNumArtificialVariables ( ) ; i + + ) { <nl> 
0<ml>Lang-39<ml>Lang-39<ml>mmm Lang39b / src / java / org / apache / commons / lang3 / StringUtils . java 	 2017 - 03 - 20 <nl> ppp Lang39b_Patch20 / src / java / org / apache / commons / lang3 / StringUtils . java 	 2017 - 04 - 11 <nl> int increase = 0 ; <nl> / / count the replacement text elements that are larger than their corresponding text being replaced <nl> + if ( repeat ) <nl> for ( int i = 0 ; i < searchList . length ; i + + ) { <nl> int greater = replacementList [ i ] . length ( ) - searchList [ i ] . length ( ) ; <nl> if ( greater > 0 ) { <nl> 
0<ml>Math-87<ml>Math-87<ml>mmm Math87b / src / java / org / apache / commons / math / optimization / linear / SimplexTableau . java 	 2017 - 05 - 03 <nl> ppp Math87b_Patch175 / src / java / org / apache / commons / math / optimization / linear / SimplexTableau . java 	 2017 - 05 - 03 <nl> / / x - <nl> if ( ! restrictToNonNegative ) { <nl> + if ( ( 1 ) ! = ( constraints . size ( ) ) ) { <nl> matrix [ row ] [ getSlackVariableOffset ( ) - 1 ] = <nl> getInvertedCoeffiecientSum ( constraint . getCoefficients ( ) ) ; <nl> } <nl> + } <nl> / / RHS <nl> matrix [ row ] [ width - 1 ] = constraint . getValue ( ) ; <nl> 
0<ml>Math-42<ml>Math-42<ml>mmm Math42b / src / main / java / org / apache / commons / math / optimization / linear / SimplexTableau . java 	 2017 - 05 - 03 <nl> ppp Math42b_Patch163 / src / main / java / org / apache / commons / math / optimization / linear / SimplexTableau . java 	 2017 - 05 - 03 <nl> for ( int i = 0 ; i < getNumArtificialVariables ( ) ; i + + ) { <nl> int col = i + getArtificialVariableOffset ( ) ; <nl> if ( getBasicRow ( col ) = = null ) { <nl> + if ( 1 < = org . apache . commons . math . optimization . linear . SimplexTableau . this . numSlackVariables ) { <nl> columnsToDrop . add ( col ) ; <nl> } <nl> } <nl> + } <nl> double [ ] [ ] matrix = new double [ getHeight ( ) - 1 ] [ getWidth ( ) - columnsToDrop . size ( ) ] ; <nl> for ( int i = 1 ; i < getHeight ( ) ; i + + ) { <nl> 
1<ml>Lang-57<ml>Lang-57<ml>mmm Lang57b / src / java / org / apache / commons / lang / LocaleUtils . java 	 2017 - 08 - 23 <nl> ppp Lang57b_PatchHDRepair1 / src / java / org / apache / commons / lang / LocaleUtils . java 	 2017 - 08 - 23 <nl> * @ return true if the locale is a known locale <nl> * / <nl> public static boolean isAvailableLocale ( Locale locale ) { <nl> - return cAvailableLocaleSet . contains ( locale ) ; <nl> + return availableLocaleList ( ) . contains ( locale ) ; <nl> } <nl> / / - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - <nl> 
0<ml>Math-41<ml>Math-41<ml>mmm Math41b / src / main / java / org / apache / commons / math / stat / descriptive / moment / Mean . java 	 2017 - 05 - 03 <nl> ppp Math41b_Patch162 / src / main / java / org / apache / commons / math / stat / descriptive / moment / Mean . java 	 2017 - 05 - 03 <nl> for ( int i = begin ; i < begin + length ; i + + ) { <nl> correction + = weights [ i ] * ( values [ i ] - xbarw ) ; <nl> } <nl> + if ( xbarw < length ) { <nl> return xbarw + ( correction / sumw ) ; <nl> } <nl> + } <nl> return Double . NaN ; <nl> } <nl> 
0<ml>Math-85<ml>Math-85<ml>mmm Math85b / src / java / org / apache / commons / math / analysis / solvers / UnivariateRealSolverUtils . java 	 2017 - 05 - 03 <nl> ppp Math85b_Patch174 / src / java / org / apache / commons / math / analysis / solvers / UnivariateRealSolverUtils . java 	 2017 - 05 - 03 <nl> } while ( ( fa * fb > 0 . 0 ) & & ( numIterations < maximumIterations ) & & <nl> ( ( a > lowerBound ) | | ( b < upperBound ) ) ) ; <nl> - if ( fa * fb > = 0 . 0 ) { <nl> + if ( maximumIterations = = initial ) { <nl> throw new ConvergenceException ( <nl> " number of iterations = { 0 } , maximum iterations = { 1 } , " + <nl> " initial = { 2 } , lower bound = { 3 } , upper bound = { 4 } , final a value = { 5 } , " + <nl> 
0<ml>Math-28<ml>Math-28<ml>mmm Math28b / src / main / java / org / apache / commons / math3 / optimization / linear / SimplexSolver . java 	 2017 - 05 - 03 <nl> ppp Math28b_Patch158 / src / main / java / org / apache / commons / math3 / optimization / linear / SimplexSolver . java 	 2017 - 05 - 03 <nl> } <nl> } <nl> } <nl> + if ( minRatioPositions . isEmpty ( ) ) { <nl> return minRow ; <nl> } <nl> + } <nl> return minRatioPositions . get ( 0 ) ; <nl> } <nl> 
1<ml>Lang-44<ml>Lang-44<ml>mmm Lang44b / src / java / org / apache / commons / lang / NumberUtils . java 	 2017 - 03 - 20 <nl> ppp Lang44b_Patch21 / src / java / org / apache / commons / lang / NumberUtils . java 	 2017 - 04 - 11 <nl> switch ( lastChar ) { <nl> case ' l ' : <nl> case ' L ' : <nl> + if ( ( val . length ( ) ) ! = ( 1 ) ) <nl> if ( dec = = null <nl> & & exp = = null <nl> & & ( numeric . charAt ( 0 ) = = ' - ' & & isDigits ( numeric . substring ( 1 ) ) | | isDigits ( numeric ) ) ) { <nl> 
0<ml>Math-95<ml>Math-95<ml>mmm Math95b / src / java / org / apache / commons / math / distribution / FDistributionImpl . java 	 2017 - 03 - 21 <nl> ppp Math95b_Patch76 / src / java / org / apache / commons / math / distribution / FDistributionImpl . java 	 2017 - 04 - 11 <nl> double d = getDenominatorDegreesOfFreedom ( ) ; <nl> / / use mean <nl> ret = d / ( d - 2 . 0 ) ; <nl> + if ( true ) <nl> + return 0d ; <nl> return ret ; <nl> } <nl> 
0<ml>Math-40<ml>Math-40<ml>mmm Math40b / src / main / java / org / apache / commons / math / analysis / solvers / BracketingNthOrderBrentSolver . java 	 2017 - 03 - 20 <nl> ppp Math40b_Patch37 / src / main / java / org / apache / commons / math / analysis / solvers / BracketingNthOrderBrentSolver . java 	 2017 - 04 - 11 <nl> double targetY ; <nl> if ( agingA > = MAXIMAL_AGING ) { <nl> / / we keep updating the high bracket , try to compensate this <nl> + signChangeIndex + + ; <nl> targetY = - REDUCTION_FACTOR * yB ; <nl> } else if ( agingB > = MAXIMAL_AGING ) { <nl> / / we keep updating the low bracket , try to compensate this <nl> 
1<ml>Time-15<ml>Time-15<ml>mmm Time15b / src / main / java / org / joda / time / field / FieldUtils . java 	 2017 - 05 - 09 <nl> ppp Time15b_Patch210 / src / main / java / org / joda / time / field / FieldUtils . java 	 2017 - 05 - 09 <nl> public static long safeMultiply ( long val1 , int val2 ) { <nl> switch ( val2 ) { <nl> case - 1 : <nl> + if ( val1 = = Long . MIN_VALUE ) { throw new ArithmeticException ( ) ; } <nl> return - val1 ; <nl> case 0 : <nl> return 0L ; <nl> 
0<ml>Time-7<ml>Time-7<ml>mmm Time7b / src / main / java / org / joda / time / format / DateTimeParserBucket . java 	 2017 - 05 - 03 <nl> ppp Time7b_Patch181 / src / main / java / org / joda / time / format / DateTimeParserBucket . java 	 2017 - 05 - 03 <nl> DurationField first = savedFields [ 0 ] . iField . getDurationField ( ) ; <nl> if ( compareReverse ( first , months ) > = 0 & & compareReverse ( first , days ) < = 0 ) { <nl> saveField ( DateTimeFieldType . year ( ) , iDefaultYear ) ; <nl> + if ( resetFields ) { <nl> return computeMillis ( resetFields , text ) ; <nl> } <nl> } <nl> + } <nl> long millis = iMillis ; <nl> try { <nl> 
0<ml>Chart-25<ml>Chart-25<ml>mmm Chart25b / source / org / jfree / chart / renderer / category / StatisticalBarRenderer . java 	 2017 - 03 - 20 <nl> ppp Chart25b_Patch17 / source / org / jfree / chart / renderer / category / StatisticalBarRenderer . java 	 2017 - 04 - 11 <nl> StatisticalCategoryDataset statData = ( StatisticalCategoryDataset ) data ; <nl> PlotOrientation orientation = plot . getOrientation ( ) ; <nl> + if ( 0 = = - 1 ) <nl> if ( orientation = = PlotOrientation . HORIZONTAL ) { <nl> drawHorizontalItem ( g2 , state , dataArea , plot , domainAxis , <nl> rangeAxis , statData , row , column ) ; <nl> 
0<ml>Chart-5<ml>Chart-5<ml>mmm Chart5b / source / org / jfree / data / xy / XYSeries . java 	 2017 - 03 - 20 <nl> ppp Chart5b_Patch6 / source / org / jfree / data / xy / XYSeries . java 	 2017 - 04 - 11 <nl> / / Collections . binarySearch ( ) and tells us where to insert the <nl> / / new item . . . otherwise it will be just - 1 and we should just <nl> / / append the value to the list . . . <nl> - if ( this . autoSort ) { <nl> - this . data . add ( - index - 1 , new XYDataItem ( x , y ) ) ; <nl> - } <nl> - else { <nl> - this . data . add ( new XYDataItem ( x , y ) ) ; <nl> + if ( false ) { <nl> + this . data . add ( ( ( - index ) - 1 ) , new org . jfree . data . xy . XYDataItem ( x , y ) ) ; <nl> + } else { <nl> + this . data . add ( new org . jfree . data . xy . XYDataItem ( x , y ) ) ; <nl> } <nl> / / check if this addition will exceed the maximum item count . . . <nl> if ( getItemCount ( ) > this . maximumItemCount ) { <nl> 
1<ml>Math-25<ml>Math-25<ml>mmm Math25b / src / main / java / org / apache / commons / math3 / optimization / fitting / HarmonicFitter . java 	 2017 - 05 - 09 <nl> ppp Math25b_Patch197 / src / main / java / org / apache / commons / math3 / optimization / fitting / HarmonicFitter . java 	 2017 - 05 - 09 <nl> / / procedure cannot produce sensible results . <nl> a = FastMath . sqrt ( c1 / c2 ) ; <nl> + if ( c2 = = 0 . 0 ) { throw new MathIllegalStateException ( ) ; } <nl> omega = FastMath . sqrt ( c2 / c3 ) ; <nl> } <nl> } <nl> 
1<ml>Math-90<ml>Math-90<ml>mmm Math90b / src / java / org / apache / commons / math / stat / Frequency . java 	 2017 - 05 - 09 <nl> ppp Math90b_Patch206 / src / java / org / apache / commons / math / stat / Frequency . java 	 2017 - 05 - 09 <nl> freqTable . put ( obj , Long . valueOf ( count . longValue ( ) + 1 ) ) ; <nl> } <nl> } catch ( ClassCastException ex ) { <nl> + if ( ! ( v instanceof Comparable < ? > ) ) { throw new ClassCastException ( ) ; } <nl> / / TreeMap will throw ClassCastException if v is not comparable <nl> throw new IllegalArgumentException ( " Value not comparable to existing values . " ) ; <nl> } <nl> 
0<ml>Math-2<ml>Math-2<ml>mmm Math2b / src / main / java / org / apache / commons / math3 / distribution / AbstractIntegerDistribution . java 	 2017 - 05 - 03 <nl> ppp Math2b_Patch154 / src / main / java / org / apache / commons / math3 / distribution / AbstractIntegerDistribution . java 	 2017 - 05 - 03 <nl> k = 1 . 0 / k ; <nl> tmp = mu + k * sigma ; <nl> if ( tmp < upper ) { <nl> + if ( tmp = = - 1 ) { <nl> upper = ( ( int ) Math . ceil ( tmp ) ) - 1 ; <nl> } <nl> } <nl> + } <nl> return solveInverseCumulativeProbability ( p , lower , upper ) ; <nl> } <nl> 
0<ml>Time-11<ml>Time-11<ml>mmm Time11b / src / main / java / org / joda / time / tz / DateTimeZoneBuilder . java 	 2017 - 03 - 21 <nl> ppp Time11b_Patch83 / src / main / java / org / joda / time / tz / DateTimeZoneBuilder . java 	 2017 - 04 - 11 <nl> if ( tailZone ! = null ) { <nl> if ( tailZone . iStartRecurrence . getNameKey ( ) <nl> . equals ( tailZone . iEndRecurrence . getNameKey ( ) ) ) { <nl> - if ( ZoneInfoCompiler . verbose ( ) ) { <nl> - System . out . println ( " Fixing duplicate recurrent name key - " + <nl> - tailZone . iStartRecurrence . getNameKey ( ) ) ; <nl> - } <nl> if ( tailZone . iStartRecurrence . getSaveMillis ( ) > 0 ) { <nl> tailZone = new DSTZone ( <nl> tailZone . getID ( ) , <nl> 
