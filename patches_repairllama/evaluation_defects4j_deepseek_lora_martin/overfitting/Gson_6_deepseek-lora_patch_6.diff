diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/7b0298d2-ad21-48e7-99d0-aa063e66d81c_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/1bdb46b4-03b3-4842-a4be-b14bb001bf85_fixed.java
index 1c53d31..04685f8 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/7b0298d2-ad21-48e7-99d0-aa063e66d81c_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/1bdb46b4-03b3-4842-a4be-b14bb001bf85_fixed.java
@@ -1,20 +1,23 @@
   @SuppressWarnings("unchecked") // Casts guarded by conditionals.
   static TypeAdapter<?> getTypeAdapter(ConstructorConstructor constructorConstructor, Gson gson,
       TypeToken<?> fieldType, JsonAdapter annotation) {
     Class<?> value = annotation.value();
     TypeAdapter<?> typeAdapter;
     if (TypeAdapter.class.isAssignableFrom(value)) {
       Class<TypeAdapter<?>> typeAdapterClass = (Class<TypeAdapter<?>>) value;
       typeAdapter = constructorConstructor.get(TypeToken.get(typeAdapterClass)).construct();
     } else if (TypeAdapterFactory.class.isAssignableFrom(value)) {
       Class<TypeAdapterFactory> typeAdapterFactory = (Class<TypeAdapterFactory>) value;
       typeAdapter = constructorConstructor.get(TypeToken.get(typeAdapterFactory))
           .construct()
           .create(gson, fieldType);
     } else {
       throw new IllegalArgumentException(
           "@JsonAdapter value must be TypeAdapter or TypeAdapterFactory reference.");
     }
-      typeAdapter = typeAdapter.nullSafe();
+// buggy code
+//      typeAdapter = typeAdapter.nullSafe();
+    typeAdapter = typeAdapter != null ? typeAdapter.nullSafe() : null;
+
     return typeAdapter;
   }
