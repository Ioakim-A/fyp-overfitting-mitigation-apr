diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/d4598078-ea5a-4f8c-b6e5-b28b596c3734_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/480797ad-e84f-4f1e-926f-adcd0241232f_fixed.java
index 904dba7..06ddc6b 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/d4598078-ea5a-4f8c-b6e5-b28b596c3734_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/480797ad-e84f-4f1e-926f-adcd0241232f_fixed.java
@@ -1,46 +1,45 @@
   private String format(JSError error, boolean warning) {
     // extract source excerpt
     SourceExcerptProvider source = getSource();
     String sourceExcerpt = source == null ? null :
         excerpt.get(
             source, error.sourceName, error.lineNumber, excerptFormatter);
-
     // formatting the message
     StringBuilder b = new StringBuilder();
     if (error.sourceName != null) {
       b.append(error.sourceName);
       if (error.lineNumber > 0) {
         b.append(':');
         b.append(error.lineNumber);
       }
       b.append(": ");
     }
-
     b.append(getLevelName(warning ? CheckLevel.WARNING : CheckLevel.ERROR));
     b.append(" - ");
-
     b.append(error.description);
     b.append('\n');
     if (sourceExcerpt != null) {
       b.append(sourceExcerpt);
       b.append('\n');
       int charno = error.getCharno();
-
       // padding equal to the excerpt and arrow at the end
       // charno == sourceExpert.length() means something is missing
       // at the end of the line
       if (excerpt.equals(LINE)
-          && 0 <= charno && charno < sourceExcerpt.length()) {
+// buggy code
+//          && 0 <= charno && charno < sourceExcerpt.length()) {
+          && 0 <= charno && charno < sourceExcerpt.length() - 2) {
+
         for (int i = 0; i < charno; i++) {
           char c = sourceExcerpt.charAt(i);
           if (Character.isWhitespace(c)) {
             b.append(c);
           } else {
             b.append(' ');
           }
         }
         b.append("^\n");
       }
     }
     return b.toString();
   }
