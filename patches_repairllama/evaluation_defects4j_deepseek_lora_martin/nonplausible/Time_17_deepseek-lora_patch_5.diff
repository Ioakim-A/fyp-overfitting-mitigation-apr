diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/3c29a199-5b40-48fc-aada-12619fc68271_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/14d36031-1b1f-4577-b299-1231deb21e89_fixed.java
index 03b03d7..e365027 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/3c29a199-5b40-48fc-aada-12619fc68271_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/14d36031-1b1f-4577-b299-1231deb21e89_fixed.java
@@ -1,25 +1,35 @@
     /**
      * Adjusts the offset to be the earlier or later one during an overlap.
      * 
      * @param instant  the instant to adjust
      * @param earlierOrLater  false for earlier, true for later
      * @return the adjusted instant millis
      */
     public long adjustOffset(long instant, boolean earlierOrLater) {
         // a bit messy, but will work in all non-pathological cases
-        
         // evaluate 3 hours before and after to work out if anything is happening
+// buggy code
+//        long instantBefore = convertUTCToLocal(instant - 3 * DateTimeConstants.MILLIS_PER_HOUR);
+//        long instantAfter = convertUTCToLocal(instant + 3 * DateTimeConstants.MILLIS_PER_HOUR);
+//        if (instantBefore == instantAfter) {
+//            return instant;  // not an overlap (less than is a gap, equal is normal case)
+//        }
+//        // work out range of instants that have duplicate local times
+//        long local = convertUTCToLocal(instant);
+//        return convertLocalToUTC(local, false, earlierOrLater ? instantAfter : instantBefore);
+//        // calculate result
+//          // currently in later offset
+//          // currently in earlier offset
         long instantBefore = convertUTCToLocal(instant - 3 * DateTimeConstants.MILLIS_PER_HOUR);
         long instantAfter = convertUTCToLocal(instant + 3 * DateTimeConstants.MILLIS_PER_HOUR);
         if (instantBefore == instantAfter) {
             return instant;  // not an overlap (less than is a gap, equal is normal case)
         }
-        
         // work out range of instants that have duplicate local times
         long local = convertUTCToLocal(instant);
         return convertLocalToUTC(local, false, earlierOrLater ? instantAfter : instantBefore);
-        
         // calculate result
         // currently in later offset
         // currently in earlier offset
+
     }
