diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/f26c91c8-a941-467a-a031-17eb85f5223a_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/d08d4b75-53f5-4bf7-bf5c-10401f807a37_fixed.java
index 602226b..2a0eafc 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/f26c91c8-a941-467a-a031-17eb85f5223a_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/d08d4b75-53f5-4bf7-bf5c-10401f807a37_fixed.java
@@ -1,26 +1,43 @@
     private void findAliases(NodeTraversal t) {
       Scope scope = t.getScope();
       for (Var v : scope.getVarIterable()) {
         Node n = v.getNode();
         int type = n.getType();
         Node parent = n.getParent();
-        if (parent.isVar()) {
+// buggy code
+//        if (parent.isVar()) {
+//          if (n.hasChildren() && n.getFirstChild().isQualifiedName()) {
+//          String name = n.getString();
+//          Var aliasVar = scope.getVar(name);
+//          aliases.put(name, aliasVar);
+//          String qualifiedName =
+//              aliasVar.getInitialValue().getQualifiedName();
+//          transformation.addAlias(name, qualifiedName);
+//          // Bleeding functions already get a BAD_PARAMETERS error, so just
+//          // do nothing.
+//          // Parameters of the scope function also get a BAD_PARAMETERS
+//          // error.
+//        } else {
+//          // TODO(robbyw): Support using locals for private variables.
+//          report(t, n, GOOG_SCOPE_NON_ALIAS_LOCAL, n.getString());
+//        }
+//        }
+        if (parent != null && parent.isVar()) {
           if (n.hasChildren() && n.getFirstChild().isQualifiedName()) {
           String name = n.getString();
           Var aliasVar = scope.getVar(name);
           aliases.put(name, aliasVar);
-
           String qualifiedName =
               aliasVar.getInitialValue().getQualifiedName();
           transformation.addAlias(name, qualifiedName);
           // Bleeding functions already get a BAD_PARAMETERS error, so just
           // do nothing.
           // Parameters of the scope function also get a BAD_PARAMETERS
           // error.
         } else {
-          // TODO(robbyw): Support using locals for private variables.
           report(t, n, GOOG_SCOPE_NON_ALIAS_LOCAL, n.getString());
         }
         }
+
       }
     }
