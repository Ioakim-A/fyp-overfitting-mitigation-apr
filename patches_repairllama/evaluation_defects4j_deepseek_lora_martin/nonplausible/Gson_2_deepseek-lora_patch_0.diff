diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/f85fc198-9849-4984-a7b8-6692c8ceda02_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/236eaac0-f20c-4433-a1e6-b51fbda350a9_fixed.java
index 6e45f80..cf5675a 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/f85fc198-9849-4984-a7b8-6692c8ceda02_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/236eaac0-f20c-4433-a1e6-b51fbda350a9_fixed.java
@@ -1,21 +1,23 @@
   /**
    * Returns a factory for all subtypes of {@code typeAdapter}. We do a runtime check to confirm
    * that the deserialized type matches the type requested.
    */
   public static <T1> TypeAdapterFactory newTypeHierarchyFactory(
       final Class<T1> clazz, final TypeAdapter<T1> typeAdapter) {
     return new TypeAdapterFactory() {
       @SuppressWarnings("unchecked")
       public <T2> TypeAdapter<T2> create(Gson gson, TypeToken<T2> typeToken) {
         final Class<? super T2> requestedType = typeToken.getRawType();
         if (!clazz.isAssignableFrom(requestedType)) {
           return null;
         }
-        return (TypeAdapter<T2>) typeAdapter;
+// buggy code
+//        return (TypeAdapter<T2>) typeAdapter;
+        return (TypeAdapter<T2>) typeAdapter.nullSafe();
 
       }
       @Override public String toString() {
         return "Factory[typeHierarchy=" + clazz.getName() + ",adapter=" + typeAdapter + "]";
       }
     };
   }
