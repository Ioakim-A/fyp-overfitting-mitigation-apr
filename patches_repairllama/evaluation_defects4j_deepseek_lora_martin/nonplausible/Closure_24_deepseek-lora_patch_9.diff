diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/b33b09d8-c64b-4101-a0f6-d0209f0d6f5e_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/e96d647c-5c14-409f-aa91-dfc04bb80849_fixed.java
index 602226b..ba89a0c 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/b33b09d8-c64b-4101-a0f6-d0209f0d6f5e_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/e96d647c-5c14-409f-aa91-dfc04bb80849_fixed.java
@@ -1,26 +1,39 @@
     private void findAliases(NodeTraversal t) {
       Scope scope = t.getScope();
       for (Var v : scope.getVarIterable()) {
         Node n = v.getNode();
         int type = n.getType();
         Node parent = n.getParent();
-        if (parent.isVar()) {
+// buggy code
+//        if (parent.isVar()) {
+//          if (n.hasChildren() && n.getFirstChild().isQualifiedName()) {
+//          String name = n.getString();
+//          Var aliasVar = scope.getVar(name);
+//          aliases.put(name, aliasVar);
+//          String qualifiedName =
+//              aliasVar.getInitialValue().getQualifiedName();
+//          transformation.addAlias(name, qualifiedName);
+//          // Bleeding functions already get a BAD_PARAMETERS error, so just
+//          // do nothing.
+//          // Parameters of the scope function also get a BAD_PARAMETERS
+//          // error.
+//        } else {
+//          // TODO(robbyw): Support using locals for private variables.
+//          report(t, n, GOOG_SCOPE_NON_ALIAS_LOCAL, n.getString());
+//        }
+//        }
         if (n.hasChildren() && n.getFirstChild().isQualifiedName()) {
           String name = n.getString();
           Var aliasVar = scope.getVar(name);
           aliases.put(name, aliasVar);
-
           String qualifiedName =
               aliasVar.getInitialValue().getQualifiedName();
           transformation.addAlias(name, qualifiedName);
           // Bleeding functions already get a BAD_PARAMETERS error, so just
           // do nothing.
           // Parameters of the scope function also get a BAD_PARAMETERS
           // error.
-        } else {
-          // TODO(robbyw): Support using locals for private variables.
-          report(t, n, GOOG_SCOPE_NON_ALIAS_LOCAL, n.getString());
-        }
         }
+
       }
     }
