diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/45211156-fde2-49f6-b5da-7f6317d7c324_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/83b25ebb-dd6c-45b6-a3ed-9cf6b8e6d2b8_fixed.java
index c6cb157..ad7e8e9 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/45211156-fde2-49f6-b5da-7f6317d7c324_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/83b25ebb-dd6c-45b6-a3ed-9cf6b8e6d2b8_fixed.java
@@ -1,14 +1,17 @@
     /**
      * Method called to expand size of the current segment, to
      * accommodate for more contiguous content. Usually only
      * used when parsing tokens like names if even then.
      */
     public char[] expandCurrentSegment()
     {
         final char[] curr = _currentSegment;
         // Let's grow by 50% by default
         final int len = curr.length;
-        // but above intended maximum, slow to increase by 25%
-        int newLen = (len == MAX_SEGMENT_LEN) ? (MAX_SEGMENT_LEN+1) : Math.min(MAX_SEGMENT_LEN, len + (len >> 1));
+// buggy code
+//        // but above intended maximum, slow to increase by 25%
+//        int newLen = (len == MAX_SEGMENT_LEN) ? (MAX_SEGMENT_LEN+1) : Math.min(MAX_SEGMENT_LEN, len + (len >> 1));
+        final int newLen = Math.min(MAX_SEGMENT_LEN, len + (len >> 1));
+
         return (_currentSegment = Arrays.copyOf(curr, newLen));
     }
