diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/8eadc656-e5f8-490c-b652-c9084d2356bb_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/4706755d-9579-45c9-aded-65ed69814b3c_fixed.java
index 5424d9c..291547c 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/8eadc656-e5f8-490c-b652-c9084d2356bb_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/4706755d-9579-45c9-aded-65ed69814b3c_fixed.java
@@ -1,43 +1,28 @@
 public int read(byte b[], int offset, int len) throws IOException {
     if (b == null) {
         throw new NullPointerException();
     } else if (offset < 0 || len < 0) {
         throw new IndexOutOfBoundsException();
     } else if (offset > b.length || offset + len > b.length) {
         throw new IndexOutOfBoundsException();
     } else if (len == 0) {
         return 0;
     } else {
-            /*
-             Rationale for while-loop on (readLen == 0):
-             -----
-             Base64.readResults() usually returns > 0 or EOF (-1).  In the
-             rare case where it returns 0, we just keep trying.
-
-             This is essentially an undocumented contract for InputStream
-             implementors that want their code to work properly with
-             java.io.InputStreamReader, since the latter hates it when
-             InputStream.read(byte[]) returns a zero.  Unfortunately our
-             readResults() call must return 0 if a large amount of the data
-             being decoded was non-base64, so this while-loop enables proper
-             interop with InputStreamReader for that scenario.
-             -----
-             This is a fix for CODEC-101
-            */
         if (!base64.hasData()) {
             byte[] buf = new byte[doEncode ? 4096 : 8192];
             int c = in.read(buf);
-                    // A little optimization to avoid System.arraycopy()
-                    // when possible.
-                    if (c > 0 && b.length == len) {
+            if (c == -1) {
+                return -1; // end of stream
+            }
+            if (c > 0) {
                 base64.setInitialBuffer(b, offset, len);
             }
             if (doEncode) {
                 base64.encode(buf, 0, c);
             } else {
                 base64.decode(buf, 0, c);
             }
         }
         return base64.readResults(b, offset, len);
     }
 }
\ No newline at end of file
