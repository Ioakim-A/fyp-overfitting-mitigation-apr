diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/cd086149-9a3c-4c43-ae1b-4c572f36b70b_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/e0ee3869-a319-47e2-9473-8bc6a60a9d4f_fixed.java
index 618a37c..502f0cb 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/cd086149-9a3c-4c43-ae1b-4c572f36b70b_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/e0ee3869-a319-47e2-9473-8bc6a60a9d4f_fixed.java
@@ -1,28 +1,21 @@
 private boolean inferTemplatedTypesForCall(
     Node n, FunctionType fnType) {
   final ImmutableList<TemplateType> keys = fnType.getTemplateTypeMap()
       .getTemplateKeys();
   if (keys.isEmpty()) {
     return false;
   }
   
-    // Try to infer the template types
-    Map<TemplateType, JSType> inferred =
-        inferTemplateTypesFromParameters(fnType, n);
+  // Uncommented the following line
+  Map<TemplateType, JSType> inferred = inferTemplateTypesFromParameters(fnType, n);
 
-
-    // Replace all template types. If we couldn't find a replacement, we
-    // replace it with UNKNOWN.
   TemplateTypeReplacer replacer = new TemplateTypeReplacer(
       registry, inferred);
   Node callTarget = n.getFirstChild();
-
   FunctionType replacementFnType = fnType.visit(replacer)
       .toMaybeFunctionType();
   Preconditions.checkNotNull(replacementFnType);
-
   callTarget.setJSType(replacementFnType);
   n.setJSType(replacementFnType.getReturnType());
-
   return replacer.madeChanges;
 }
\ No newline at end of file
