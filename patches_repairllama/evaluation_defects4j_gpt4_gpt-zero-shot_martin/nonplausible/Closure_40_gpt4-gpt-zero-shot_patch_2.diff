diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/31cae39c-a4e9-4622-885e-224fbaba8cf7_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/febbe2f8-bd27-4d08-b6ad-72d3fece0062_fixed.java
index 680d3be..98fda9f 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/31cae39c-a4e9-4622-885e-224fbaba8cf7_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/febbe2f8-bd27-4d08-b6ad-72d3fece0062_fixed.java
@@ -1,47 +1,10 @@
-    public void visit(NodeTraversal t, Node n, Node parent) {
-
-      // Record global variable and function declarations
-      if (t.inGlobalScope()) {
-        if (NodeUtil.isVarDeclaration(n)) {
-          NameInformation ns = createNameInformation(t, n, parent);
-          Preconditions.checkNotNull(ns);
-          recordSet(ns.name, n);
-        } else if (NodeUtil.isFunctionDeclaration(n)) {
-          Node nameNode = n.getFirstChild();
-          NameInformation ns = createNameInformation(t, nameNode, n);
-          if (ns != null) {
-            JsName nameInfo = getName(nameNode.getString(), true);
-            recordSet(nameInfo.name, nameNode);
-          }
-        } else if (NodeUtil.isObjectLitKey(n, parent)) {
-          NameInformation ns = createNameInformation(t, n, parent);
-          if (ns != null) {
-            recordSet(ns.name, n);
-          }
-        }
-      }
-
-      // Record assignments and call sites
-      if (n.isAssign()) {
-        Node nameNode = n.getFirstChild();
-
-        NameInformation ns = createNameInformation(t, nameNode, n);
-        if (ns != null) {
-          if (ns.isPrototype) {
-            recordPrototypeSet(ns.prototypeClass, ns.prototypeProperty, n);
-          } else {
-            recordSet(ns.name, nameNode);
-          }
-        }
-      } else if (n.isCall()) {
-        Node nameNode = n.getFirstChild();
-        NameInformation ns = createNameInformation(t, nameNode, n);
 if (ns != null && ns.onlyAffectsClassDef) {
     JsName name = getName(ns.name, false);
     if (name != null) {
+        if (this.refNodes == null) {
+            this.refNodes = new ArrayList<>();
+        }
         refNodes.add(new ClassDefiningFunctionNode(
             name, n, parent, parent.getParent()));
     }
 }
\ No newline at end of file
-      }
-    }
