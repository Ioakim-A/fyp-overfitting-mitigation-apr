diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/f7c6fd26-85cf-4a27-ad46-e0ab90e20e48_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/9c7c0c63-dfb8-4850-8609-e1e0a8c17b7b_fixed.java
index dcea789..abb9c52 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/f7c6fd26-85cf-4a27-ad46-e0ab90e20e48_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/9c7c0c63-dfb8-4850-8609-e1e0a8c17b7b_fixed.java
@@ -1,16 +1,14 @@
 public static byte[] encodeBase64(byte[] binaryData, boolean isChunked, boolean urlSafe, int maxResultSize) {
     if (binaryData == null || binaryData.length == 0) {
         return binaryData;
     }
-
-        long len = getEncodeLength(binaryData, MIME_CHUNK_SIZE, CHUNK_SEPARATOR);
+    long len = Base64.getEncodedLength(binaryData);
     if (len > maxResultSize) {
         throw new IllegalArgumentException("Input array too big, the output array would be bigger (" +
             len +
-                ") than the specified maxium size of " +
+            ") than the specified maximum size of " +
             maxResultSize);
     }
-                
     Base64 b64 = isChunked ? new Base64(urlSafe) : new Base64(0, CHUNK_SEPARATOR, urlSafe);
     return b64.encode(binaryData);
 }
\ No newline at end of file
