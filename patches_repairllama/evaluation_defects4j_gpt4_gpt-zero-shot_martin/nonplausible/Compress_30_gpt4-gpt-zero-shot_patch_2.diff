diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/9f971f07-2eae-4c15-8397-9cff64d971c4_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/6a4b62e7-c7bd-4fb6-8ed7-44fb4d2a696d_fixed.java
index 20d45d1..5913554 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/9f971f07-2eae-4c15-8397-9cff64d971c4_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/6a4b62e7-c7bd-4fb6-8ed7-44fb4d2a696d_fixed.java
@@ -1,27 +1,24 @@
-    public int read(final byte[] dest, final int offs, final int len)
-        throws IOException {
+public int read(final byte[] dest, final int offs, final int len) throws IOException {
     if (offs < 0) {
         throw new IndexOutOfBoundsException("offs(" + offs + ") < 0.");
     }
     if (len < 0) {
         throw new IndexOutOfBoundsException("len(" + len + ") < 0.");
     }
     if (offs + len > dest.length) {
         throw new IndexOutOfBoundsException("offs(" + offs + ") + len("
                                             + len + ") > dest.length(" + dest.length + ").");
     }
     if (this.in == null) {
         throw new IOException("stream closed");
     }
 
     final int hi = offs + len;
     int destOffs = offs;
     int b;
-        while (destOffs < hi && ((b = read0()) >= 0)) {
+    while (destOffs < hi && ((b = in.read()) >= 0)) {
         dest[destOffs++] = (byte) b;
-            count(1);
     }
-
     int c = (destOffs == offs) ? -1 : (destOffs - offs);
     return c;
 }
\ No newline at end of file
