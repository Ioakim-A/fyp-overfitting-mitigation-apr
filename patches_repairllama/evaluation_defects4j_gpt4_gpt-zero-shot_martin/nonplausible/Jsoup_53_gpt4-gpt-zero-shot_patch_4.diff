diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/33f5413e-0d20-4115-8d60-4e6df8742afa_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/440cb86a-2a97-4886-88ee-6cc48108b1aa_fixed.java
index e0802db..7488a67 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/33f5413e-0d20-4115-8d60-4e6df8742afa_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/440cb86a-2a97-4886-88ee-6cc48108b1aa_fixed.java
@@ -1,25 +1,30 @@
 public String chompBalanced(char open, char close) {
     int start = -1;
     int end = -1;
     int depth = 0;
     char last = 0;
-
     do {
         if (isEmpty()) break;
         Character c = consume();
         if (last == 0 || last != ESC) {
             if (c.equals(open)) {
                 depth++;
                 if (start == -1)
                     start = pos;
+            } else if (c.equals(close)) {
+                depth--;
             }
-                else if (c.equals(close))
+        } else if (last == ESC) {
+            // We need to undo the last increment/decrement of depth if the last character was an ESC
+            if (c.equals(open)) {
                 depth--;
+            } else if (c.equals(close)) {
+                depth++;
+            }
         }
-
         if (depth > 0 && last != 0)
-                end = pos; // don't include the outer match pair in the return
+            end = pos; 
         last = c;
     } while (depth > 0);
     return (end >= 0) ? queue.substring(start, end) : "";
 }
\ No newline at end of file
