diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/94f2d242-7076-4603-a42a-7d136fff50a4_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/02f87755-b25d-4b20-b09c-398bf93e361a_fixed.java
index be2af16..6afac49 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/94f2d242-7076-4603-a42a-7d136fff50a4_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/02f87755-b25d-4b20-b09c-398bf93e361a_fixed.java
@@ -1,29 +1,27 @@
 public long getDateTimeMillis(int year, int monthOfYear, int dayOfMonth,
                               int hourOfDay, int minuteOfHour,
                               int secondOfMinute, int millisOfSecond)
     throws IllegalArgumentException
 {
     Chronology base;
     if ((base = getBase()) != null) {
         return base.getDateTimeMillis
             (year, monthOfYear, dayOfMonth,
              hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
     }
-
-        // Assume date is Gregorian.
     long instant;
+    // corrected code  
     instant = iGregorianChronology.getDateTimeMillis
         (year, monthOfYear, dayOfMonth,
          hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
+    
     if (instant < iCutoverMillis) {
-            // Maybe it's Julian.
         instant = iJulianChronology.getDateTimeMillis
             (year, monthOfYear, dayOfMonth,
              hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
         if (instant >= iCutoverMillis) {
-                // Okay, it's in the illegal cutover gap.
             throw new IllegalArgumentException("Specified date does not exist");
         }
     }
     return instant;
 }
\ No newline at end of file
