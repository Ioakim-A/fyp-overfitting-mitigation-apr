diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/a8451443-d78a-45b8-8e03-325573611bb9_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/040939f5-2219-4bbd-8632-8a5d8da850a9_fixed.java
index 5a3dced..ac6259f 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/a8451443-d78a-45b8-8e03-325573611bb9_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/040939f5-2219-4bbd-8632-8a5d8da850a9_fixed.java
@@ -1,28 +1 @@
-    public int parseInto(ReadWritableInstant instant, String text, int position) {
-        DateTimeParser parser = requireParser();
-        if (instant == null) {
-            throw new IllegalArgumentException("Instant must not be null");
-        }
-        
-        long instantMillis = instant.getMillis();
-        Chronology chrono = instant.getChronology();
-        long instantLocal = instantMillis + chrono.getZone().getOffset(instantMillis);
-        chrono = selectChronology(chrono);
-        
-        DateTimeParserBucket bucket = new DateTimeParserBucket(
-            instantLocal, chrono, iLocale, iPivotYear, iDefaultYear);
-        int newPos = parser.parseInto(bucket, text, position);
-        instant.setMillis(bucket.computeMillis(false, text));
-        if (iOffsetParsed && bucket.getOffsetInteger() != null) {
-            int parsedOffset = bucket.getOffsetInteger();
-            DateTimeZone parsedZone = DateTimeZone.forOffsetMillis(parsedOffset);
-            chrono = chrono.withZone(parsedZone);
-        } else if (bucket.getZone() != null) {
-            chrono = chrono.withZone(bucket.getZone());
-        }
-        instant.setChronology(chrono);
-        if (iZone != null) {
-            instant.setZone(iZone);
-        }
-        return newPos;
-    }
+DateTimeParserBucket bucket = new DateTimeParserBucket(instantLocal, chrono, iLocale, iPivotYear, iDefaultYear);
\ No newline at end of file
