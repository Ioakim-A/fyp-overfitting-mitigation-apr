diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/017682ac-59b4-49eb-aa6a-8dba740f140f_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/2d15275b-477e-4d89-98af-649de64f5dee_fixed.java
index 800e6e1..ce9c99f 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/017682ac-59b4-49eb-aa6a-8dba740f140f_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/2d15275b-477e-4d89-98af-649de64f5dee_fixed.java
@@ -1,32 +1,47 @@
     /**
      * Visit a node in a local scope, and add any local variables or catch
      * parameters into the local symbol table.
      *
      * @param t The node traversal.
      * @param n The node being visited.
      * @param parent The parent of n
      */
     @Override public void visit(NodeTraversal t, Node n, Node parent) {
       if (n == scope.getRootNode()) return;
-
       if (n.getType() == Token.LP && parent == scope.getRootNode()) {
         handleFunctionInputs(parent);
         return;
       }
-
-      attachLiteralTypes(n);
+// buggy code
+//      attachLiteralTypes(n);
+//      switch (n.getType()) {
+//        case Token.FUNCTION:
+//          if (parent.getType() == Token.NAME) {
+//            return;
+//          }
+//          defineDeclaredFunction(n, parent);
+//          break;
+//        case Token.CATCH:
+//          defineCatch(n, parent);
+//          break;
+//        case Token.VAR:
+//          defineVar(n, parent);
+//          break;
+//      }
         switch (n.getType()) {
           case Token.FUNCTION:
             if (parent.getType() == Token.NAME) {
               return;
             }
             defineDeclaredFunction(n, parent);
             break;
           case Token.CATCH:
             defineCatch(n, parent);
             break;
           case Token.VAR:
             defineVar(n, parent);
             break;
         }
+        attachLiteralTypes(n);
+
     }
