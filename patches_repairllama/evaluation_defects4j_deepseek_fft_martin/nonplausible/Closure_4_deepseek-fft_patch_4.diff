diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/ea7b164f-cde1-4c19-9aa1-70e0fda3e65b_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/3ff20ea9-8fb2-4b11-97bb-cd51131e0b5d_fixed.java
index d6a560a..8dd9391 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/ea7b164f-cde1-4c19-9aa1-70e0fda3e65b_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/3ff20ea9-8fb2-4b11-97bb-cd51131e0b5d_fixed.java
@@ -1,33 +1,42 @@
   /**
    * Resolve the referenced type within the enclosing scope.
    */
   @Override
   JSType resolveInternal(ErrorReporter t, StaticScope<JSType> enclosing) {
     // TODO(user): Investigate whether it is really necessary to keep two
     // different mechanisms for resolving named types, and if so, which order
     // makes more sense. Now, resolution via registry is first in order to
     // avoid triggering the warnings built into the resolution via properties.
     boolean resolved = resolveViaRegistry(t, enclosing);
-    if (detectImplicitPrototypeCycle()) {
-      handleTypeCycle(t);
-    }
-
-    if (resolved) {
-      super.resolveInternal(t, enclosing);
-      finishPropertyContinuations();
-      return registry.isLastGeneration() ?
-          getReferencedType() : this;
-    }
-
+// buggy code
+//    if (detectImplicitPrototypeCycle()) {
+//      handleTypeCycle(t);
+//    }
+//    if (resolved) {
+//      super.resolveInternal(t, enclosing);
+//      finishPropertyContinuations();
+//      return registry.isLastGeneration() ?
+//          getReferencedType() : this;
+//    }
+//    resolveViaProperties(t, enclosing);
+//    if (detectImplicitPrototypeCycle()) {
     resolveViaProperties(t, enclosing);
     if (detectImplicitPrototypeCycle()) {
       handleTypeCycle(t);
     }
+    if (resolved) {
+      finishPropertyContinuations();
+      return registry.isLastGeneration() ?
+          getReferencedType() : this;
+    }
+    if (detectImplicitPrototypeCycle()) {
 
+      handleTypeCycle(t);
+    }
     super.resolveInternal(t, enclosing);
     if (isResolved()) {
       finishPropertyContinuations();
     }
     return registry.isLastGeneration() ?
         getReferencedType() : this;
   }
