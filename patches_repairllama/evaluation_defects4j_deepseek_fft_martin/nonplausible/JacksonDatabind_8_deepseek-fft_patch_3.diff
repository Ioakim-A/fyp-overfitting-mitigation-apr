diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/3df3ea3f-c7ce-4b57-a672-e27231736e57_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/5f6d5e9a-ff1c-483c-a440-8fc222bee503_fixed.java
index c9da1b7..30f90b4 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/3df3ea3f-c7ce-4b57-a672-e27231736e57_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/5f6d5e9a-ff1c-483c-a440-8fc222bee503_fixed.java
@@ -1,33 +1,48 @@
     protected void verifyNonDup(AnnotatedWithParams newOne, int typeIndex, boolean explicit)
     {
         final int mask = (1 << typeIndex);
         _hasNonDefaultCreator = true;
         AnnotatedWithParams oldOne = _creators[typeIndex];
         // already had an explicitly marked one?
         if (oldOne != null) {
-
-            if ((_explicitCreators & mask) != 0) { // already had explicitly annotated, leave as-is
+// buggy code
+//            if ((_explicitCreators & mask) != 0) { // already had explicitly annotated, leave as-is
+//                // but skip, if new one not annotated
+//                if (!explicit) {
+//                    return;
+//                }
+//                // both explicit: verify
+//                // otherwise only verify if neither explicitly annotated.
+//            }
+//            // one more thing: ok to override in sub-class
+//            if (oldOne.getClass() == newOne.getClass()) {
+//                // [databind#667]: avoid one particular class of bogus problems
+//                    throw new IllegalArgumentException("Conflicting "+TYPE_DESCS[typeIndex]
+//                            +" creators: already had explicitly marked "+oldOne+", encountered "+newOne);
+//                // otherwise, which one to choose?
+//                    // new type more generic, use old
+            if ((_explicitCreators & mask) == 0) { // already had explicitly annotated, leave as-is
                 // but skip, if new one not annotated
                 if (!explicit) {
                     return;
                 }
                 // both explicit: verify
                 // otherwise only verify if neither explicitly annotated.
             }
-
             // one more thing: ok to override in sub-class
-            if (oldOne.getClass() == newOne.getClass()) {
+            if (oldOne.getClass() != newOne.getClass()) {
                 // [databind#667]: avoid one particular class of bogus problems
-
                     throw new IllegalArgumentException("Conflicting "+TYPE_DESCS[typeIndex]
                             +" creators: already had explicitly marked "+oldOne+", encountered "+newOne);
                 // otherwise, which one to choose?
                     // new type more generic, use old
+            } else {
+
                 // new type more specific, use it
             }
         }
         if (explicit) {
             _explicitCreators |= mask;
         }
         _creators[typeIndex] = _fixAccess(newOne);
     }
