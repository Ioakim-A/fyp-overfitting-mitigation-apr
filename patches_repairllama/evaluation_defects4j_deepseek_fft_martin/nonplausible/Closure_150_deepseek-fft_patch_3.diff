diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/a6a8f033-a16d-4492-be68-86143c6409c7_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/61c101e7-1774-4369-bc3b-430c5955dfcf_fixed.java
index 800e6e1..2c0af13 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/a6a8f033-a16d-4492-be68-86143c6409c7_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/61c101e7-1774-4369-bc3b-430c5955dfcf_fixed.java
@@ -1,32 +1,47 @@
     /**
      * Visit a node in a local scope, and add any local variables or catch
      * parameters into the local symbol table.
      *
      * @param t The node traversal.
      * @param n The node being visited.
      * @param parent The parent of n
      */
     @Override public void visit(NodeTraversal t, Node n, Node parent) {
       if (n == scope.getRootNode()) return;
-
       if (n.getType() == Token.LP && parent == scope.getRootNode()) {
         handleFunctionInputs(parent);
         return;
       }
-
-      attachLiteralTypes(n);
+// buggy code
+//      attachLiteralTypes(n);
+//      switch (n.getType()) {
+//        case Token.FUNCTION:
+//          if (parent.getType() == Token.NAME) {
+//            return;
+//          }
+//          defineDeclaredFunction(n, parent);
+//          break;
+//        case Token.CATCH:
+//          defineCatch(n, parent);
+//          break;
+//        case Token.VAR:
+//          defineVar(n, parent);
+//          break;
+//      }
       switch (n.getType()) {
         case Token.FUNCTION:
           if (parent.getType() == Token.NAME) {
-            return;
-          }
             defineDeclaredFunction(n, parent);
+            return;
+          }
           break;
         case Token.CATCH:
           defineCatch(n, parent);
-          break;
+          return;
         case Token.VAR:
           defineVar(n, parent);
-          break;
+          return;
       }
+      attachLiteralTypes(n);
+
     }
