diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/fbf8aca6-18d5-4865-ab68-8551e652c7d6_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/7e075d21-e4c9-4032-ba87-ec33713c352f_fixed.java
index 602226b..a23c27a 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/fbf8aca6-18d5-4865-ab68-8551e652c7d6_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/7e075d21-e4c9-4032-ba87-ec33713c352f_fixed.java
@@ -1,26 +1,44 @@
     private void findAliases(NodeTraversal t) {
       Scope scope = t.getScope();
       for (Var v : scope.getVarIterable()) {
         Node n = v.getNode();
         int type = n.getType();
         Node parent = n.getParent();
+// buggy code
+//        if (parent.isVar()) {
+//          if (n.hasChildren() && n.getFirstChild().isQualifiedName()) {
+//          String name = n.getString();
+//          Var aliasVar = scope.getVar(name);
+//          aliases.put(name, aliasVar);
+//          String qualifiedName =
+//              aliasVar.getInitialValue().getQualifiedName();
+//          transformation.addAlias(name, qualifiedName);
+//          // Bleeding functions already get a BAD_PARAMETERS error, so just
+//          // do nothing.
+//          // Parameters of the scope function also get a BAD_PARAMETERS
+//          // error.
+//        } else {
+//          // TODO(robbyw): Support using locals for private variables.
+//          report(t, n, GOOG_SCOPE_NON_ALIAS_LOCAL, n.getString());
+//        }
+//        }
         if (parent.isVar()) {
           if (n.hasChildren() && n.getFirstChild().isQualifiedName()) {
             String name = n.getString();
             Var aliasVar = scope.getVar(name);
             aliases.put(name, aliasVar);
-
             String qualifiedName =
                 aliasVar.getInitialValue().getQualifiedName();
             transformation.addAlias(name, qualifiedName);
             // Bleeding functions already get a BAD_PARAMETERS error, so just
             // do nothing.
             // Parameters of the scope function also get a BAD_PARAMETERS
             // error.
+          }
         } else {
           // TODO(robbyw): Support using locals for private variables.
           report(t, n, GOOG_SCOPE_NON_ALIAS_LOCAL, n.getString());
         }
-        }
+
       }
     }
