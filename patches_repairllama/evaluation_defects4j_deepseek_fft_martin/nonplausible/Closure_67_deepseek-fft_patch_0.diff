diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/546d79c0-5e8f-4f59-b907-c124352d38db_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/e0a06436-fa68-41be-a0df-a9d7bb621b2d_fixed.java
index 939f49b..3a838e0 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/546d79c0-5e8f-4f59-b907-c124352d38db_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/e0a06436-fa68-41be-a0df-a9d7bb621b2d_fixed.java
@@ -1,21 +1,22 @@
     private boolean isPrototypePropertyAssign(Node assign) {
       Node n = assign.getFirstChild();
       if (n != null && NodeUtil.isVarOrSimpleAssignLhs(n, assign)
           && n.getType() == Token.GETPROP
+// buggy code
+//          ) {
+          && n.getFirstChild().getType() == Token.GETPROP
           ) {
+
         // We want to exclude the assignment itself from the usage list
         boolean isChainedProperty =
             n.getFirstChild().getType() == Token.GETPROP;
-
         if (isChainedProperty) {
           Node child = n.getFirstChild().getFirstChild().getNext();
-
           if (child.getType() == Token.STRING &&
               child.getString().equals("prototype")) {
             return true;
           }
         }
       }
-
       return false;
     }
