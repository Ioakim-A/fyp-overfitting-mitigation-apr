diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/aa786b34-32d3-4704-b9da-e80f800cb0d0_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/3b613b85-f0b8-46af-916a-7bbe5731c1f8_fixed.java
index 6cfa79b..a61463c 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/aa786b34-32d3-4704-b9da-e80f800cb0d0_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/3b613b85-f0b8-46af-916a-7bbe5731c1f8_fixed.java
@@ -1,12 +1,16 @@
     /**
      * For this disbution, X, this method returns P(X &lt; <code>x</code>).
      * @param x the value at which the CDF is evaluated.
      * @return CDF evaluted at <code>x</code>. 
      * @throws MathException if the algorithm fails to converge; unless
      * x is more than 20 standard deviations from the mean, in which case the
      * convergence exception is caught and 0 or 1 is returned.
      */
     public double cumulativeProbability(double x) throws MathException {
-            return 0.5 * (1.0 + Erf.erf((x - mean) /
-                    (standardDeviation * Math.sqrt(2.0))));
+// buggy code
+//            return 0.5 * (1.0 + Erf.erf((x - mean) /
+//                    (standardDeviation * Math.sqrt(2.0))));
+            double z = (x - mean) / (standardDeviation * Math.sqrt(2.0));
+            return 0.5 * (1.0 + Erf.erf(z));
+
     }
