diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/58651214-2d4e-4803-838f-fa8eac8f1497_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/6d329d9e-0865-4598-aeb1-563ac7c6039f_fixed.java
index 654abbf..f56e204 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/58651214-2d4e-4803-838f-fa8eac8f1497_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/6d329d9e-0865-4598-aeb1-563ac7c6039f_fixed.java
@@ -1,19 +1,10 @@
     public Object answer(InvocationOnMock invocation) {
         if (methodsGuru.isToString(invocation.getMethod())) {
             Object mock = invocation.getMock();
-            MockName name = mockUtil.getMockName(mock);
-            if (name.isDefault()) {
-                return "Mock for " + mockUtil.getMockSettings(mock).getTypeToMock().getSimpleName() + ", hashCode: " + mock.hashCode();
-            } else {
-                return name.toString();
-            }
+            return mockUtil.getMockName(mock).toString();
         } else if (methodsGuru.isCompareToMethod(invocation.getMethod())) {
-            //see issue 184.
-            //mocks by default should return 0 if references are the same, otherwise some other value because they are not the same. Hence we return 1 (anything but 0 is good).
-            //Only for compareTo() method by the Comparable interface
             return 1;
         }
-        
         Class<?> returnType = invocation.getMethod().getReturnType();
         return returnValueFor(returnType);
     }
