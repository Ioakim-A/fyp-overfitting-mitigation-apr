diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/361f5fcd-69b8-4273-bb74-c887a43d75e6_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/0e5b0bd6-8c32-496b-838a-c58a58e8eb3a_fixed.java
index 3840a76..d0e44f3 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/361f5fcd-69b8-4273-bb74-c887a43d75e6_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/0e5b0bd6-8c32-496b-838a-c58a58e8eb3a_fixed.java
@@ -1,29 +1,21 @@
   JSType resolveInternal(ErrorReporter t, StaticScope<JSType> enclosing) {
-    // TODO(user): Investigate whether it is really necessary to keep two
-    // different mechanisms for resolving named types, and if so, which order
-    // makes more sense. Now, resolution via registry is first in order to
-    // avoid triggering the warnings built into the resolution via properties.
-    boolean resolved = resolveViaRegistry(t, enclosing);
     if (detectImplicitPrototypeCycle()) {
       handleTypeCycle(t);
     }
-
-    if (resolved) {
+    if (resolveViaRegistry(t, enclosing)) {
       super.resolveInternal(t, enclosing);
       finishPropertyContinuations();
       return registry.isLastGeneration() ?
           getReferencedType() : this;
     }
-
     resolveViaProperties(t, enclosing);
     if (detectImplicitPrototypeCycle()) {
       handleTypeCycle(t);
     }
-
     super.resolveInternal(t, enclosing);
     if (isResolved()) {
       finishPropertyContinuations();
     }
     return registry.isLastGeneration() ?
         getReferencedType() : this;
   }
