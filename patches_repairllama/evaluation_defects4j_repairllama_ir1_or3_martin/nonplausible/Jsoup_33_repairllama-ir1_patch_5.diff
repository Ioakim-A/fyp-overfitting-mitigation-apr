diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/781dde9a-a28a-4008-be6e-dafe17272a0c_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/4d92d896-6568-46b1-8f41-4b9a196bcd48_fixed.java
index dc93be3..e77fc32 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/781dde9a-a28a-4008-be6e-dafe17272a0c_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/4d92d896-6568-46b1-8f41-4b9a196bcd48_fixed.java
@@ -1,14 +1,11 @@
     Element insert(Token.StartTag startTag) {
-        // handle empty unknown tags
-        // when the spec expects an empty tag, will directly hit insertEmpty, so won't generate this fake end tag.
         if (startTag.isSelfClosing()) {
-            Element el = insertEmpty(startTag);
+            Element el = new Element(Tag.valueOf(startTag.name()), baseUri, startTag.attributes);
             stack.add(el);
-            tokeniser.emit(new Token.EndTag(el.tagName()));  // ensure we get out of whatever state we are in. emitted for yielded processing
+            tokeniser.emit(new Token.EndTag(el.tagName()));  
             return el;
         }
-        
         Element el = new Element(Tag.valueOf(startTag.name()), baseUri, startTag.attributes);
         insert(el);
         return el;
     }
