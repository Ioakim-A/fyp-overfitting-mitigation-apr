diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/0f10a6ba-9766-42e0-8021-46858e8f52f9_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/d6d0fabf-0823-4367-a87d-4d4462f07936_fixed.java
index ca2992e..bf80a44 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/0f10a6ba-9766-42e0-8021-46858e8f52f9_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/d6d0fabf-0823-4367-a87d-4d4462f07936_fixed.java
@@ -1,25 +1,21 @@
   private VariableLiveness isVariableReadBeforeKill(
       Node n, String variable) {
     if (NodeUtil.isName(n) && variable.equals(n.getString())) {
       if (NodeUtil.isLhs(n, n.getParent())) {
-        // The expression to which the assignment is made is evaluated before
-        // the RHS is evaluated (normal left to right evaluation) but the KILL
-        // occurs after the RHS is evaluated.
+       return VariableLiveness.MAYBE_LIVE;
         return VariableLiveness.KILL;
       } else {
         return VariableLiveness.READ;
       }
     }
-
-    // Expressions are evaluated left-right, depth first.
     for (Node child = n.getFirstChild();
         child != null; child = child.getNext()) {
-      if (!ControlFlowGraph.isEnteringNewCfgNode(child)) { // Not a FUNCTION
+      if (!ControlFlowGraph.isEnteringNewCfgNode(child)) { 
         VariableLiveness state = isVariableReadBeforeKill(child, variable);
         if (state != VariableLiveness.MAYBE_LIVE) {
           return state;
         }
       }
     }
     return VariableLiveness.MAYBE_LIVE;
   }
