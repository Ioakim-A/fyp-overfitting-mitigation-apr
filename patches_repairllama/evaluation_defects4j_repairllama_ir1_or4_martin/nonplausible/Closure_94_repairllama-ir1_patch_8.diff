diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/88ee1b11-438b-49ec-8fde-03123e589d2a_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/4a22dbc2-5e2a-4361-b37e-13d7959cb424_fixed.java
index 02afa2a..6c2e18c 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/88ee1b11-438b-49ec-8fde-03123e589d2a_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/4a22dbc2-5e2a-4361-b37e-13d7959cb424_fixed.java
@@ -1,28 +1,25 @@
   static boolean isValidDefineValue(Node val, Set<String> defines) {
+    if (val == null) {
+      return true;
+    }
     switch (val.getType()) {
       case Token.STRING:
       case Token.NUMBER:
       case Token.TRUE:
       case Token.FALSE:
         return true;
-
-      // Binary operators are only valid if both children are valid.
       case Token.BITAND:
       case Token.BITNOT:
       case Token.BITOR:
       case Token.BITXOR:
-
-      // Uniary operators are valid if the child is valid.
       case Token.NOT:
       case Token.NEG:
         return isValidDefineValue(val.getFirstChild(), defines);
-
-      // Names are valid if and only if they are defines themselves.
       case Token.NAME:
       case Token.GETPROP:
         if (val.isQualifiedName()) {
           return defines.contains(val.getQualifiedName());
         }
     }
     return false;
   }
