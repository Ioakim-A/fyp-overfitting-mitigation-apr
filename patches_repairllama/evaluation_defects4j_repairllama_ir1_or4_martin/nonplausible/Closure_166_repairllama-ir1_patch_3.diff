diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/395a3e18-5fe1-4188-97d6-7242dd40949b_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/666251df-103c-471b-b32f-b55d48003b5d_fixed.java
index 70ac830..b979914 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/395a3e18-5fe1-4188-97d6-7242dd40949b_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/666251df-103c-471b-b32f-b55d48003b5d_fixed.java
@@ -1,19 +1,8 @@
   public void matchConstraint(JSType constraint) {
-    // We only want to match constraints on anonymous types.
-    if (hasReferenceName()) {
+    if (!hasReferenceName()) {
       return;
     }
-
-    // Handle the case where the constraint object is a record type.
-    //
-    // param constraint {{prop: (number|undefined)}}
-    // function f(constraint) {}
-    // f({});
-    //
-    // We want to modify the object literal to match the constraint, by
-    // taking any each property on the record and trying to match
-    // properties on this object.
     if (constraint.isRecordType()) {
       matchRecordTypeConstraint(constraint.toObjectType());
     }
   }
