diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/b38ba774-4824-47e1-9498-156bd36156ef_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/f7998bb2-9f03-4938-a363-d953932b87b4_fixed.java
index f74e742..f59597a 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/b38ba774-4824-47e1-9498-156bd36156ef_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/f7998bb2-9f03-4938-a363-d953932b87b4_fixed.java
@@ -1,24 +1,4 @@
-    public final void translate(CharSequence input, Writer out) throws IOException {
+    public void translate(CharSequence input, Writer out) throws IOException {
         if (out == null) {
-            throw new IllegalArgumentException("The Writer must not be null");
-        }
-        if (input == null) {
-            return;
-        }
-        int pos = 0;
-        int len = input.length();
-        while (pos < len) {
-            int consumed = translate(input, pos, out);
-            if (consumed == 0) {
-                char[] c = Character.toChars(Character.codePointAt(input, pos));
-                out.write(c);
-                pos+= c.length;
-                continue;
-            }
-//          // contract with translators is that they have to understand codepoints 
-//          // and they just took care of a surrogate pair
-            for (int pt = 0; pt < consumed; pt++) {
-                pos += Character.charCount(Character.codePointAt(input, pos));
-            }
-        }
+            throw new IllegalArgumentException("        }
     }
