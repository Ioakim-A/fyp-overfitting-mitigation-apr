diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/6fc7695b-c433-4c4d-bab5-61ff8ac51eb4_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/56ad0fc2-381e-4366-a312-b8ae442da97d_fixed.java
index 9092be9..bab651a 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/6fc7695b-c433-4c4d-bab5-61ff8ac51eb4_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/56ad0fc2-381e-4366-a312-b8ae442da97d_fixed.java
@@ -1,47 +1,37 @@
-    public int translate(CharSequence input, int index, Writer out) throws IOException {
+    public int translate(CharSequence input, int index, int length, Writer out) throws IOException {
         int seqEnd = input.length();
-        // Uses -2 to ensure there is something after the &#
-        if(input.charAt(index) == '&' && index < seqEnd - 1 && input.charAt(index + 1) == '#') {
+        if(index < seqEnd && input.charAt(index) == '&' && index < seqEnd - 1 && input.charAt(index + 1) == '#') {
             int start = index + 2;
             boolean isHex = false;
-
             char firstChar = input.charAt(start);
             if(firstChar == 'x' || firstChar == 'X') {
                 start++;
                 isHex = true;
-
-                // Check there's more than just an x after the &#
             }
-
             int end = start;
-            // Note that this supports character codes without a ; on the end
             while(input.charAt(end) != ';')
             {
                 end++;
             }
-
             int entityValue;
             try {
                 if(isHex) {
                     entityValue = Integer.parseInt(input.subSequence(start, end).toString(), 16);
                 } else {
                     entityValue = Integer.parseInt(input.subSequence(start, end).toString(), 10);
                 }
             } catch(NumberFormatException nfe) {
             System.err.println("FAIL: " + input.subSequence(start, end) + "[" + start +"]["+ end +"]");
                 return 0;
             }
-
             if(entityValue > 0xFFFF) {
                 char[] chrs = Character.toChars(entityValue);
                 out.write(chrs[0]);
                 out.write(chrs[1]);
             } else {
                 out.write(entityValue);
             }
-
-
             return 2 + (end - start) + (isHex ? 1 : 0) + 1;
         }
         return 0;
     }
