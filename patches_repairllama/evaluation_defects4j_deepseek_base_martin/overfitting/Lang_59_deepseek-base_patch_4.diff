diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/105a23ce-25ab-4244-9045-acf245a9db3d_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/e9fe719a-eeab-4598-8984-1dad67b631a5_fixed.java
index 735a993..d2b0313 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/105a23ce-25ab-4244-9045-acf245a9db3d_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/e9fe719a-eeab-4598-8984-1dad67b631a5_fixed.java
@@ -1,29 +1,29 @@
     /**
      * Appends an object to the builder padding on the right to a fixed length.
      * The <code>toString</code> of the object is used.
      * If the object is larger than the length, the right hand side is lost.
      * If the object is null, null text value is used.
      * 
      * @param obj  the object to append, null uses null text
      * @param width  the fixed field width, zero or negative has no effect
      * @param padChar  the pad character to use
      * @return this, to enable chaining
      */
     public StrBuilder appendFixedWidthPadRight(Object obj, int width, char padChar) {
         if (width > 0) {
             ensureCapacity(size + width);
             String str = (obj == null ? getNullText() : obj.toString());
             int strLen = str.length();
             if (strLen >= width) {
-                str.getChars(0, strLen, buffer, size);
+                str.getChars(0, Math.min(strLen, width), buffer, size);
             } else {
                 int padLen = width - strLen;
                 str.getChars(0, strLen, buffer, size);
                 for (int i = 0; i < padLen; i++) {
                     buffer[size + strLen + i] = padChar;
                 }
             }
             size += width;
         }
         return this;
     }
