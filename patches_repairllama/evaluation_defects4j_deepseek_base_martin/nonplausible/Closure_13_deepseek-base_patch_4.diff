diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/71d0c104-016c-40e8-bd23-a95d3cac55be_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/db96bf5d-63a1-44db-97ac-6a6ed57f3c81_fixed.java
index b5d94e0..adac88e 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/71d0c104-016c-40e8-bd23-a95d3cac55be_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/db96bf5d-63a1-44db-97ac-6a6ed57f3c81_fixed.java
@@ -1,26 +1,22 @@
   private void traverse(Node node) {
     // The goal here is to avoid retraversing
     // the entire AST to catch newly created opportunities.
     // So we track whether a "unit of code" has changed,
     // and revisit immediately.
     if (!shouldVisit(node)) {
       return;
     }
-
     int visits = 0;
     do {
       Node c = node.getFirstChild();
       while(c != null) {
         traverse(c);
         Node next = c.getNext();
         c = next;
       }
-
       visit(node);
       visits++;
-
       Preconditions.checkState(visits < 10000, "too many interations");
     } while (shouldRetraverse(node));
-
     exitNode(node);
   }
