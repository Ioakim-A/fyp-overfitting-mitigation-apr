diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/c58d65c6-066a-415f-9f3b-9efa0aded010_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/1d1baee9-854e-4ac9-9ebd-357ff4c042ec_fixed.java
index 1c53d31..c68d755 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/c58d65c6-066a-415f-9f3b-9efa0aded010_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/1d1baee9-854e-4ac9-9ebd-357ff4c042ec_fixed.java
@@ -1,20 +1,20 @@
   @SuppressWarnings("unchecked") // Casts guarded by conditionals.
   static TypeAdapter<?> getTypeAdapter(ConstructorConstructor constructorConstructor, Gson gson,
       TypeToken<?> fieldType, JsonAdapter annotation) {
     Class<?> value = annotation.value();
     TypeAdapter<?> typeAdapter;
     if (TypeAdapter.class.isAssignableFrom(value)) {
       Class<TypeAdapter<?>> typeAdapterClass = (Class<TypeAdapter<?>>) value;
       typeAdapter = constructorConstructor.get(TypeToken.get(typeAdapterClass)).construct();
     } else if (TypeAdapterFactory.class.isAssignableFrom(value)) {
       Class<TypeAdapterFactory> typeAdapterFactory = (Class<TypeAdapterFactory>) value;
       typeAdapter = constructorConstructor.get(TypeToken.get(typeAdapterFactory))
           .construct()
           .create(gson, fieldType);
     } else {
       throw new IllegalArgumentException(
           "@JsonAdapter value must be TypeAdapter or TypeAdapterFactory reference.");
     }
-      typeAdapter = typeAdapter.nullSafe();
+
     return typeAdapter;
   }
