diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/fdf68815-9dcf-40c8-adf0-4b498fa7c50a_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/e8fb3ed8-c7c8-4d99-a532-51414226875e_fixed.java
index 6e45f80..fe6796a 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/fdf68815-9dcf-40c8-adf0-4b498fa7c50a_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/e8fb3ed8-c7c8-4d99-a532-51414226875e_fixed.java
@@ -1,21 +1,23 @@
   /**
    * Returns a factory for all subtypes of {@code typeAdapter}. We do a runtime check to confirm
    * that the deserialized type matches the type requested.
    */
   public static <T1> TypeAdapterFactory newTypeHierarchyFactory(
       final Class<T1> clazz, final TypeAdapter<T1> typeAdapter) {
     return new TypeAdapterFactory() {
       @SuppressWarnings("unchecked")
       public <T2> TypeAdapter<T2> create(Gson gson, TypeToken<T2> typeToken) {
         final Class<? super T2> requestedType = typeToken.getRawType();
         if (!clazz.isAssignableFrom(requestedType)) {
           return null;
         }
+        if (clazz.equals(requestedType)) {
           return (TypeAdapter<T2>) typeAdapter;
-
+        }
+        return null;
       }
       @Override public String toString() {
         return "Factory[typeHierarchy=" + clazz.getName() + ",adapter=" + typeAdapter + "]";
       }
     };
   }
