diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/47638d56-f86e-45c6-93d3-6cc432ba50d9_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/3dabca16-d7a6-4c56-9092-4d512d0cff4e_fixed.java
index d6a560a..334cef9 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/47638d56-f86e-45c6-93d3-6cc432ba50d9_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/3dabca16-d7a6-4c56-9092-4d512d0cff4e_fixed.java
@@ -1,33 +1,24 @@
   /**
    * Resolve the referenced type within the enclosing scope.
    */
   @Override
   JSType resolveInternal(ErrorReporter t, StaticScope<JSType> enclosing) {
     // TODO(user): Investigate whether it is really necessary to keep two
     // different mechanisms for resolving named types, and if so, which order
     // makes more sense. Now, resolution via registry is first in order to
     // avoid triggering the warnings built into the resolution via properties.
     boolean resolved = resolveViaRegistry(t, enclosing);
-    if (detectImplicitPrototypeCycle()) {
-      handleTypeCycle(t);
-    }
-
-    if (resolved) {
-      super.resolveInternal(t, enclosing);
-      finishPropertyContinuations();
-      return registry.isLastGeneration() ?
-          getReferencedType() : this;
+    if (!resolved) {
+      resolved = resolveViaProperties(t, enclosing);
     }
 
-    resolveViaProperties(t, enclosing);
-    if (detectImplicitPrototypeCycle()) {
+    if (!resolved) {
       handleTypeCycle(t);
     }
-
     super.resolveInternal(t, enclosing);
     if (isResolved()) {
       finishPropertyContinuations();
     }
     return registry.isLastGeneration() ?
         getReferencedType() : this;
   }
