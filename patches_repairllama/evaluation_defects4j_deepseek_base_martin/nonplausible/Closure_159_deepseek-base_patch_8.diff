diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/6d91c76e-6866-4c47-a77c-e529fc16b70c_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/95a35abe-00e6-4528-b706-74c153fe15f4_fixed.java
index de9af32..71c55cc 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/6d91c76e-6866-4c47-a77c-e529fc16b70c_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/95a35abe-00e6-4528-b706-74c153fe15f4_fixed.java
@@ -1,18 +1,16 @@
   /**
    * @see #findCalledFunctions(Node)
    */
   private void findCalledFunctions(
       Node node, Set<String> changed) {
     Preconditions.checkArgument(changed != null);
     // For each referenced function, add a new reference
-    if (node.getType() == Token.CALL) {
-      Node child = node.getFirstChild();
-      if (child.getType() == Token.NAME) {
-        changed.add(child.getString());
+    for (Node c = node.getFirstChild(); c != null; c = c.getNext()) {
+      if (c.getKind() == Node.Kind.CALL_EXPR) {
+        changed.add(c.getSpelling());
       }
     }
-
     for (Node c = node.getFirstChild(); c != null; c = c.getNext()) {
       findCalledFunctions(c, changed);
     }
   }
