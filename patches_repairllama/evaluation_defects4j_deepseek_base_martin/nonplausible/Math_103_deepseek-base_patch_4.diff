diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/335be3e1-7aa1-4965-b0f9-05af81b24301_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/6d115937-0b47-4404-b8f9-1d1bdf901fdf_fixed.java
index 6cfa79b..746875c 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/335be3e1-7aa1-4965-b0f9-05af81b24301_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/6d115937-0b47-4404-b8f9-1d1bdf901fdf_fixed.java
@@ -1,12 +1,20 @@
     /**
      * For this disbution, X, this method returns P(X &lt; <code>x</code>).
      * @param x the value at which the CDF is evaluated.
      * @return CDF evaluted at <code>x</code>. 
      * @throws MathException if the algorithm fails to converge; unless
      * x is more than 20 standard deviations from the mean, in which case the
      * convergence exception is caught and 0 or 1 is returned.
      */
     public double cumulativeProbability(double x) throws MathException {
-            return 0.5 * (1.0 + Erf.erf((x - mean) /
-                    (standardDeviation * Math.sqrt(2.0))));
+        return distribution.cumulativeProbability(x);
+    }
+
+    /**
+     * For this disbution, X, this method returns P(X = <code>x</code>).
+     * @param x the value at which the PDF is evaluated.
+     * @return PDF evaluted at <code>x</code>. 
+     */
+    public double density(double x) {
+        return distribution.density(x);
     }
