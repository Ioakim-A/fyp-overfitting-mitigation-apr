diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/2f9cbe41-a92c-4c2d-a78f-37fec4c46141_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/51fe2a24-44f1-4395-ac0c-7f3888aa58fa_fixed.java
index 13c1ea9..30a3a5c 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/2f9cbe41-a92c-4c2d-a78f-37fec4c46141_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/51fe2a24-44f1-4395-ac0c-7f3888aa58fa_fixed.java
@@ -1,18 +1,18 @@
 	public static boolean containsAny(CharSequence cs, char[] searchChars) {
 		if (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {
 			return false;
 		}
 		int csLength = cs.length();
 		int searchLength = searchChars.length;
-		for (int i = 0; i < csLength; i++) {
-			char ch = cs.charAt(i);
-			for (int j = 0; j < searchLength; j++) {
-				if (searchChars[j] == ch) {
-						// ch is a supplementary character
-						// ch is in the Basic Multilingual Plane
-						return true;
+// buggy code
+//		for (int i = 0; i < csLength; i++) {
+//			char ch = cs.charAt(i);
+//			for (int j = 0; j < searchLength; j++) {
+//				if (searchChars[j] == ch) {
+//						return true;
+//		
 				}
 			}
 		}
 		return false;
 	}
