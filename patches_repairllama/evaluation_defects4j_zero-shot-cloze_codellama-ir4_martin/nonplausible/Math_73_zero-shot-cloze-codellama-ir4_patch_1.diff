diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/909c0ea2-7027-4def-ae3d-284d6e0888c8_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/3767d7dc-a068-4c28-b31b-5c4af4bf14b0_fixed.java
index c4e5233..f576edb 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/909c0ea2-7027-4def-ae3d-284d6e0888c8_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/3767d7dc-a068-4c28-b31b-5c4af4bf14b0_fixed.java
@@ -1,43 +1,32 @@
     public double solve(final UnivariateRealFunction f,
                         final double min, final double max, final double initial)
         throws MaxIterationsExceededException, FunctionEvaluationException {
-
         clearResult();
         verifySequence(min, initial, max);
-
-        // return the initial guess if it is good enough
         double yInitial = f.value(initial);
         if (Math.abs(yInitial) <= functionValueAccuracy) {
             setResult(initial, 0);
             return result;
         }
-
-        // return the first endpoint if it is good enough
         double yMin = f.value(min);
         if (Math.abs(yMin) <= functionValueAccuracy) {
             setResult(yMin, 0);
             return result;
         }
-
-        // reduce interval if min and initial bracket the root
         if (yInitial * yMin < 0) {
             return solve(f, min, yMin, initial, yInitial, min, yMin);
         }
-
-        // return the second endpoint if it is good enough
         double yMax = f.value(max);
         if (Math.abs(yMax) <= functionValueAccuracy) {
             setResult(yMax, 0);
             return result;
         }
-
-        // reduce interval if initial and max bracket the root
         if (yInitial * yMax < 0) {
             return solve(f, initial, yInitial, max, yMax, initial, yInitial);
         }
-
-
-        // full Brent algorithm starting with provided initial guess
+// buggy code
+//        if (yMin * yMax < 0) {
+//            return solve(f, min, yMin, max, yMax, initial, yInitial);
+//        }
         return solve(f, min, yMin, max, yMax, initial, yInitial);
-
     }
