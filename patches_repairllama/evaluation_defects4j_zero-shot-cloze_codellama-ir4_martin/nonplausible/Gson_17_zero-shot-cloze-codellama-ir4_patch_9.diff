diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/e4a1d95c-57b4-4979-ac87-6e6b324a8479_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/3488add6-8451-4895-808f-bcecaec082a4_fixed.java
index 44d6cc6..84f827e 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/e4a1d95c-57b4-4979-ac87-6e6b324a8479_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/3488add6-8451-4895-808f-bcecaec082a4_fixed.java
@@ -1,16 +1,24 @@
   public Date read(JsonReader in) throws IOException {
-    if (in.peek() != JsonToken.STRING) {
-      throw new JsonParseException("The date should be a string value");
+// buggy code
+//    if (in.peek() != JsonToken.STRING) {
+//      throw new JsonParseException("The date should be a string value");
+//    }
+//    Date date = deserializeToDate(in.nextString());
+//    if (dateType == Date.class) {
+//      return date;
+//    } else if (dateType == Timestamp.class) {
+//      return new Timestamp(date.getTime());
+//    } else if (dateType == java.sql.Date.class) {
+//      return new java.sql.Date(date.getTime());
     }
     Date date = deserializeToDate(in.nextString());
     if (dateType == Date.class) {
       return date;
     } else if (dateType == Timestamp.class) {
       return new Timestamp(date.getTime());
     } else if (dateType == java.sql.Date.class) {
       return new java.sql.Date(date.getTime());
     } else {
-      // This must never happen: dateType is guarded in the primary constructor
       throw new AssertionError();
     }
   }
