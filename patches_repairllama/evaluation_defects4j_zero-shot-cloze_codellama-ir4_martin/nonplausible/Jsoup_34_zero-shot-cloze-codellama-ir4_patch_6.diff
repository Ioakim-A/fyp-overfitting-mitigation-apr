diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/19c0d8f5-2d9d-464c-b70f-47b1f526387a_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/58a1de6a-2200-4b40-9ea8-f343367fc449_fixed.java
index 3ea5b43..9ff91dd 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/19c0d8f5-2d9d-464c-b70f-47b1f526387a_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/58a1de6a-2200-4b40-9ea8-f343367fc449_fixed.java
@@ -1,17 +1,33 @@
     int nextIndexOf(CharSequence seq) {
-        // doesn't handle scanning for surrogates
         char startChar = seq.charAt(0);
         for (int offset = pos; offset < length; offset++) {
-            // scan to first instance of startchar:
+            if (startChar != input[offset])
+                while(++offset < length && startChar != input[offset]);
+            int i = offset + 1;
+            int last = i + seq.length()-1;
+// buggy code
+//            if (offset < length) {
+               for (int j = 1; i < last && seq.charAt(j) == input[i]; i++, j++);
+                if (i == last) 
+                    return offset - pos;
+            }
+        }
+        return -1;
+    }
+
+
+    int nextIndexOf(CharSequence seq) {
+        char startChar = seq.charAt(0);
+        for (int offset = pos; offset < length; offset++) {
             if (startChar != input[offset])
                 while(++offset < length && startChar != input[offset]);
             int i = offset + 1;
             int last = i + seq.length()-1;
             if (offset < length) {
                 for (int j = 1; i < last && seq.charAt(j) == input[i]; i++, j++);
-                if (i == last) // found full sequence
+                if (i == last) 
                     return offset - pos;
             }
         }
         return -1;
     }
