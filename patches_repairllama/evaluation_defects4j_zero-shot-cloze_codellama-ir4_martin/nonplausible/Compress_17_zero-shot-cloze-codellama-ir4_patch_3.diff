diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/4192c38a-1c30-4d32-9c5a-eb52de2dffe9_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/855715e3-abcc-4af7-8179-213e375dfde9_fixed.java
index d2fcb52..e98a188 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/4192c38a-1c30-4d32-9c5a-eb52de2dffe9_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/855715e3-abcc-4af7-8179-213e375dfde9_fixed.java
@@ -1,50 +1,43 @@
     public static long parseOctal(final byte[] buffer, final int offset, final int length) {
         long    result = 0;
         int     end = offset + length;
         int     start = offset;
-
         if (length < 2){
             throw new IllegalArgumentException("Length "+length+" must be at least 2");
         }
-
         if (buffer[start] == 0) {
             return 0L;
         }
-
-        // Skip leading spaces
         while (start < end){
             if (buffer[start] == ' '){
                 start++;
             } else {
                 break;
             }
         }
-
-        // Must have trailing NUL or space
         byte trailer;
         trailer = buffer[end-1];
         if (trailer == 0 || trailer == ' '){
             end--;
         } else {
             throw new IllegalArgumentException(
                     exceptionMessage(buffer, offset, length, end-1, trailer));
         }
-        // May have additional NULs or spaces
         trailer = buffer[end - 1];
-        if (trailer == 0 || trailer == ' '){
-            end--;
+// buggy code
+//        if (trailer == 0 || trailer == ' '){
+//            end--;
+//        } else {
+//            throw new IllegalArgumentException(
+//                    exceptionMessage(buffer, offset, length, start, trailer));
         }
-
         for ( ;start < end; start++) {
             final byte currentByte = buffer[start];
-            // CheckStyle:MagicNumber OFF
             if (currentByte < '0' || currentByte > '7'){
                 throw new IllegalArgumentException(
                         exceptionMessage(buffer, offset, length, start, currentByte));
             }
-            result = (result << 3) + (currentByte - '0'); // convert from ASCII
-            // CheckStyle:MagicNumber ON
+            result = (result << 3) + (currentByte - '0'); 
         }
-
         return result;
     }
