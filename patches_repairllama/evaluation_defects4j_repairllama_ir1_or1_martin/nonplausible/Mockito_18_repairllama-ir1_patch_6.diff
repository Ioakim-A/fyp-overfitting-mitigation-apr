diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/d2a56fcc-576f-42b0-8fe3-ddbf4a9869d4_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/5cea39a8-1c00-4b6b-9c1e-5449b135b26b_fixed.java
index 710fcc0..73fe207 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/d2a56fcc-576f-42b0-8fe3-ddbf4a9869d4_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/5cea39a8-1c00-4b6b-9c1e-5449b135b26b_fixed.java
@@ -1,37 +1,18 @@
    Object returnValueFor(Class<?> type) {
         if (Primitives.isPrimitiveOrWrapper(type)) {
             return Primitives.defaultValueForPrimitiveOrWrapper(type);
-            //new instances are used instead of Collections.emptyList(), etc.
-            //to avoid UnsupportedOperationException if code under test modifies returned collection
-        } else if (type == Collection.class) {
+        } else if (Collection.class.isAssignableFrom(type)) {
             return new LinkedList<Object>();
-        } else if (type == Set.class) {
+        } else if (Set.class.isAssignableFrom(type)) {
             return new HashSet<Object>();
-        } else if (type == HashSet.class) {
+        } else if (HashSet.class.isAssignableFrom(type)) {
             return new HashSet<Object>();
-        } else if (type == SortedSet.class) {
+        } else if (SortedSet.class.isAssignableFrom(type)) {
             return new TreeSet<Object>();
-        } else if (type == TreeSet.class) {
+        } else if (TreeSet.class.isAssignableFrom(type)) {
             return new TreeSet<Object>();
-        } else if (type == LinkedHashSet.class) {
+        } else if (LinkedHashSet.class.isAssignableFrom(type)) {
             return new LinkedHashSet<Object>();
-        } else if (type == List.class) {
+        } else if (List.class.isAssignableFrom(type)) {
             return new LinkedList<Object>();
-        } else if (type == LinkedList.class) {
-            return new LinkedList<Object>();
-        } else if (type == ArrayList.class) {
-            return new ArrayList<Object>();
-        } else if (type == Map.class) {
-            return new HashMap<Object, Object>();
-        } else if (type == HashMap.class) {
-            return new HashMap<Object, Object>();
-        } else if (type == SortedMap.class) {
-            return new TreeMap<Object, Object>();
-        } else if (type == TreeMap.class) {
-            return new TreeMap<Object, Object>();
-        } else if (type == LinkedHashMap.class) {
-            return new LinkedHashMap<Object, Object>();
-        }
-        //Let's not care about the rest of collections.
-        return null;
-    }
+        } else if (
\ No newline at end of file
