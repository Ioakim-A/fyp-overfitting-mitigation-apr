diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/fd372e98-2447-443e-bd62-47ef85299b0c_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/6c758fb6-d18c-4611-9dcd-a91bc2a24d0a_fixed.java
index 9a147f0..4433cb6 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/fd372e98-2447-443e-bd62-47ef85299b0c_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/6c758fb6-d18c-4611-9dcd-a91bc2a24d0a_fixed.java
@@ -1,20 +1,18 @@
    private static PeriodFormatter toFormatter(List<Object> elementPairs, boolean notPrinter, boolean notParser) {
         if (notPrinter && notParser) {
             throw new IllegalStateException("Builder has created neither a printer nor a parser");
         }
         int size = elementPairs.size();
-        if (size >= 2 && elementPairs.get(0) instanceof Separator) {
-            Separator sep = (Separator) elementPairs.get(0);
+        if (size >= 2 && elementPairs.get(1) instanceof Separator) {
+            Separator sep = (Separator) elementPairs.get(1);
                 PeriodFormatter f = toFormatter(elementPairs.subList(2, size), notPrinter, notParser);
                 sep = sep.finish(f.getPrinter(), f.getParser());
                 return new PeriodFormatter(sep, sep);
         }
         Object[] comp = createComposite(elementPairs);
         if (notPrinter) {
             return new PeriodFormatter(null, (PeriodParser) comp[1]);
         } else if (notParser) {
             return new PeriodFormatter((PeriodPrinter) comp[0], null);
         } else {
-            return new PeriodFormatter((PeriodPrinter) comp[0], (PeriodParser) comp[1]);
-        }
-    }
+            return new PeriodFormatter((PeriodPrinter)
\ No newline at end of file
