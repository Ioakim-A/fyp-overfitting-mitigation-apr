diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/f3f70b99-2eef-4d33-ab0f-8ffc61d45e83_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/072f101a-0342-4440-a5dc-ead07bc4b692_fixed.java
index 33d684c..b9f3b98 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/f3f70b99-2eef-4d33-ab0f-8ffc61d45e83_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/072f101a-0342-4440-a5dc-ead07bc4b692_fixed.java
@@ -1,86 +1,26 @@
  private void computeGenKill(Node n, BitSet gen, BitSet kill,
       boolean conditional) {
-
     switch (n.getType()) {
       case Token.SCRIPT:
       case Token.BLOCK:
       case Token.FUNCTION:
         return;
-
       case Token.WHILE:
       case Token.DO:
       case Token.IF:
         computeGenKill(NodeUtil.getConditionExpression(n), gen, kill,
             conditional);
         return;
-
       case Token.FOR:
         if (!NodeUtil.isForIn(n)) {
           computeGenKill(NodeUtil.getConditionExpression(n), gen, kill,
               conditional);
         } else {
-          // for(x in y) {...}
           Node lhs = n.getFirstChild();
           Node rhs = lhs.getNext();
           if (NodeUtil.isVar(lhs)) {
-            // for(var x in y) {...}
             lhs = lhs.getLastChild();
           }
             addToSetIfLocal(lhs, kill);
             addToSetIfLocal(lhs, gen);
-          computeGenKill(rhs, gen, kill, conditional);
-        }
-        return;
-
-      case Token.VAR:
-        for (Node c = n.getFirstChild(); c != null; c = c.getNext()) {
-          if (c.hasChildren()) {
-            computeGenKill(c.getFirstChild(), gen, kill, conditional);
-            if (!conditional) {
-              addToSetIfLocal(c, kill);
-            }
-          }
-        }
-        return;
-
-      case Token.AND:
-      case Token.OR:
-        computeGenKill(n.getFirstChild(), gen, kill, conditional);
-        // May short circuit.
-        computeGenKill(n.getLastChild(), gen, kill, true);
-        return;
-
-      case Token.HOOK:
-        computeGenKill(n.getFirstChild(), gen, kill, conditional);
-        // Assume both sides are conditional.
-        computeGenKill(n.getFirstChild().getNext(), gen, kill, true);
-        computeGenKill(n.getLastChild(), gen, kill, true);
-        return;
-
-      case Token.NAME:
-        if (isArgumentsName(n)) {
-          markAllParametersEscaped();
-        } else {
-          addToSetIfLocal(n, gen);
-        }
-        return;
-
-      default:
-        if (NodeUtil.isAssignmentOp(n) && NodeUtil.isName(n.getFirstChild())) {
-          Node lhs = n.getFirstChild();
-          if (!conditional) {
-            addToSetIfLocal(lhs, kill);
-          }
-          if (!NodeUtil.isAssign(n)) {
-            // assignments such as a += 1 reads a.
-            addToSetIfLocal(lhs, gen);
-          }
-          computeGenKill(lhs.getNext(), gen, kill, conditional);
-        } else {
-          for (Node c = n.getFirstChild(); c != null; c = c.getNext()) {
-            computeGenKill(c, gen, kill, conditional);
-          }
-        }
-        return;
-    }
-  }
+          computeGenKill(rhs, gen, kill,
\ No newline at end of file
