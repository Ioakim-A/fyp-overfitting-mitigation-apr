diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/7461bb56-d16e-40ba-92c6-1620872518eb_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/70f6080b-c91b-47cc-9509-7545c72ec741_fixed.java
index 71189c3..d9e4b9e 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/7461bb56-d16e-40ba-92c6-1620872518eb_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/70f6080b-c91b-47cc-9509-7545c72ec741_fixed.java
@@ -1,46 +1,27 @@
    public void validate(final WriteableCommandLine commandLine)
         throws OptionException {
-        // number of options found
         int present = 0;
-
-        // reference to first unexpected option
         Option unexpected = null;
-
         for (final Iterator i = options.iterator(); i.hasNext();) {
             final Option option = (Option) i.next();
-
-            // needs validation?
             boolean validate = option.isRequired() || option instanceof Group;
             if (validate) {
                 option.validate(commandLine);
             }
-
-            // if the child option is present then validate it
             if (commandLine.hasOption(option)) {
                 if (++present > maximum) {
                     unexpected = option;
-
                     break;
                 }
-
                 option.validate(commandLine);
             }
         }
-
-        // too many options
         if (unexpected != null) {
             throw new OptionException(this, ResourceConstants.UNEXPECTED_TOKEN,
                                       unexpected.getPreferredName());
         }
-
-        // too few option
         if (present < minimum) {
             throw new OptionException(this, ResourceConstants.MISSING_OPTION);
         }
-
-        // validate each anonymous argument
         for (final Iterator i = anonymous.iterator(); i.hasNext();) {
-            final Option option = (Option) i.next();
-            option.validate(commandLine);
-        }
-    }
+            final Option option
\ No newline at end of file
