diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/0d0b9646-ca53-4ba4-a855-78b58ee6467e_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/3a157f63-a6d2-4f6a-b712-91bc5afbad8c_fixed.java
index 9a8827e..e63ca24 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/0d0b9646-ca53-4ba4-a855-78b58ee6467e_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/3a157f63-a6d2-4f6a-b712-91bc5afbad8c_fixed.java
@@ -1,27 +1,21 @@
 private void checkInterfaceConflictProperties(NodeTraversal t, Node n,
       String functionName, HashMap<String, ObjectType> properties,
       HashMap<String, ObjectType> currentProperties,
       ObjectType interfaceType) {
     ObjectType implicitProto = interfaceType.getImplicitPrototype();
     Set<String> currentPropertyNames;
-      // This can be the case if interfaceType is proxy to a non-existent
-      // object (which is a bad type annotation, but shouldn't crash).
       currentPropertyNames = implicitProto.getOwnPropertyNames();
     for (String name : currentPropertyNames) {
       ObjectType oType = properties.get(name);
       if (oType != null) {
         if (!interfaceType.getPropertyType(name).isEquivalentTo(
             oType.getPropertyType(name))) {
           compiler.report(
               t.makeError(n, INCOMPATIBLE_EXTENDED_PROPERTY_TYPE,
                   functionName, name, oType.toString(),
                   interfaceType.toString()));
         }
       }
       currentProperties.put(name, interfaceType);
     }
     for (ObjectType iType : interfaceType.getCtorExtendedInterfaces()) {
-      checkInterfaceConflictProperties(t, n, functionName, properties,
-          currentProperties, iType);
-    }
-  }
