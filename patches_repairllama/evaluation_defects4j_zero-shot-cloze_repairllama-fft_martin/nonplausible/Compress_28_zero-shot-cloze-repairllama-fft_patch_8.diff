diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/51764e59-a319-4618-9cb0-d79caf6df196_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/1f3e6f58-0a05-4f1d-9407-95fc6d158334_fixed.java
index 661ff51..4c698fb 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/51764e59-a319-4618-9cb0-d79caf6df196_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/1f3e6f58-0a05-4f1d-9407-95fc6d158334_fixed.java
@@ -1,24 +1,31 @@
     public int read(byte[] buf, int offset, int numToRead) throws IOException {
     	int totalRead = 0;
-
         if (hasHitEOF || entryOffset >= entrySize) {
             return -1;
         }
-
         if (currEntry == null) {
             throw new IllegalStateException("No current tar entry");
         }
-
         numToRead = Math.min(numToRead, available());
-        
         totalRead = is.read(buf, offset, numToRead);
+// buggy code
+//        count(totalRead);
+//        if (totalRead == -1) {
+//            hasHitEOF = true;
+//        } else {
+//            entryOffset += totalRead;
+//        }
+        if (totalRead > 0) {
             count(totalRead);
-        
             if (totalRead == -1) {
                 hasHitEOF = true;
+            }
         } else {
+            hasHitEOF = true;
+        }
+        if (totalRead != -1) {
+
             entryOffset += totalRead;
         }
-
         return totalRead;
     }
