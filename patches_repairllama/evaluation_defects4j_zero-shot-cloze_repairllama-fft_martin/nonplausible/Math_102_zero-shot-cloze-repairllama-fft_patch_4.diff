diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/97dbe18a-6474-45f0-bf25-21bf1f8311a4_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/446f6e8d-f843-47e2-af79-19d43cc4b9c7_fixed.java
index 9dbd4e4..5b99b39 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/97dbe18a-6474-45f0-bf25-21bf1f8311a4_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/446f6e8d-f843-47e2-af79-19d43cc4b9c7_fixed.java
@@ -1,18 +1,26 @@
     public double chiSquare(double[] expected, long[] observed)
         throws IllegalArgumentException {
         if ((expected.length < 2) || (expected.length != observed.length)) {
             throw new IllegalArgumentException(
                     "observed, expected array lengths incorrect");
         }
         if (!isPositive(expected) || !isNonNegative(observed)) {
             throw new IllegalArgumentException(
                 "observed counts must be non-negative and expected counts must be postive");
         }
+// buggy code
+//        double sumSq = 0.0d;
+//        double dev = 0.0d;
+//        for (int i = 0; i < observed.length; i++) {
+//                dev = ((double) observed[i] - expected[i]);
+//                sumSq += dev * dev / expected[i];
+//        }
         double sumSq = 0.0d;
         double dev = 0.0d;
         for (int i = 0; i < observed.length; i++) {
-                dev = ((double) observed[i] - expected[i]);
-                sumSq += dev * dev / expected[i];
+                dev = ((double) observed[i] - expected[i]) / expected[i];
+                sumSq += dev * dev;
+
         }
         return sumSq;
     }
