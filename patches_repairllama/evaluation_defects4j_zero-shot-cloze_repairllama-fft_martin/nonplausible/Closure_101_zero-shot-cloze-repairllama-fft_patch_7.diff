diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/6f493c4f-544f-4b42-8378-3de08c1aade7_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/ca1e75ee-8556-4e03-ad1f-db6a014dbd67_fixed.java
index a1e21c4..61fc8c4 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/6f493c4f-544f-4b42-8378-3de08c1aade7_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/ca1e75ee-8556-4e03-ad1f-db6a014dbd67_fixed.java
@@ -1,21 +1,24 @@
   protected CompilerOptions createOptions() {
     CompilerOptions options = new CompilerOptions();
     options.setCodingConvention(new ClosureCodingConvention());
     CompilationLevel level = flags.compilation_level;
     level.setOptionsForCompilationLevel(options);
     if (flags.debug) {
       level.setDebugOptionsForCompilationLevel(options);
     }
-
     WarningLevel wLevel = flags.warning_level;
     wLevel.setOptionsForWarningLevel(options);
     for (FormattingOption formattingOption : flags.formatting) {
       formattingOption.applyToOptions(options);
     }
+// buggy code
+//    if (flags.process_closure_primitives) {
+//      options.closurePass = true;
+//    }
    if (flags.process_closure_primitives) {
-      options.closurePass = true;
+      options.setProcessClosurePrimitives(true);
     }
 
     initOptionsFromFlags(options);
     return options;
   }
