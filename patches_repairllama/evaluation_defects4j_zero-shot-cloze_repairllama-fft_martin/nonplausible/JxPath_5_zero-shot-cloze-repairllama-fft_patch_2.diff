diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/73f9e128-b1c5-41d4-bbb6-b852fa14d7e8_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/7ea6c05f-041a-458a-8ca4-ad607193286e_fixed.java
index 5f8ac1a..1c0a6a4 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/73f9e128-b1c5-41d4-bbb6-b852fa14d7e8_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/7ea6c05f-041a-458a-8ca4-ad607193286e_fixed.java
@@ -1,34 +1,39 @@
     private int compareNodePointers(
         NodePointer p1,
         int depth1,
         NodePointer p2,
         int depth2) 
     {
         if (depth1 < depth2) {
             int r = compareNodePointers(p1, depth1, p2.parent, depth2 - 1);
             return r == 0 ? -1 : r;
         }
         if (depth1 > depth2) {
             int r = compareNodePointers(p1.parent, depth1 - 1, p2, depth2);
             return r == 0 ? 1 : r;
         }
         if (p1 == null && p2 == null) {
             return 0;
         }
-
         if (p1 != null && p1.equals(p2)) {
             return 0;
         }
-
         if (depth1 == 1) {
+// buggy code
+//            throw new JXPathException(
+//                    "Cannot compare pointers that do not belong to the same tree: '"
+//                            + p1 + "' and '" + p2 + "'");
+           return -1;
+        }
+        if (depth2 == 1) {
             throw new JXPathException(
                     "Cannot compare pointers that do not belong to the same tree: '"
                             + p1 + "' and '" + p2 + "'");
+            return 1;
         }
         int r = compareNodePointers(p1.parent, depth1 - 1, p2.parent, depth2 - 1);
         if (r != 0) {
             return r;
         }
-
         return p1.parent.compareChildNodePointers(p1, p2);
     }
