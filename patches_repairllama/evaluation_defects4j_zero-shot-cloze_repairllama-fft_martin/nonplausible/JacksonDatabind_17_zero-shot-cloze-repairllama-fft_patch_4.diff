diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/9e9479a5-459a-481a-abe9-c60e4e68e635_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/f648e4fa-fb47-4688-b5af-ecf7983952c4_fixed.java
index 9e16ea1..40bacd4 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/9e9479a5-459a-481a-abe9-c60e4e68e635_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/f648e4fa-fb47-4688-b5af-ecf7983952c4_fixed.java
@@ -1,27 +1,23 @@
         public boolean useForType(JavaType t)
         {
             switch (_appliesFor) {
             case NON_CONCRETE_AND_ARRAYS:
                 while (t.isArrayType()) {
                     t = t.getContentType();
                 }
-                // fall through
             case OBJECT_AND_NON_CONCRETE:
-//                return t.isJavaLangObject() || 
                 return (t.getRawClass() == Object.class)
                         || (!t.isConcrete()
-                                // [databind#88] Should not apply to JSON tree models:
-                        || TreeNode.class.isAssignableFrom(t.getRawClass()));
+// buggy code
+//                        || TreeNode.class.isAssignableFrom(t.getRawClass()));
+                       || !t.isFinal() && TreeNode.class.isAssignableFrom(t.getRawClass()));
 
             case NON_FINAL:
                 while (t.isArrayType()) {
                     t = t.getContentType();
                 }
-                // [Issue#88] Should not apply to JSON tree models:
                 return !t.isFinal() && !TreeNode.class.isAssignableFrom(t.getRawClass());
             default:
-            //case JAVA_LANG_OBJECT:
-//                return t.isJavaLangObject();
                 return (t.getRawClass() == Object.class);
             }
         }
