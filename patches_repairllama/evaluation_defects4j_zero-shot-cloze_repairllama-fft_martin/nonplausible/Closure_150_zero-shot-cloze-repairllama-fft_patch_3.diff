diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/850591cc-b668-4ecc-85dc-c72489c543f6_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/b07b8b20-142e-4ce2-93c9-cb1a1c5b6976_fixed.java
index 88f63e7..e9483df 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/850591cc-b668-4ecc-85dc-c72489c543f6_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/b07b8b20-142e-4ce2-93c9-cb1a1c5b6976_fixed.java
@@ -1,24 +1,34 @@
     @Override public void visit(NodeTraversal t, Node n, Node parent) {
       if (n == scope.getRootNode()) return;
-
       if (n.getType() == Token.LP && parent == scope.getRootNode()) {
         handleFunctionInputs(parent);
         return;
       }
-
-      attachLiteralTypes(n);
-      switch (n.getType()) {
-        case Token.FUNCTION:
+// buggy code
+//      attachLiteralTypes(n);
+//      switch (n.getType()) {
+//        case Token.FUNCTION:
+//          if (parent.getType() == Token.NAME) {
+//            return;
+//          }
+//          defineDeclaredFunction(n, parent);
+//          break;
+//        case Token.CATCH:
+//          defineCatch(n, parent);
+//          break;
+//        case Token.VAR:
+//          defineVar(n, parent);
+//          break;
+//      }
+     if (n.getType() == Token.FUNCTION) {
         if (parent.getType() == Token.NAME) {
           return;
         }
         defineDeclaredFunction(n, parent);
-          break;
-        case Token.CATCH:
+      } else if (n.getType() == Token.CATCH) {
         defineCatch(n, parent);
-          break;
-        case Token.VAR:
+      } else if (n.getType() == Token.VAR) {
         defineVar(n, parent);
-          break;
       }
+
     }
