diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/dcbb04d4-b660-44c9-9a34-4018f062221f_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/adffedae-01b7-4245-93bb-8749c58281f5_fixed.java
index 39dd8e7..20d98a2 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/dcbb04d4-b660-44c9-9a34-4018f062221f_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/adffedae-01b7-4245-93bb-8749c58281f5_fixed.java
@@ -1,30 +1,30 @@
     private Attribute parseAttribute() {
         tq.consumeWhitespace();
         String key = tq.consumeAttributeKey();
         String value = "";
         tq.consumeWhitespace();
         if (tq.matchChomp("=")) {
             tq.consumeWhitespace();
-
             if (tq.matchChomp(SQ)) {
                 value = tq.chompTo(SQ);
             } else if (tq.matchChomp(DQ)) {
                 value = tq.chompTo(DQ);
             } else {
                 StringBuilder valueAccum = new StringBuilder();
-                // no ' or " to look for, so scan to end tag or space (or end of stream)
                 while (!tq.matchesAny("<", "/>", ">") && !tq.matchesWhitespace() && !tq.isEmpty()) {
                     valueAccum.append(tq.consume());
                 }
                 value = valueAccum.toString();
             }
             tq.consumeWhitespace();
         }
         if (key.length() != 0)
             return Attribute.createFromEncoded(key, value);
         else {
-            tq.consume();
+// buggy code
+//            tq.consume();
+//            tq.consume();
 
             return null;
         }
     }
