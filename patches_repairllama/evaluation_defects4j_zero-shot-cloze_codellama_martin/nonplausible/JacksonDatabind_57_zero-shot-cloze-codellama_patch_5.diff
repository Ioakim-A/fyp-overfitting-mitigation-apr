diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/507ed9e3-95d6-401d-893d-0b0d11d25e85_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/d6cf7aee-32aa-436c-851f-4005d80f1f1b_fixed.java
index 2e75e15..45d7f81 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/507ed9e3-95d6-401d-893d-0b0d11d25e85_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/d6cf7aee-32aa-436c-851f-4005d80f1f1b_fixed.java
@@ -1,9 +1,33 @@
     public <T> MappingIterator<T> readValues(byte[] src, int offset, int length)
         throws IOException, JsonProcessingException
     {
         if (_dataFormatReaders != null) {
             return _detectBindAndReadValues(_dataFormatReaders.findFormat(src, offset, length), false);
         }
-        return _bindAndReadValues(_considerFilter(_parserFactory.createParser(src),
+       return _detectBindAndReadValues(_findFormat(src, offset, length), false);
+    }
+
+    public <T> MappingIterator<T> readValues(byte[] src)
+        throws IOException, JsonProcessingException
+    {
+        if (_dataFormatReaders != null) {
+            return _detectBindAndReadValues(_dataFormatReaders.findFormat(src, 0, src.length), true);
+        }
+        return _detectBindAndReadValues(_findFormat(src, 0, src.length), true);
+    }
+
+    public <T> MappingIterator<T> readValues(InputStream src)
+        throws IOException, JsonProcessingException
+    {
+        if (_dataFormatReaders != null) {
+            return _detectBindAndReadValues(_dataFormatReaders.findFormat(src), true);
+        }
+        return _detectBindAndReadValues(_findFormat(src), true);
+    }
+
+    public <T> MappingIterator<T> readValues(File src)
+        throws IOException, JsonProcessingException
+    {
+        if (_dataFormat
                 true));
     }
