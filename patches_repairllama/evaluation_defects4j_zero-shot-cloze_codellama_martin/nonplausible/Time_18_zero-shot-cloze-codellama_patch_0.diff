diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/8a1b6ef3-3ad0-4803-a306-0b343f82067d_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/587785a2-5ec4-4ae4-89f8-e0078b780825_fixed.java
index be2af16..e902fb7 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/8a1b6ef3-3ad0-4803-a306-0b343f82067d_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/587785a2-5ec4-4ae4-89f8-e0078b780825_fixed.java
@@ -1,29 +1,25 @@
     public long getDateTimeMillis(int year, int monthOfYear, int dayOfMonth,
                                   int hourOfDay, int minuteOfHour,
                                   int secondOfMinute, int millisOfSecond)
         throws IllegalArgumentException
     {
         Chronology base;
         if ((base = getBase()) != null) {
             return base.getDateTimeMillis
                 (year, monthOfYear, dayOfMonth,
                  hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
         }
-
-        // Assume date is Gregorian.
         long instant;
        instant = iGregorianChronology.getDateTimeMillis
             (year, monthOfYear, dayOfMonth,
              hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
         if (instant < iCutoverMillis) {
-            // Maybe it's Julian.
             instant = iJulianChronology.getDateTimeMillis
                 (year, monthOfYear, dayOfMonth,
                  hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
             if (instant >= iCutoverMillis) {
-                // Okay, it's in the illegal cutover gap.
                 throw new IllegalArgumentException("Specified date does not exist");
             }
         }
         return instant;
     }
