diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/1ea19d29-4231-4b72-995c-1e1beafee3c1_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/13de1bf5-ea6f-444e-b088-e9a1f0754a2a_fixed.java
index 7ceca72..6194cea 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/1ea19d29-4231-4b72-995c-1e1beafee3c1_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/13de1bf5-ea6f-444e-b088-e9a1f0754a2a_fixed.java
@@ -1,9 +1,25 @@
     public TokenBuffer deserialize(JsonParser jp, DeserializationContext ctxt) throws IOException
     {
-            copyCurrentStructure(jp);
-        /* 28-Oct-2014, tatu: As per #592, need to support a special case of starting from
-         *    FIELD_NAME, which is taken to mean that we are missing START_OBJECT, but need
-         *    to assume one did exist.
-         */
+       JsonToken t = jp.getCurrentToken();
+        if (t == JsonToken.START_OBJECT) {
+            t = jp.nextToken();
+        }
+        if (t != JsonToken.FIELD_NAME) {
+            throw ctxt.wrongTokenException(jp, JsonToken.FIELD_NAME, t);
+        }
+        String fieldName = jp.getCurrentName();
+        t = jp.nextToken();
+        if (t != JsonToken.START_ARRAY) {
+            throw ctxt.wrongTokenException(jp, JsonToken.START_ARRAY, t);
+        }
+        t = jp.nextToken();
+        if (t != JsonToken.END_ARRAY) {
+            throw ctxt.wrongTokenException(jp, JsonToken.END_ARRAY, t);
+        }
+        t = jp.nextToken();
+        if (t != JsonToken.FIELD_NAME) {
+            throw ctxt.wrongTokenException(jp, JsonToken.FIELD_NAME, t);
+        }
+        if (!fieldName.equals(
         return this;
     }
