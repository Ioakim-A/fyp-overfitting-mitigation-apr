diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/100fbce5-9d2b-43ef-b3a4-ef3432f7825a_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/bb79cad8-5386-43b9-bcc8-8ee83e1acdad_fixed.java
index dde7e35..c49a69f 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/100fbce5-9d2b-43ef-b3a4-ef3432f7825a_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/bb79cad8-5386-43b9-bcc8-8ee83e1acdad_fixed.java
@@ -1,19 +1,22 @@
   static TypeAdapter<?> getTypeAdapter(ConstructorConstructor constructorConstructor, Gson gson,
       TypeToken<?> fieldType, JsonAdapter annotation) {
     Class<?> value = annotation.value();
     TypeAdapter<?> typeAdapter;
     if (TypeAdapter.class.isAssignableFrom(value)) {
       Class<TypeAdapter<?>> typeAdapterClass = (Class<TypeAdapter<?>>) value;
       typeAdapter = constructorConstructor.get(TypeToken.get(typeAdapterClass)).construct();
     } else if (TypeAdapterFactory.class.isAssignableFrom(value)) {
       Class<TypeAdapterFactory> typeAdapterFactory = (Class<TypeAdapterFactory>) value;
       typeAdapter = constructorConstructor.get(TypeToken.get(typeAdapterFactory))
           .construct()
           .create(gson, fieldType);
     } else {
       throw new IllegalArgumentException(
           "@JsonAdapter value must be TypeAdapter or TypeAdapterFactory reference.");
     }
-      typeAdapter = typeAdapter.nullSafe();
+   if (typeAdapter == null) {
+      throw new IllegalArgumentException(
+          "@JsonAdapter value must be TypeAdapter or TypeAdapterFactory reference.");
+    }
     return typeAdapter;
   }
