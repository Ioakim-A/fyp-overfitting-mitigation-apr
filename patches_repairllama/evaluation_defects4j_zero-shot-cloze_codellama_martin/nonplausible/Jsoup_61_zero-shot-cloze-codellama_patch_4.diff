diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/7518d8d0-e1f8-4edb-95d2-9edff61d2428_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/ed1d967d-fcb2-46e7-8035-f627df1b49c7_fixed.java
index e6a5296..e2e2789 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/7518d8d0-e1f8-4edb-95d2-9edff61d2428_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/ed1d967d-fcb2-46e7-8035-f627df1b49c7_fixed.java
@@ -1,42 +1,35 @@
     public boolean hasClass(String className) {
-        final String classAttr = attributes.get("class");
+       String classAttr = getAttribute("class");
+        if (classAttr == null) {
+            return false;
+        }
         final int len = classAttr.length();
         final int wantLen = className.length();
-
         if (len == 0 || len < wantLen) {
             return false;
         }
-
-        // if both lengths are equal, only need compare the className with the attribute
         if (len == wantLen) {
             return className.equalsIgnoreCase(classAttr);
         }
-
-        // otherwise, scan for whitespace and compare regions (with no string or arraylist allocations)
         boolean inClass = false;
         int start = 0;
         for (int i = 0; i < len; i++) {
             if (Character.isWhitespace(classAttr.charAt(i))) {
                 if (inClass) {
-                    // white space ends a class name, compare it with the requested one, ignore case
                     if (i - start == wantLen && classAttr.regionMatches(true, start, className, 0, wantLen)) {
                         return true;
                     }
                     inClass = false;
                 }
             } else {
                 if (!inClass) {
-                    // we're in a class name : keep the start of the substring
                     inClass = true;
                     start = i;
                 }
             }
         }
-
-        // check the last entry
         if (inClass && len - start == wantLen) {
             return classAttr.regionMatches(true, start, className, 0, wantLen);
         }
-
         return false;
     }
