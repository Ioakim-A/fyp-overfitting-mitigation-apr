diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/dbb3f8e8-23ca-4ab0-bc7c-713ba3eedf4c_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/d1afced7-f37e-46cf-b472-9ca3a53298b3_fixed.java
index 4e76e23..b9b3818 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/dbb3f8e8-23ca-4ab0-bc7c-713ba3eedf4c_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/d1afced7-f37e-46cf-b472-9ca3a53298b3_fixed.java
@@ -1,19 +1,10 @@
     protected JavaType _narrow(Class<?> subclass)
     {
         if (_class == subclass) {
             return this;
         }
-        // Should we check that there is a sub-class relationship?
-        // 15-Jan-2016, tatu: Almost yes, but there are some complications with
-        //    placeholder values (`Void`, `NoClass`), so can not quite do yet.
-        // TODO: fix in 2.8
-            /*
-            throw new IllegalArgumentException("Class "+subclass.getName()+" not sub-type of "
-                    +_class.getName());
-                    */
-            return new SimpleType(subclass, _bindings, this, _superInterfaces,
-                    _valueHandler, _typeHandler, _asStatic);
-        // Otherwise, stitch together the hierarchy. First, super-class
-        // if not found, try a super-interface
-        // should not get here but...
+       if (_class.isAssignableFrom(subclass)) {
+            return new SimpleType(subclass);
+        }
+        return null;
     }
