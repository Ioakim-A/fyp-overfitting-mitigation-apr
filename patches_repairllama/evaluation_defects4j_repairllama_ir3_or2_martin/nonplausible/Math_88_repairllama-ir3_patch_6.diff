diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/135a52a5-9e69-4e50-9ec5-fb936a90f71d_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/fc091a41-dcec-45a6-a4c4-6139985559c8_fixed.java
index 8733f51..d663c27 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/135a52a5-9e69-4e50-9ec5-fb936a90f71d_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/fc091a41-dcec-45a6-a4c4-6139985559c8_fixed.java
@@ -1,22 +1,15 @@
     protected RealPointValuePair getSolution() {
         double[] coefficients = new double[getOriginalNumDecisionVariables()];
         Integer basicRow =
             getBasicRow(getNumObjectiveFunctions() + getOriginalNumDecisionVariables());
         double mostNegative = basicRow == null ? 0 : getEntry(basicRow, getRhsOffset());
-        for (int i = 0; i < coefficients.length; i++) {
-            basicRow = getBasicRow(getNumObjectiveFunctions() + i);
-                // if multiple variables can take a given value 
-                // then we choose the first and set the rest equal to 0
-                coefficients[i] =
-                    (basicRow == null ? 0 : getEntry(basicRow, getRhsOffset())) -
-                    (restrictToNonNegative ? 0 : mostNegative);
-            if (basicRow != null) {
-                for (int j = getNumObjectiveFunctions(); j < getNumObjectiveFunctions() + i; j++) {
-                    if (tableau.getEntry(basicRow, j) == 1) {
+       for (int i = 0; i < getOriginalNumDecisionVariables(); i++) {
+            Integer row = getBasicRow(getNumObjectiveFunctions() + i);
+            if (row != null) {
+                coefficients[i] = getEntry(row, getRhsOffset()) / mostNegative;
+            } else {
                 coefficients[i] = 0;
             }
         }
-            }
-        }
         return new RealPointValuePair(coefficients, f.getValue(coefficients));
     }
