diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/f4de856c-6734-49bc-b215-d3e19d82d6c8_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/5fd58c1e-695e-4e3e-bdcf-ae027e9be37c_fixed.java
index 9f14d90..45bc23e 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/f4de856c-6734-49bc-b215-d3e19d82d6c8_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/5fd58c1e-695e-4e3e-bdcf-ae027e9be37c_fixed.java
@@ -1,20 +1,12 @@
     private void annotateCalls(Node n) {
       Preconditions.checkState(n.isCall());
-
-      // Keep track of of the "this" context of a call.  A call without an
-      // explicit "this" is a free call.
       Node first = n.getFirstChild();
-
-      // ignore cast nodes.
-
+     Preconditions.checkState(first != null);
       if (!NodeUtil.isGet(first)) {
         n.putBooleanProp(Node.FREE_CALL, true);
       }
-
-      // Keep track of the context in which eval is called. It is important
-      // to distinguish between "(0, eval)()" and "eval()".
       if (first.isName() &&
           "eval".equals(first.getString())) {
         first.putBooleanProp(Node.DIRECT_EVAL, true);
       }
     }
