diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/479dce6a-c15d-483c-8972-19ab3ab3d7bb_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/a3b7292a-7889-430d-8920-2de91b596b12_fixed.java
index 42b7715..29f06f0 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/479dce6a-c15d-483c-8972-19ab3ab3d7bb_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/a3b7292a-7889-430d-8920-2de91b596b12_fixed.java
@@ -1,22 +1,15 @@
   protected void declareNameInScope(FlowScope scope, Node node, JSType type) {
-    switch (node.getType()) {
-      case Token.NAME:
+    if (node.getType() == Token.NAME) {
       scope.inferSlotType(node.getString(), type);
-        break;
-
-      case Token.GETPROP:
+    } else if (node.getType() == Token.GETPROP) {
         String qualifiedName = node.getQualifiedName();
         Preconditions.checkNotNull(qualifiedName);
-
         JSType origType = node.getJSType();
         origType = origType == null ? getNativeType(UNKNOWN_TYPE) : origType;
         scope.inferQualifiedSlot(node, qualifiedName, origType, type);
         break;
-
-        // "this" references aren't currently modeled in the CFG.
-
       default:
         throw new IllegalArgumentException("Node cannot be refined. \n" +
             node.toStringTree());
     }
   }
