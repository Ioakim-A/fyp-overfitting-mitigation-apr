diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/57e5170f-021b-4d1e-8ba2-d42d7c91fcd3_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/5d1e85f7-5d20-40fd-8aec-d1d2a81711e7_fixed.java
index 20ed145..42583df 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/57e5170f-021b-4d1e-8ba2-d42d7c91fcd3_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/5d1e85f7-5d20-40fd-8aec-d1d2a81711e7_fixed.java
@@ -1,60 +1,53 @@
-    public static String random(int count, int start, int end, boolean letters, boolean numbers,
-                                char[] chars, Random random) {
+    public static String random(int count, int start, int end, boolean letters, boolean numbers, char[] chars, Random random) {
         if (count == 0) {
             return "";
         } else if (count < 0) {
             throw new IllegalArgumentException("Requested random string length " + count + " is less than 0.");
         }
-
         if (start == 0 && end == 0) {
                 if (!letters && !numbers) {
                     end = Integer.MAX_VALUE;
                 } else {
                     end = 'z' + 1;
                     start = ' ';                
                 }
         }
-
         char[] buffer = new char[count];
         int gap = end - start;
-
         while (count-- != 0) {
             char ch;
             if (chars == null) {
                 ch = (char) (random.nextInt(gap) + start);
             } else {
                 ch = chars[random.nextInt(gap) + start];
             }
             if (letters && Character.isLetter(ch)
                     || numbers && Character.isDigit(ch)
                     || !letters && !numbers) {
                 if(ch >= 56320 && ch <= 57343) {
                     if(count == 0) {
                         count++;
                     } else {
-                        // low surrogate, insert high surrogate after putting it in
                         buffer[count] = ch;
                         count--;
                         buffer[count] = (char) (55296 + random.nextInt(128));
                     }
                 } else if(ch >= 55296 && ch <= 56191) {
                     if(count == 0) {
                         count++;
                     } else {
-                        // high surrogate, insert low surrogate before putting it in
                         buffer[count] = (char) (56320 + random.nextInt(128));
                         count--;
                         buffer[count] = ch;
                     }
                 } else if(ch >= 56192 && ch <= 56319) {
-                    // private high surrogate, no effing clue, so skip it
                     count++;
                 } else {
                     buffer[count] = ch;
                 }
             } else {
                 count++;
             }
         }
         return new String(buffer);
     }
