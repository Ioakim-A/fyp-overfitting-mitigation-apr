diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/25f82908-5f29-4b9b-a138-9b73903b5065_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/949fca36-5a71-4965-b9b2-1cc861725fd4_fixed.java
index dc93be3..2735d02 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/25f82908-5f29-4b9b-a138-9b73903b5065_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/949fca36-5a71-4965-b9b2-1cc861725fd4_fixed.java
@@ -1,14 +1,11 @@
     Element insert(Token.StartTag startTag) {
-        // handle empty unknown tags
-        // when the spec expects an empty tag, will directly hit insertEmpty, so won't generate this fake end tag.
-        if (startTag.isSelfClosing()) {
+        if (startTag.isSelfClosing() && !startTag.name().equals("html")) {
             Element el = insertEmpty(startTag);
             stack.add(el);
-            tokeniser.emit(new Token.EndTag(el.tagName()));  // ensure we get out of whatever state we are in. emitted for yielded processing
+            tokeniser.emit(new Token.EndTag(el.tagName()));  
             return el;
         }
-        
         Element el = new Element(Tag.valueOf(startTag.name()), baseUri, startTag.attributes);
         insert(el);
         return el;
     }
