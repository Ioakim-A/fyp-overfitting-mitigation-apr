diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/779ee854-8a4b-495c-b764-524cf8039e21_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/0cb19611-3b15-458e-8865-c7bee268964c_fixed.java
index a1e21c4..d017d23 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/779ee854-8a4b-495c-b764-524cf8039e21_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/0cb19611-3b15-458e-8865-c7bee268964c_fixed.java
@@ -1,21 +1,38 @@
   protected CompilerOptions createOptions() {
     CompilerOptions options = new CompilerOptions();
     options.setCodingConvention(new ClosureCodingConvention());
     CompilationLevel level = flags.compilation_level;
     level.setOptionsForCompilationLevel(options);
     if (flags.debug) {
       level.setDebugOptionsForCompilationLevel(options);
     }
-
     WarningLevel wLevel = flags.warning_level;
     wLevel.setOptionsForWarningLevel(options);
     for (FormattingOption formattingOption : flags.formatting) {
       formattingOption.applyToOptions(options);
     }
     if (flags.process_closure_primitives) {
       options.closurePass = true;
     }
-
+    initOptionsFromFlags(options);
+    return options;
+  }
+  protected CompilerOptions createOptions() {
+    CompilerOptions options = new CompilerOptions();
+    options.setCodingConvention(new ClosureCodingConvention());
+    CompilationLevel level = flags.compilation_level;
+    level.setOptionsForCompilationLevel(options);
+    if (flags.debug) {
+      level.setDebugOptionsForCompilationLevel(options);
+    }
+    WarningLevel wLevel = flags.warning_level;
+    wLevel.setOptionsForWarningLevel(options);
+    for (FormattingOption formattingOption : flags.formatting) {
+      formattingOption.applyToOptions(options);
+    }
+    if (flags.process_closure_primitives) {
+      options.closurePass = true;
+    }
     initOptionsFromFlags(options);
     return options;
   }
