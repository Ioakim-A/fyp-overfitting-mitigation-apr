diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/84e61823-9179-4544-b8f7-c1534663f40d_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/3c378810-10be-4644-a1bf-d56717fee0f0_fixed.java
index b5d94e0..318687f 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/84e61823-9179-4544-b8f7-c1534663f40d_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/3c378810-10be-4644-a1bf-d56717fee0f0_fixed.java
@@ -1,26 +1,12 @@
-  private void traverse(Node node) {
-    // The goal here is to avoid retraversing
-    // the entire AST to catch newly created opportunities.
-    // So we track whether a "unit of code" has changed,
-    // and revisit immediately.
+  protected void traverse(Node node) {
     if (!shouldVisit(node)) {
       return;
     }
-
     int visits = 0;
     do {
       Node c = node.getFirstChild();
       while(c != null) {
         traverse(c);
         Node next = c.getNext();
         c = next;
-      }
-
-      visit(node);
-      visits++;
-
-      Preconditions.checkState(visits < 10000, "too many interations");
-    } while (shouldRetraverse(node));
-
-    exitNode(node);
-  }
+      }  }
