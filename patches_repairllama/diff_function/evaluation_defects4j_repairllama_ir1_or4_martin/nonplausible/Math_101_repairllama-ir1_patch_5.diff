diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/b0c496d4-56db-4610-be69-7543cdbf5bab_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/6fb47eec-f005-45e5-ab61-1e2d34f86b4c_fixed.java
index 9637fa4..3b0450e 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/b0c496d4-56db-4610-be69-7543cdbf5bab_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/6fb47eec-f005-45e5-ab61-1e2d34f86b4c_fixed.java
@@ -1,70 +1,21 @@
-    public Complex parse(String source, ParsePosition pos) {
-        int initialIndex = pos.getIndex();
-
-        // parse whitespace
+    public Number parse(String source, ParsePosition pos) {
+        int initialIndex = pos.getIndex();        }
         parseAndIgnoreWhitespace(source, pos);
-
-        // parse real
-        Number re = parseNumber(source, getRealFormat(), pos);
-        if (re == null) {
-            // invalid real number
-            // set index back to initial, error index should already be set
-            // character examined.
-            pos.setIndex(initialIndex);
-            return null;
-        }
-
-        // parse sign
-        int startIndex = pos.getIndex();
-        char c = parseNextCharacter(source, pos);
-        int sign = 0;
-        switch (c) {
-        case 0 :
-            // no sign
-            // return real only complex number
-            return new Complex(re.doubleValue(), 0.0);
-        case '-' :
-            sign = -1;
-            break;
-        case '+' :
-            sign = 1;
-            break;
-        default :
-            // invalid sign
-            // set index back to initial, error index should be the last
-            // character examined.
-            pos.setIndex(initialIndex);
-            pos.setErrorIndex(startIndex);
-            return null;
-        }
-
-        // parse whitespace
-        parseAndIgnoreWhitespace(source, pos);
-
-        // parse imaginary
         Number im = parseNumber(source, getRealFormat(), pos);
         if (im == null) {
-            // invalid imaginary number
-            // set index back to initial, error index should already be set
-            // character examined.
             pos.setIndex(initialIndex);
             return null;
         }
-
-        // parse imaginary character
         int n = getImaginaryCharacter().length();
         startIndex = pos.getIndex();
         int endIndex = startIndex + n;
         if (
             source.substring(startIndex, endIndex).compareTo(
             getImaginaryCharacter()) != 0) {
-            // set index back to initial, error index should be the start index
-            // character examined.
             pos.setIndex(initialIndex);
             pos.setErrorIndex(startIndex);
             return null;
         }
         pos.setIndex(endIndex);
-
         return new Complex(re.doubleValue(), im.doubleValue() * sign);
     }
