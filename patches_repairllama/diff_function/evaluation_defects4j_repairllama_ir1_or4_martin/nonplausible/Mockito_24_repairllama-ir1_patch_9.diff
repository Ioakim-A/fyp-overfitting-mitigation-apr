diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/0b755f3c-1a2c-47fd-bbf1-4a258dcbbbd6_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/d24fc5b9-6c08-4587-911e-37c25631cd44_fixed.java
index 654abbf..ef0ad51 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/0b755f3c-1a2c-47fd-bbf1-4a258dcbbbd6_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/d24fc5b9-6c08-4587-911e-37c25631cd44_fixed.java
@@ -1,19 +1,15 @@
-    public Object answer(InvocationOnMock invocation) {
+    public final Object answer(InvocationOnMock invocation) {
         if (methodsGuru.isToString(invocation.getMethod())) {
             Object mock = invocation.getMock();
             MockName name = mockUtil.getMockName(mock);
             if (name.isDefault()) {
                 return "Mock for " + mockUtil.getMockSettings(mock).getTypeToMock().getSimpleName() + ", hashCode: " + mock.hashCode();
             } else {
                 return name.toString();
             }
         } else if (methodsGuru.isCompareToMethod(invocation.getMethod())) {
-            //see issue 184.
-            //mocks by default should return 0 if references are the same, otherwise some other value because they are not the same. Hence we return 1 (anything but 0 is good).
-            //Only for compareTo() method by the Comparable interface
             return 1;
         }
-        
         Class<?> returnType = invocation.getMethod().getReturnType();
         return returnValueFor(returnType);
     }
