diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/aaa79226-6ba1-4aff-9f13-f8cd95ee1af0_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/72106112-6866-4edd-a777-447c8b1cfccb_fixed.java
index 42b7715..f50b0c8 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/aaa79226-6ba1-4aff-9f13-f8cd95ee1af0_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/72106112-6866-4edd-a777-447c8b1cfccb_fixed.java
@@ -1,22 +1,24 @@
+      case Token.GETELEM:
+        String qualifiedName = node.getQualifiedName();
+        Preconditions.checkNotNull(qualifiedName);
+        JSType origType = node.getJSType();
+        origType = origType == null ? getNativeType(UNKNOWN_TYPE) : origType;
+        scope.inferQualifiedSlot(node, qualifiedName, origType, type);
+        break;
   protected void declareNameInScope(FlowScope scope, Node node, JSType type) {
     switch (node.getType()) {
       case Token.NAME:
         scope.inferSlotType(node.getString(), type);
         break;
-
       case Token.GETPROP:
         String qualifiedName = node.getQualifiedName();
         Preconditions.checkNotNull(qualifiedName);
-
         JSType origType = node.getJSType();
         origType = origType == null ? getNativeType(UNKNOWN_TYPE) : origType;
         scope.inferQualifiedSlot(node, qualifiedName, origType, type);
         break;
-
-        // "this" references aren't currently modeled in the CFG.
-
       default:
         throw new IllegalArgumentException("Node cannot be refined. \n" +
             node.toStringTree());
     }
   }
