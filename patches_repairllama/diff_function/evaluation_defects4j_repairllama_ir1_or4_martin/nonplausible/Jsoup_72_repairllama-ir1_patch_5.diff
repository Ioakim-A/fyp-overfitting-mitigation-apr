diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/8ec7266a-44e8-4961-9ab5-0feace36e7f5_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/0ca38850-c98e-44f1-98d2-2ab00aedb90e_fixed.java
index 7b4f703..bf50e18 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/8ec7266a-44e8-4961-9ab5-0feace36e7f5_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/0ca38850-c98e-44f1-98d2-2ab00aedb90e_fixed.java
@@ -1,29 +1,4 @@
-    private static String cacheString(final char[] charBuf, final String[] stringCache, final int start, final int count) {
-        // limit (no cache):
-        if (count > maxStringCacheLen)
-            return new String(charBuf, start, count);
-
-        // calculate hash:
-        int hash = 0;
-        int offset = start;
-        for (int i = 0; i < count; i++) {
-            hash = 31 * hash + charBuf[offset++];
-        }
-
-        // get from cache
-        final int index = hash & stringCache.length - 1;
-        String cached = stringCache[index];
-
-        if (cached == null) { // miss, add
-            cached = new String(charBuf, start, count);
-            stringCache[index] = cached;
-        } else { // hashcode hit, check equality
-            if (rangeEquals(charBuf, start, count, cached)) { // hit
-                return cached;
-            } else { // hashcode conflict
-                cached = new String(charBuf, start, count);
-                stringCache[index] = cached; // update the cache, as recently used strings are more likely to show up again
-            }
+    private static String cache            }
         }
         return cached;
     }
