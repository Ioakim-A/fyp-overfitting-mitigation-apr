diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/751a8b04-c547-4a00-a7e2-495eb8f0d6be_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/db5f6b10-b23e-4719-acfa-23d271e200af_fixed.java
index a4d475d..20bc58e 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/751a8b04-c547-4a00-a7e2-495eb8f0d6be_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/db5f6b10-b23e-4719-acfa-23d271e200af_fixed.java
@@ -1,19 +1,3 @@
-  private void visitGetProp(NodeTraversal t, Node n, Node parent) {
-    // obj.prop or obj.method()
-    // Lots of types can appear on the left, a call to a void function can
-    // never be on the left. getPropertyType will decide what is acceptable
-    // and what isn't.
+  void visitGetProp(NodeTraversal t, Node n, Node parent) {
     Node property = n.getLastChild();
-    Node objNode = n.getFirstChild();
-    JSType childType = getJSType(objNode);
-
-    if (childType.isDict()) {
-      report(t, property, TypeValidator.ILLEGAL_PROPERTY_ACCESS, "'.'", "dict");
-    } else if (n.getJSType() != null && parent.isAssign()) {
-      return;
-    } else if (validator.expectNotNullOrUndefined(t, n, childType,
-        "No properties on this expression", getNativeType(OBJECT_TYPE))) {
-      checkPropertyAccess(childType, property.getString(), t, n);
-    }
-    ensureTyped(t, n);
-  }
+    Node objNode = n.getFirst  }
