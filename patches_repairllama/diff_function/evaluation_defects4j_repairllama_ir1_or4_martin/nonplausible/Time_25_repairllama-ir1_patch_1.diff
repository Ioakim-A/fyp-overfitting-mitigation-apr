diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/03e37124-c50a-4be3-bea1-0a3ba15949af_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/6587ca47-1696-44df-951e-4e541be49d3d_fixed.java
index 7eae43b..65ae83d 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/03e37124-c50a-4be3-bea1-0a3ba15949af_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/6587ca47-1696-44df-951e-4e541be49d3d_fixed.java
@@ -1,23 +1,15 @@
-    public int getOffsetFromLocal(long instantLocal) {
-        // get the offset at instantLocal (first estimate)
+    public long getOffsetFromLocal(long instantLocal) {
         final int offsetLocal = getOffset(instantLocal);
-        // adjust instantLocal using the estimate and recalc the offset
         final long instantAdjusted = instantLocal - offsetLocal;
         final int offsetAdjusted = getOffset(instantAdjusted);
-        // if the offsets differ, we must be near a DST boundary
         if (offsetLocal != offsetAdjusted) {
-            // we need to ensure that time is always after the DST gap
-            // this happens naturally for positive offsets, but not for negative
             if ((offsetLocal - offsetAdjusted) < 0) {
-                // if we just return offsetAdjusted then the time is pushed
-                // back before the transition, whereas it should be
-                // on or after the transition
                 long nextLocal = nextTransition(instantAdjusted);
                 long nextAdjusted = nextTransition(instantLocal - offsetAdjusted);
                 if (nextLocal != nextAdjusted) {
                     return offsetLocal;
                 }
             }
         }
         return offsetAdjusted;
     }
