diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/2f4a35c7-f7c0-4c9f-aa8d-41dd3dc3cee9_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/f1a04313-a4e4-4033-924f-f1b8d156507c_fixed.java
index b108107..fc9f3ce 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/2f4a35c7-f7c0-4c9f-aa8d-41dd3dc3cee9_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/f1a04313-a4e4-4033-924f-f1b8d156507c_fixed.java
@@ -1,25 +1,24 @@
   private void inferPropertyTypesToMatchConstraint(
       JSType type, JSType constraint) {
     if (type == null || constraint == null) {
       return;
     }
-
     ObjectType constraintObj =
         ObjectType.cast(constraint.restrictByNotNullOrUndefined());
     if (constraintObj != null && constraintObj.isRecordType()) {
       ObjectType objType = ObjectType.cast(type.restrictByNotNullOrUndefined());
       if (objType != null) {
         for (String prop : constraintObj.getOwnPropertyNames()) {
           JSType propType = constraintObj.getPropertyType(prop);
-          if (!objType.isPropertyTypeDeclared(prop)) {
+          if (!objType.hasProperty(prop)) {
             JSType typeToInfer = propType;
             if (!objType.hasProperty(prop)) {
               typeToInfer =
                   getNativeType(VOID_TYPE).getLeastSupertype(propType);
             }
             objType.defineInferredProperty(prop, typeToInfer, null);
           }
         }
       }
     }
   }
