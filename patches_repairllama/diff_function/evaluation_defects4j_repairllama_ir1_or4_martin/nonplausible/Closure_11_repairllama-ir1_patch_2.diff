diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/23b3c027-9e0a-4564-8901-504bcddca888_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/58f2b662-d2cc-4dfc-b1e1-0c814d1015ca_fixed.java
index a4d475d..52969b2 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/23b3c027-9e0a-4564-8901-504bcddca888_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/58f2b662-d2cc-4dfc-b1e1-0c814d1015ca_fixed.java
@@ -1,19 +1,14 @@
-  private void visitGetProp(NodeTraversal t, Node n, Node parent) {
-    // obj.prop or obj.method()
-    // Lots of types can appear on the left, a call to a void function can
-    // never be on the left. getPropertyType will decide what is acceptable
-    // and what isn't.
+  void visitGetProp(NodeTraversal t, Node n, Node parent) {
     Node property = n.getLastChild();
     Node objNode = n.getFirstChild();
     JSType childType = getJSType(objNode);
-
     if (childType.isDict()) {
       report(t, property, TypeValidator.ILLEGAL_PROPERTY_ACCESS, "'.'", "dict");
     } else if (n.getJSType() != null && parent.isAssign()) {
       return;
     } else if (validator.expectNotNullOrUndefined(t, n, childType,
         "No properties on this expression", getNativeType(OBJECT_TYPE))) {
       checkPropertyAccess(childType, property.getString(), t, n);
     }
     ensureTyped(t, n);
   }
