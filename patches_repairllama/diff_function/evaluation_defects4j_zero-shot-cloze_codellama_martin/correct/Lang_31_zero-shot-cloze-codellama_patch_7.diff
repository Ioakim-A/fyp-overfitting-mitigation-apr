diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/12ad877e-ed8b-49d0-8e18-d48763112eff_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/2c7aff26-072e-4c68-bd97-9b2c09508cbc_fixed.java
index 13c1ea9..dbb59bf 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/12ad877e-ed8b-49d0-8e18-d48763112eff_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/2c7aff26-072e-4c68-bd97-9b2c09508cbc_fixed.java
@@ -1,18 +1,24 @@
 	public static boolean containsAny(CharSequence cs, char[] searchChars) {
 		if (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {
 			return false;
 		}
 		int csLength = cs.length();
 		int searchLength = searchChars.length;
+		int csLast = csLength - 1;
+		int searchLast = searchLength - 1;
 		for (int i = 0; i < csLength; i++) {
 			char ch = cs.charAt(i);
 			for (int j = 0; j < searchLength; j++) {
 				if (searchChars[j] == ch) {
-						// ch is a supplementary character
-						// ch is in the Basic Multilingual Plane
+					if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {
+						if (searchChars[j + 1] == cs.charAt(i + 1)) {
 							return true;
 						}
+					} else {
+						return true;
+					}
+				}
 			}
 		}
 		return false;
 	}
