diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/aa8450fd-6296-4620-add0-7d7abb5d024a_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/0576c100-ce15-4c43-9e02-aeaec46fc051_fixed.java
index 7559ebf..7f79ff1 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/aa8450fd-6296-4620-add0-7d7abb5d024a_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/0576c100-ce15-4c43-9e02-aeaec46fc051_fixed.java
@@ -1,4 +1,19 @@
     private RealMatrix squareRoot(RealMatrix m) {
-            final EigenDecomposition dec = new EigenDecomposition(m);
-            return dec.getSquareRoot();
+       if (m.getRowDimension() != m.getColumnDimension()) {
+            throw new IllegalArgumentException("Matrix must be square");
+        }
+        int n = m.getRowDimension();
+        RealMatrix result = new Array2DRowRealMatrix(n, n);
+        for (int i = 0; i < n; i++) {
+            result.setEntry(i, i, Math.sqrt(m.getEntry(i, i)));
+        }
+        for (int i = 0; i < n; i++) {
+            for (int j = i + 1; j < n; j++) {
+                result.setEntry(i, j, m.getEntry(i, j) / (2 * result.getEntry(i, i)));
+            }
+        }
+        for (int i = 0; i < n; i++) {
+            for (int j = i + 1; j < n; j++) {
+                for (int k = j + 1; k < n; k++) {
+                    result.setEntry(i, j, result.getEntry
     }
