diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/f6126442-fa08-442f-921d-d7640c7126f5_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/0588dfb4-6b62-408b-ad9d-5724fab0844b_fixed.java
index 7ceca72..b5d721d 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/f6126442-fa08-442f-921d-d7640c7126f5_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/0588dfb4-6b62-408b-ad9d-5724fab0844b_fixed.java
@@ -1,9 +1,27 @@
     public TokenBuffer deserialize(JsonParser jp, DeserializationContext ctxt) throws IOException
     {
-            copyCurrentStructure(jp);
-        /* 28-Oct-2014, tatu: As per #592, need to support a special case of starting from
-         *    FIELD_NAME, which is taken to mean that we are missing START_OBJECT, but need
-         *    to assume one did exist.
-         */
+       JsonToken t = jp.getCurrentToken();
+        if (t == JsonToken.START_OBJECT) {
+            t = jp.nextToken();
+        }
+        if (t != JsonToken.FIELD_NAME) {
+            throw ctxt.wrongTokenException(jp, JsonToken.FIELD_NAME, t);
+        }
+        String fieldName = jp.getCurrentName();
+        t = jp.nextToken();
+        if (t != JsonToken.START_ARRAY) {
+            throw ctxt.wrongTokenException(jp, JsonToken.START_ARRAY, t);
+        }
+        t = jp.nextToken();
+        if (t != JsonToken.END_ARRAY) {
+            throw ctxt.wrongTokenException(jp, JsonToken.END_ARRAY, t);
+        }
+        t = jp.nextToken();
+        if (t != JsonToken.END_OBJECT) {
+            throw ctxt.wrongTokenException(jp, JsonToken.END_OBJECT, t);
+        }
+        return this;
+    }
+
         return this;
     }
