diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/1bf2a0c2-dcfd-4f89-a325-de077f544805_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/1d0d2810-c05b-4ec5-9402-0db97a3baed0_fixed.java
index 511ea30..39f53ac 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/1bf2a0c2-dcfd-4f89-a325-de077f544805_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/1d0d2810-c05b-4ec5-9402-0db97a3baed0_fixed.java
@@ -1,28 +1,17 @@
     public double solve(double min, double max) throws MaxIterationsExceededException, 
         FunctionEvaluationException {
-        
         clearResult();
         verifyInterval(min, max);
-        
         double ret = Double.NaN;
-        
         double yMin = f.value(min);
         double yMax = f.value(max);
-        
-        // Verify bracketing
         double sign = yMin * yMax;
-        if (sign >= 0) {
-            // check if either value is close to a zero
-                // neither value is close to zero and min and max do not bracket root.
-                throw new IllegalArgumentException
-                ("Function values at endpoints do not have different signs." +
-                        "  Endpoints: [" + min + "," + max + "]" + 
-                        "  Values: [" + yMin + "," + yMax + "]");
+       if (sign == 0.0) {
+            ret = (min + max) / 2.0;
+        } else if (sign > 0.0) {
+            ret = solve(min, (min + max) / 2.0);
         } else {
-            // solve using only the first endpoint as initial guess
-            ret = solve(min, yMin, max, yMax, min, yMin);
-            // either min or max is a root
+            ret = solve((min + max) / 2.0, max);
         }
-
         return ret;
     }
