diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/aa606cf0-45fd-4597-bbda-2f43af3dcf6c_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/87852ad1-f717-412e-a8a3-19c341ab8b75_fixed.java
index 2078667..db2246d 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/aa606cf0-45fd-4597-bbda-2f43af3dcf6c_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/87852ad1-f717-412e-a8a3-19c341ab8b75_fixed.java
@@ -1,15 +1,25 @@
-    public T[] sample(int sampleSize) throws NotStrictlyPositiveException {
-        if (sampleSize <= 0) {
-            throw new NotStrictlyPositiveException(LocalizedFormats.NUMBER_OF_SAMPLES,
-                    sampleSize);
-        }
+package io.nosqlbench.virtdata.library.basics.shared.from_long.to_collection;
 
-        final T[]out = (T[]) java.lang.reflect.Array.newInstance(singletons.get(0).getClass(), sampleSize);
+import io.nosqlbench.virtdata.api.annotations.Categories;
+import io.nosqlbench.virtdata.api.annotations.Category;
+import io.nosqlbench.virtdata.api.annotations.Example;
+import io.nosqlbench.virtdata.api.annotations.ThreadSafeMapper;
+import io.nosqlbench.virtdata.library.basics.core.threadstate.SharedState;
+import io.nosqlbench.virtdata.library.basics.shared.from_long.to_long.Hash;
 
+import java.util.ArrayList;
+import java.util.Arrays;
+import java.util.List;
+import java.util.function.LongFunction;
+import java.util.function.LongToDoubleFunction;
+import java.util.function.LongToIntFunction;
+import java.util.function.LongUnaryOperator;
+import java.util.function.ToIntFunction;
+
+/**
+ * Create a
         for (int i = 0; i < sampleSize; i++) {
             out[i] = sample();
         }
-
         return out;
-
     }
