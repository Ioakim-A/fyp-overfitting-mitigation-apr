diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/3c3260a9-6bbc-4c70-8c89-e0bc1efea15d_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/bb69e177-3500-43ca-a9ae-82fc22d26e1a_fixed.java
index fa15a1c..a6586ef 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/3c3260a9-6bbc-4c70-8c89-e0bc1efea15d_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/bb69e177-3500-43ca-a9ae-82fc22d26e1a_fixed.java
@@ -1,5 +1,33 @@
     public void writeEmbeddedObject(Object object) throws IOException {
-        // 01-Sep-2016, tatu: As per [core#318], handle small number of cases
-        throw new JsonGenerationException("No native support for writing embedded objects",
+       ByteArrayOutputStream baos = new ByteArrayOutputStream();
+        ObjectOutputStream oos = null;
+        try {
+            oos = new ObjectOutputStream(baos);
+            oos.writeObject(object);
+        } finally {
+            if (oos != null) {
+                try {
+                    oos.close();
+                } catch (IOException e) {
+                }
+            }
+        }
+        byte[] bytes = baos.toByteArray();
+        writeEmbeddedObject(bytes);
+    }
+
+    public void writeEmbeddedObject(byte[] bytes) throws IOException {
+        writeEmbeddedObject(bytes, 0, bytes.length);
+    }
+
+    public void writeEmbeddedObject(byte[] bytes, int offset, int length) throws IOException {
+        ByteArrayInputStream bais = new ByteArrayInputStream(bytes, offset, length);
+        ObjectInputStream ois = null;
+        try {
+            ois = new ObjectInputStream(bais);
+            Object object = ois.readObject();
+            writeObject(object);
+        } finally {
+            if (ois != null) {
                 this);
     }
