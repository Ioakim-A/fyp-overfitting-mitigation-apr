diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/dc1927ef-b588-4aa3-8c04-45b99eac680d_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/3ba07ce2-5cb3-4810-8160-b11f2c5ba7be_fixed.java
index dc93be3..81695ea 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/dc1927ef-b588-4aa3-8c04-45b99eac680d_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/3ba07ce2-5cb3-4810-8160-b11f2c5ba7be_fixed.java
@@ -1,14 +1,15 @@
     Element insert(Token.StartTag startTag) {
-        // handle empty unknown tags
-        // when the spec expects an empty tag, will directly hit insertEmpty, so won't generate this fake end tag.
         if (startTag.isSelfClosing()) {
             Element el = insertEmpty(startTag);
             stack.add(el);
-            tokeniser.emit(new Token.EndTag(el.tagName()));  // ensure we get out of whatever state we are in. emitted for yielded processing
            return el;
         }
-        
+        if (startTag.isKnownTag()) {
+            Element el = new Element(Tag.valueOf(startTag.name()), baseUri, startTag.attributes);
+            tokeniser.emit(new Token.EndTag(el.tagName()));  
+            return el;
+        }
         Element el = new Element(Tag.valueOf(startTag.name()), baseUri, startTag.attributes);
         insert(el);
         return el;
     }
