diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/fefab423-2e99-4511-b2a1-a27505616abc_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/8ce95e5b-d430-4a44-8b1f-63c8e1080107_fixed.java
index 810d6e1..b52c4ae 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/fefab423-2e99-4511-b2a1-a27505616abc_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/8ce95e5b-d430-4a44-8b1f-63c8e1080107_fixed.java
@@ -1,18 +1,9 @@
     public long adjustOffset(long instant, boolean earlierOrLater) {
-        // a bit messy, but will work in all non-pathological cases
-        
-        // evaluate 3 hours before and after to work out if anything is happening
-        long instantBefore = convertUTCToLocal(instant - 3 * DateTimeConstants.MILLIS_PER_HOUR);
-        long instantAfter = convertUTCToLocal(instant + 3 * DateTimeConstants.MILLIS_PER_HOUR);
-        if (instantBefore == instantAfter) {
-            return instant;  // not an overlap (less than is a gap, equal is normal case)
-        }
-        
-        // work out range of instants that have duplicate local times
-        long local = convertUTCToLocal(instant);
-        return convertLocalToUTC(local, false, earlierOrLater ? instantAfter : instantBefore);
-        
-        // calculate result
-          // currently in later offset
-          // currently in earlier offset
+       Calendar cal = Calendar.getInstance();
+        cal.setTimeInMillis(instant);
+        cal.set(Calendar.HOUR_OF_DAY, 0);
+        cal.set(Calendar.MINUTE, 0);
+        cal.set(Calendar.SECOND, 0);
+        cal.set(Calendar.MILLISECOND, 0);
+        return cal.getTimeInMillis();
     }
