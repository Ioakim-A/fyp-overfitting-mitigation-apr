diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/ccd1e1e6-48bd-42bb-b169-5fe7c136d115_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/13fb602c-da1b-484e-9582-24a09b022b96_fixed.java
index dc93be3..3be06a7 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/ccd1e1e6-48bd-42bb-b169-5fe7c136d115_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/13fb602c-da1b-484e-9582-24a09b022b96_fixed.java
@@ -1,14 +1,22 @@
     Element insert(Token.StartTag startTag) {
-        // handle empty unknown tags
-        // when the spec expects an empty tag, will directly hit insertEmpty, so won't generate this fake end tag.
         if (startTag.isSelfClosing()) {
             Element el = insertEmpty(startTag);
             stack.add(el);
-            tokeniser.emit(new Token.EndTag(el.tagName()));  // ensure we get out of whatever state we are in. emitted for yielded processing
+           tokeniser.emit(new Token.EndTag(el.tagName()));  
+            return el;
+        }
+        Element el = new Element(Tag.valueOf(startTag.name()), baseUri, startTag.attributes);
+        insert(el);
+        stack.add(el);
+        return el;
+    }
+    Element insert(Token.EndTag endTag) {
+        if (endTag.isSelfClosing()) {
+            Element el = insertEmpty(endTag);
+            tokeniser.emit(new Token.EndTag(el.tagName()));  
             return el;
         }
-        
         Element el = new Element(Tag.valueOf(startTag.name()), baseUri, startTag.attributes);
         insert(el);
         return el;
     }
