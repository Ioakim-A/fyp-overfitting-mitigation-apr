diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/56b94ec7-c33c-4fe7-a965-176b0dbb4f3a_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/93386156-f039-4222-b985-90c7fa231f82_fixed.java
index 8cbef3b..a9cbd07 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/56b94ec7-c33c-4fe7-a965-176b0dbb4f3a_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/93386156-f039-4222-b985-90c7fa231f82_fixed.java
@@ -1,30 +1,26 @@
     public final void translate(CharSequence input, Writer out) throws IOException {
         if (out == null) {
             throw new IllegalArgumentException("The Writer must not be null");
         }
         if (input == null) {
             return;
         }
         int pos = 0;
-        int len = Character.codePointCount(input, 0, input.length());
+       int len = input.length();
         while (pos < len) {
-            int consumed = translate(input, pos, out);
-            if (consumed == 0) {
-                char[] c = Character.toChars(Character.codePointAt(input, pos));
-                out.write(c);
-            }
-            else {
-//          // contract with translators is that they have to understand codepoints 
-//          // and they just took care of a surrogate pair
-            for (int pt = 0; pt < consumed; pt++) {
-                    if (pos < len - 2) {
-                pos += Character.charCount(Character.codePointAt(input, pos));
+            char c = input.charAt(pos++);
+            if (c == '&') {
+                out.write("&amp;");
+            } else if (c == '<') {
+                out.write("&lt;");
+            } else if (c == '>') {
+                out.write("&gt;");
+            } else if (c == '"') {
+                out.write("&quot;");
+            } else if (c == '\'') {
+                out.write("&#39;");
             } else {
-                        pos++;
+                out.write(c);
             }
         }
-                pos--;
-            }
-            pos++;
-        }
     }
