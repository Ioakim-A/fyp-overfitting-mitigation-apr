diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/e911a90f-3450-40a2-9655-20de3867d872_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/115d9f62-eb39-4599-9f57-86a11c28e100_fixed.java
index 3840a76..e3b7c8b 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/e911a90f-3450-40a2-9655-20de3867d872_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/115d9f62-eb39-4599-9f57-86a11c28e100_fixed.java
@@ -1,29 +1,13 @@
   JSType resolveInternal(ErrorReporter t, StaticScope<JSType> enclosing) {
-    // TODO(user): Investigate whether it is really necessary to keep two
-    // different mechanisms for resolving named types, and if so, which order
-    // makes more sense. Now, resolution via registry is first in order to
-    // avoid triggering the warnings built into the resolution via properties.
     boolean resolved = resolveViaRegistry(t, enclosing);
-    if (detectImplicitPrototypeCycle()) {
-      handleTypeCycle(t);
-    }
 
-    if (resolved) {
-      super.resolveInternal(t, enclosing);
-      finishPropertyContinuations();
-      return registry.isLastGeneration() ?
-          getReferencedType() : this;
-    }
-
-    resolveViaProperties(t, enclosing);
-    if (detectImplicitPrototypeCycle()) {
+    if (!resolved) {
       handleTypeCycle(t);
     }
-
     super.resolveInternal(t, enclosing);
     if (isResolved()) {
       finishPropertyContinuations();
     }
     return registry.isLastGeneration() ?
         getReferencedType() : this;
   }
