diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/373c1ee7-54f5-4440-aa58-9422546bc6c9_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/45392cb8-6258-466a-8eca-b3c35b5db742_fixed.java
index b2d53db..a83d56c 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/373c1ee7-54f5-4440-aa58-9422546bc6c9_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/45392cb8-6258-466a-8eca-b3c35b5db742_fixed.java
@@ -1,34 +1,67 @@
         void read(Tokeniser t, CharacterReader r) {
             if (r.matchesLetter()) {
                 String name = r.consumeLetterSequence();
                 t.tagPending.appendTagName(name.toLowerCase());
                 t.dataBuffer.append(name);
-                r.advance();
+               anythingElse(t, r);
                 return;
             }
+            if (r.isEmpty()) {
+                t.emitTagPending();
+                t.transition(Data);
+                return;
+            }
+            char c = r.consume();
+            switch (c) {
+                case '\t':
+                case '\n':
+                case '\f':
+                case ' ':
+                    t.transition(BeforeAttributeName);
+                    break;
+                case '/':
+                    t.transition(SelfClosingStartTag);
+                    break;
+                case '>':
+                    t.emitTagPending();
+                    t.transition(Data);
+                    break;
+                default:
+                    t.dataBuffer.append(c);
+                    anythingElse(t, r);
+                    break;
+            }
+        }
         
+        void anythingElse(Tokeniser t, CharacterReader r) {
+            if (r.matchesLetter()) {
+                String name = r.consumeLetterSequence();
+                t.tagPending.appendTagName(name.toLowerCase());
+               
+                return;
+            }
             if (t.isAppropriateEndTagToken() && !r.isEmpty()) {
                 char c = r.consume();
                 switch (c) {
                     case '\t':
                     case '\n':
                     case '\f':
                     case ' ':
                         t.transition(BeforeAttributeName);
                         break;
                     case '/':
                         t.transition(SelfClosingStartTag);
                         break;
                     case '>':
                         t.emitTagPending();
                         t.transition(Data);
                         break;
                     default:
                         t.dataBuffer.append(c);
                         anythingElse(t, r);
                         break;
                 }
             } else {
                 anythingElse(t, r);
             }
         }
