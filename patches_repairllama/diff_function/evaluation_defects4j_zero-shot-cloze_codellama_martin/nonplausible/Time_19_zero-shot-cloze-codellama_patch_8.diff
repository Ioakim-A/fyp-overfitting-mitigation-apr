diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/57f347cd-11c8-41bb-8cf0-065b71b05b9a_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/07f110eb-d204-4013-80ef-a3eca5f1d99c_fixed.java
index 201a38f..5903a86 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/57f347cd-11c8-41bb-8cf0-065b71b05b9a_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/07f110eb-d204-4013-80ef-a3eca5f1d99c_fixed.java
@@ -1,32 +1,38 @@
     public int getOffsetFromLocal(long instantLocal) {
-        // get the offset at instantLocal (first estimate)
         final int offsetLocal = getOffset(instantLocal);
-        // adjust instantLocal using the estimate and recalc the offset
         final long instantAdjusted = instantLocal - offsetLocal;
         final int offsetAdjusted = getOffset(instantAdjusted);
-        // if the offsets differ, we must be near a DST boundary
         if (offsetLocal != offsetAdjusted) {
-            // we need to ensure that time is always after the DST gap
-            // this happens naturally for positive offsets, but not for negative
             if ((offsetLocal - offsetAdjusted) < 0) {
-                // if we just return offsetAdjusted then the time is pushed
-                // back before the transition, whereas it should be
-                // on or after the transition
                 long nextLocal = nextTransition(instantAdjusted);
                 long nextAdjusted = nextTransition(instantLocal - offsetAdjusted);
                 if (nextLocal != nextAdjusted) {
                     return offsetLocal;
                 }
             }
-        } else if (offsetLocal > 0) {
+           else {
+                long prevLocal = previousTransition(instantAdjusted);
+                long prevAdjusted = previousTransition(instantLocal - offsetAdjusted);
+                if (prevLocal != prevAdjusted) {
+                    return offsetLocal;
+                }
+            }
+            long next = nextTransition(instantAdjusted);
+            if (next > instantAdjusted) {
+                int offsetNext = getOffset(next);
+                int diff = offsetNext - offsetLocal;
+                if (next - instantAdjusted <= diff) {
+                    return offsetNext;
+                }
+            }
             long prev = previousTransition(instantAdjusted);
             if (prev < instantAdjusted) {
                 int offsetPrev = getOffset(prev);
                 int diff = offsetPrev - offsetLocal;
                 if (instantAdjusted - prev <= diff) {
                     return offsetPrev;
                 }
             }
         }
         return offsetAdjusted;
     }
