diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/906f3fd8-390a-4282-94ca-2061c584c213_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/d04f0eb0-8628-474a-b760-be610d3d5368_fixed.java
index be2af16..5a73ffe 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/906f3fd8-390a-4282-94ca-2061c584c213_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/d04f0eb0-8628-474a-b760-be610d3d5368_fixed.java
@@ -1,29 +1,23 @@
     public long getDateTimeMillis(int year, int monthOfYear, int dayOfMonth,
                                   int hourOfDay, int minuteOfHour,
                                   int secondOfMinute, int millisOfSecond)
         throws IllegalArgumentException
     {
         Chronology base;
         if ((base = getBase()) != null) {
             return base.getDateTimeMillis
                 (year, monthOfYear, dayOfMonth,
                  hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
         }
-
-        // Assume date is Gregorian.
         long instant;
-            instant = iGregorianChronology.getDateTimeMillis
-                (year, monthOfYear, dayOfMonth,
-                 hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
+       long iCutoverMillis = getCutoverMillis();
         if (instant < iCutoverMillis) {
-            // Maybe it's Julian.
             instant = iJulianChronology.getDateTimeMillis
                 (year, monthOfYear, dayOfMonth,
                  hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
             if (instant >= iCutoverMillis) {
-                // Okay, it's in the illegal cutover gap.
                 throw new IllegalArgumentException("Specified date does not exist");
             }
         }
         return instant;
     }
