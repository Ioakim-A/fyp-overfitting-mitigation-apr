diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/993cbf2e-0eb7-4473-86ea-2c7b24903c4a_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/62cd7c12-6f3c-44e2-8ff6-b79ebdab0864_fixed.java
index 39dd8e7..1f3a985 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/993cbf2e-0eb7-4473-86ea-2c7b24903c4a_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/62cd7c12-6f3c-44e2-8ff6-b79ebdab0864_fixed.java
@@ -1,30 +1,23 @@
    private Attribute parseAttribute() {
         tq.consumeWhitespace();
         String key = tq.consumeAttributeKey();
         String value = "";
         tq.consumeWhitespace();
         if (tq.matchChomp("=")) {
             tq.consumeWhitespace();
-
             if (tq.matchChomp(SQ)) {
                 value = tq.chompTo(SQ);
+                tq.consumeWhitespace();
             } else if (tq.matchChomp(DQ)) {
                 value = tq.chompTo(DQ);
+                tq.consumeWhitespace();
             } else {
                 StringBuilder valueAccum = new StringBuilder();
-                // no ' or " to look for, so scan to end tag or space (or end of stream)
                 while (!tq.matchesAny("<", "/>", ">") && !tq.matchesWhitespace() && !tq.isEmpty()) {
                     valueAccum.append(tq.consume());
                 }
                 value = valueAccum.toString();
             }
-            tq.consumeWhitespace();
         }
         if (key.length() != 0)
-            return Attribute.createFromEncoded(key, value);
-        else {
-            tq.consume();
-                
-            return null;
-        }
-    }
+            return Attribute.
\ No newline at end of file
