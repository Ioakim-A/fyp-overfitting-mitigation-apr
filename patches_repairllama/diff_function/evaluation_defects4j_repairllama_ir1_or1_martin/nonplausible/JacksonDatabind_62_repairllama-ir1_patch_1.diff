diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/2fda10b2-49ae-4c6c-ade0-d7569bf8945e_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/66f9fd8f-cb98-4f93-bade-113812c8c946_fixed.java
index a04d1fd..534c682 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/2fda10b2-49ae-4c6c-ade0-d7569bf8945e_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/66f9fd8f-cb98-4f93-bade-113812c8c946_fixed.java
@@ -1,39 +1,18 @@
    public CollectionDeserializer createContextual(DeserializationContext ctxt,
             BeanProperty property) throws JsonMappingException
     {
-        // May need to resolve types for delegate-based creators:
         JsonDeserializer<Object> delegateDeser = null;
         if (_valueInstantiator != null) {
             if (_valueInstantiator.canCreateUsingDelegate()) {
                 JavaType delegateType = _valueInstantiator.getDelegateType(ctxt.getConfig());
                 if (delegateType == null) {
                     throw new IllegalArgumentException("Invalid delegate-creator definition for "+_collectionType
                             +": value instantiator ("+_valueInstantiator.getClass().getName()
                             +") returned true for 'canCreateUsingDelegate()', but null for 'getDelegateType()'");
                 }
                 delegateDeser = findDeserializer(ctxt, delegateType, property);
             }
         }
-        // [databind#1043]: allow per-property allow-wrapping of single overrides:
-        // 11-Dec-2015, tatu: Should we pass basic `Collection.class`, or more refined? Mostly
-        //   comes down to "List vs Collection" I suppose... for now, pass Collection
         Boolean unwrapSingle = findFormatFeature(ctxt, property, Collection.class,
                 JsonFormat.Feature.ACCEPT_SINGLE_VALUE_AS_ARRAY);
-        // also, often value deserializer is resolved here:
-        JsonDeserializer<?> valueDeser = _valueDeserializer;
-        
-        // May have a content converter
-        valueDeser = findConvertingContentDeserializer(ctxt, property, valueDeser);
-        final JavaType vt = _collectionType.getContentType();
-        if (valueDeser == null) {
-            valueDeser = ctxt.findContextualValueDeserializer(vt, property);
-        } else { // if directly assigned, probably not yet contextual, so:
-            valueDeser = ctxt.handleSecondaryContextualization(valueDeser, property, vt);
-        }
-        // and finally, type deserializer needs context as well
-        TypeDeserializer valueTypeDeser = _valueTypeDeserializer;
-        if (valueTypeDeser != null) {
-            valueTypeDeser = valueTypeDeser.forProperty(property);
-        }
-        return withResolved(delegateDeser, valueDeser, valueTypeDeser, unwrapSingle);
-    }
+        JsonDeserializer<?>
\ No newline at end of file
