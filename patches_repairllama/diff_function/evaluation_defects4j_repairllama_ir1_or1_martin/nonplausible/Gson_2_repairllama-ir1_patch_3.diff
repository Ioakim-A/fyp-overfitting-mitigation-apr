diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/66c334e5-3efe-4685-b4d8-7c293cb6c948_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/99f5c60c-8c6a-456f-bc29-3002a385c708_fixed.java
index 3563e3c..3df1620 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/66c334e5-3efe-4685-b4d8-7c293cb6c948_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/99f5c60c-8c6a-456f-bc29-3002a385c708_fixed.java
@@ -1,17 +1,16 @@
  public static <T1> TypeAdapterFactory newTypeHierarchyFactory(
       final Class<T1> clazz, final TypeAdapter<T1> typeAdapter) {
     return new TypeAdapterFactory() {
       @SuppressWarnings("unchecked")
       public <T2> TypeAdapter<T2> create(Gson gson, TypeToken<T2> typeToken) {
-        final Class<? super T2> requestedType = typeToken.getRawType();
-        if (!clazz.isAssignableFrom(requestedType)) {
+        final Class<? super T2> rawType = typeToken.getRawType();
+        if (!clazz.isAssignableFrom(rawType)) {
           return null;
         }
         return (TypeAdapter<T2>) typeAdapter;
-
       }
       @Override public String toString() {
         return "Factory[typeHierarchy=" + clazz.getName() + ",adapter=" + typeAdapter + "]";
       }
     };
   }
