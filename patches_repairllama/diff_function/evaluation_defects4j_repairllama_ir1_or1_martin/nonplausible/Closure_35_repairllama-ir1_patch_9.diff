diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/da00d795-0164-4a60-8623-2d95a8eb9fa8_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/89d39afc-159d-48c3-9a7f-d2e8af74adbd_fixed.java
index b108107..ef11660 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/da00d795-0164-4a60-8623-2d95a8eb9fa8_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/89d39afc-159d-48c3-9a7f-d2e8af74adbd_fixed.java
@@ -1,25 +1,22 @@
  private void inferPropertyTypesToMatchConstraint(
       JSType type, JSType constraint) {
     if (type == null || constraint == null) {
       return;
     }
-
     ObjectType constraintObj =
         ObjectType.cast(constraint.restrictByNotNullOrUndefined());
     if (constraintObj != null && constraintObj.isRecordType()) {
       ObjectType objType = ObjectType.cast(type.restrictByNotNullOrUndefined());
       if (objType != null) {
         for (String prop : constraintObj.getOwnPropertyNames()) {
           JSType propType = constraintObj.getPropertyType(prop);
           if (!objType.isPropertyTypeDeclared(prop)) {
             JSType typeToInfer = propType;
             if (!objType.hasProperty(prop)) {
-              typeToInfer =
-                  getNativeType(VOID_TYPE).getLeastSupertype(propType);
+              typeToInfer = getNativeType(VOID_TYPE)
+                  .getLeastSupertype(propType);
             }
             objType.defineInferredProperty(prop, typeToInfer, null);
           }
         }
       }
-    }
-  }
