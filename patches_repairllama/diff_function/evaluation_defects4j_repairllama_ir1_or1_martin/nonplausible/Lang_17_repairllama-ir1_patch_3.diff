diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/6a4a3c6b-0223-4b31-b510-69925d3abf66_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/37470c78-bf92-41c0-ac92-5c5026ecee63_fixed.java
index 8cbef3b..cfc4887 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/6a4a3c6b-0223-4b31-b510-69925d3abf66_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/37470c78-bf92-41c0-ac92-5c5026ecee63_fixed.java
@@ -1,30 +1,28 @@
    public final void translate(CharSequence input, Writer out) throws IOException {
         if (out == null) {
             throw new IllegalArgumentException("The Writer must not be null");
         }
         if (input == null) {
             return;
         }
         int pos = 0;
-        int len = Character.codePointCount(input, 0, input.length());
+        int len = input.length();
         while (pos < len) {
             int consumed = translate(input, pos, out);
             if (consumed == 0) {
                 char[] c = Character.toChars(Character.codePointAt(input, pos));
                 out.write(c);
             }
             else {
-//          // contract with translators is that they have to understand codepoints 
-//          // and they just took care of a surrogate pair
             for (int pt = 0; pt < consumed; pt++) {
                     if (pos < len - 2) {
                 pos += Character.charCount(Character.codePointAt(input, pos));
                     } else {
                         pos++;
                     }
                 }
                 pos--;
             }
             pos++;
         }
     }
