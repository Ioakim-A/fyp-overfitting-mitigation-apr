diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/bfb3d116-3de8-4323-93d7-44ee6b8f138d_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/5f33304b-fb74-467c-bf7a-99e1227efd29_fixed.java
index a04d1fd..8a61475 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/bfb3d116-3de8-4323-93d7-44ee6b8f138d_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/5f33304b-fb74-467c-bf7a-99e1227efd29_fixed.java
@@ -1,39 +1,16 @@
    public CollectionDeserializer createContextual(DeserializationContext ctxt,
             BeanProperty property) throws JsonMappingException
     {
-        // May need to resolve types for delegate-based creators:
         JsonDeserializer<Object> delegateDeser = null;
-        if (_valueInstantiator != null) {
-            if (_valueInstantiator.canCreateUsingDelegate()) {
+        if (_valueInstantiator != null && _valueInstantiator.canCreateUsingDelegate()) {
             JavaType delegateType = _valueInstantiator.getDelegateType(ctxt.getConfig());
             if (delegateType == null) {
                 throw new IllegalArgumentException("Invalid delegate-creator definition for "+_collectionType
                         +": value instantiator ("+_valueInstantiator.getClass().getName()
                         +") returned true for 'canCreateUsingDelegate()', but null for 'getDelegateType()'");
             }
             delegateDeser = findDeserializer(ctxt, delegateType, property);
         }
-        }
-        // [databind#1043]: allow per-property allow-wrapping of single overrides:
-        // 11-Dec-2015, tatu: Should we pass basic `Collection.class`, or more refined? Mostly
-        //   comes down to "List vs Collection" I suppose... for now, pass Collection
         Boolean unwrapSingle = findFormatFeature(ctxt, property, Collection.class,
                 JsonFormat.Feature.ACCEPT_SINGLE_VALUE_AS_ARRAY);
-        // also, often value deserializer is resolved here:
-        JsonDeserializer<?> valueDeser = _valueDeserializer;
-        
-        // May have a content converter
-        valueDeser = findConvertingContentDeserializer(ctxt, property, valueDeser);
-        final JavaType vt = _collectionType.getContentType();
-        if (valueDeser == null) {
-            valueDeser = ctxt.findContextualValueDeserializer(vt, property);
-        } else { // if directly assigned, probably not yet contextual, so:
-            valueDeser = ctxt.handleSecondaryContextualization(valueDeser, property, vt);
-        }
-        // and finally, type deserializer needs context as well
-        TypeDeserializer valueTypeDeser = _valueTypeDeserializer;
-        if (valueTypeDeser != null) {
-            valueTypeDeser = valueTypeDeser.forProperty(property);
-        }
-        return withResolved(delegateDeser, valueDeser, valueTypeDeser, unwrapSingle);
-    }
+        JsonDeserializer<?> valueDeser = _valueDeser
\ No newline at end of file
