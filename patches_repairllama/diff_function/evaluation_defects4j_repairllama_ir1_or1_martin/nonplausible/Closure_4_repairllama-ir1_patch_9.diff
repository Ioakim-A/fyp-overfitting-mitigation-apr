diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/acc748aa-1b0b-47ea-8f06-8e085d214329_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/7b37b8f4-e595-4225-b16b-3b46a0a672fd_fixed.java
index 3840a76..65e21f8 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/acc748aa-1b0b-47ea-8f06-8e085d214329_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/7b37b8f4-e595-4225-b16b-3b46a0a672fd_fixed.java
@@ -1,29 +1,23 @@
  JSType resolveInternal(ErrorReporter t, StaticScope<JSType> enclosing) {
-    // TODO(user): Investigate whether it is really necessary to keep two
-    // different mechanisms for resolving named types, and if so, which order
-    // makes more sense. Now, resolution via registry is first in order to
-    // avoid triggering the warnings built into the resolution via properties.
     boolean resolved = resolveViaRegistry(t, enclosing);
     if (detectImplicitPrototypeCycle()) {
       handleTypeCycle(t);
     }
-
     if (resolved) {
       super.resolveInternal(t, enclosing);
       finishPropertyContinuations();
       return registry.isLastGeneration() ?
           getReferencedType() : this;
     }
-
     resolveViaProperties(t, enclosing);
     if (detectImplicitPrototypeCycle()) {
       handleTypeCycle(t);
     }
-
     super.resolveInternal(t, enclosing);
     if (isResolved()) {
       finishPropertyContinuations();
-    }
       return registry.isLastGeneration() ?
           getReferencedType() : this;
     }
+    return null;
+  }
