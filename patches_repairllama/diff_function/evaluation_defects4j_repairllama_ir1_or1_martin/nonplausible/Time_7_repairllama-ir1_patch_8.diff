diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/c5701ffa-e25e-41c5-b2b3-aaec4f1c8210_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/07eddf43-afdd-4a4b-81d3-7c9a918fbe06_fixed.java
index 284dc9c..d2334b1 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/c5701ffa-e25e-41c5-b2b3-aaec4f1c8210_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/07eddf43-afdd-4a4b-81d3-7c9a918fbe06_fixed.java
@@ -1,29 +1,17 @@
    public int parseInto(ReadWritableInstant instant, String text, int position) {
         DateTimeParser parser = requireParser();
         if (instant == null) {
             throw new IllegalArgumentException("Instant must not be null");
         }
-        
         long instantMillis = instant.getMillis();
         Chronology chrono = instant.getChronology();
-        long instantLocal = instantMillis + chrono.getZone().getOffset(instantMillis);
+        long instantLocal = instantMillis + chrono.getZone().getOffset(instantLocal);
         chrono = selectChronology(chrono);
         int defaultYear = chrono.year().get(instantLocal);
-        
         DateTimeParserBucket bucket = new DateTimeParserBucket(
             instantLocal, chrono, iLocale, iPivotYear, defaultYear);
         int newPos = parser.parseInto(bucket, text, position);
         instant.setMillis(bucket.computeMillis(false, text));
         if (iOffsetParsed && bucket.getOffsetInteger() != null) {
             int parsedOffset = bucket.getOffsetInteger();
-            DateTimeZone parsedZone = DateTimeZone.forOffsetMillis(parsedOffset);
-            chrono = chrono.withZone(parsedZone);
-        } else if (bucket.getZone() != null) {
-            chrono = chrono.withZone(bucket.getZone());
-        }
-        instant.setChronology(chrono);
-        if (iZone != null) {
-            instant.setZone(iZone);
-        }
-        return newPos;
-    }
+            DateTimeZone parsedZone = DateTimeZone.forOffset
\ No newline at end of file
