diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/7577f820-29d7-463e-9491-65d58537b581_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/128076b9-ec49-4dcd-86f2-6bc071e2d45f_fixed.java
index 17814ec..014beb8 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/7577f820-29d7-463e-9491-65d58537b581_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/128076b9-ec49-4dcd-86f2-6bc071e2d45f_fixed.java
@@ -1,51 +1,22 @@
    Map<String, String> parsePaxHeaders(final InputStream i)
         throws IOException {
         final Map<String, String> headers = new HashMap<String, String>(globalPaxHeaders);
-        // Format is "length keyword=value\n";
-        while(true){ // get length
+        while(true){ 
             int ch;
             int len = 0;
             int read = 0;
             while((ch = i.read()) != -1) {
                 read++;
                 if (ch == ' '){
-                    // Get keyword
                     final ByteArrayOutputStream coll = new ByteArrayOutputStream();
                     while((ch = i.read()) != -1) {
                         read++;
-                        if (ch == '='){ // end of keyword
+                        if (ch == '='){ 
                             final String keyword = coll.toString(CharsetNames.UTF_8);
-                            // Get rest of entry
                             final int restLen = len - read;
-                            if (restLen == 1) { // only NL
+                            if (restLen == 1) { 
                                 headers.remove(keyword);
                             } else {
                                 final byte[] rest = new byte[restLen];
-                                final int got = IOUtils.readFully(i, rest);
-                                if (got != restLen) {
-                                    throw new IOException("Failed to read "
-                                                          + "Paxheader. Expected "
-                                                          + restLen
-                                                          + " bytes, read "
-                                                          + got);
-                                }
-                                // Drop trailing NL
-                                final String value = new String(rest, 0,
-                                                          restLen - 1, CharsetNames.UTF_8);
-                                headers.put(keyword, value);
-                            }
-                            break;
-                        }
-                        coll.write((byte) ch);
-                    }
-                    break; // Processed single header
-                }
-                len *= 10;
-                len += ch - '0';
-            }
-            if (ch == -1){ // EOF
-                break;
-            }
-        }
-        return headers;
-    }
+                                final int got = IOUtils.readFully(i, rest, 0, restLen);
+                                if (got != restLen)
\ No newline at end of file
