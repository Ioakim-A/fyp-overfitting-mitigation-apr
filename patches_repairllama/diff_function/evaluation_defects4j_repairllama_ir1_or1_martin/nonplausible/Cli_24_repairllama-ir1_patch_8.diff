diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/5e37a932-31e9-4274-8055-42f4f56b14f0_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/0a70209e-657b-41f2-b1b4-818cc8aaa903_fixed.java
index a66e5f8..9806f3e 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/5e37a932-31e9-4274-8055-42f4f56b14f0_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/0a70209e-657b-41f2-b1b4-818cc8aaa903_fixed.java
@@ -1,44 +1,26 @@
    protected StringBuffer renderWrappedText(StringBuffer sb, int width, 
                                              int nextLineTabStop, String text)
     {
         int pos = findWrapPos(text, width, 0);
-
         if (pos == -1)
         {
-            sb.append(rtrim(text));
-
+            sb.append(text);
             return sb;
         }
         sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
-
         if (nextLineTabStop >= width)
         {
-            // stops infinite loop happening
             throw new IllegalStateException("Total width is less than the width of the argument and indent " +
                                             "- no room for the description");
         }
-
-        // all following lines must be padded with nextLineTabStop space 
-        // characters
         final String padding = createPadding(nextLineTabStop);
-
         while (true)
         {
             text = padding + text.substring(pos).trim();
             pos = findWrapPos(text, width, 0);
-
             if (pos == -1)
             {
                 sb.append(text);
-
                 return sb;
             }
-            
-            if ( (text.length() > width) && (pos == nextLineTabStop - 1) ) 
-            {
-                pos = width;
-            }
-
-            sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
-        }
-    }
+            if ( (text.length() > width) && (pos == nextLineTabStop
\ No newline at end of file
