diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/1b3a4cfe-527e-40cf-905c-876f96b8b149_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/e0a03794-6a05-475e-a61f-d75e58b3eede_fixed.java
index ab7017e..869fcc3 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/1b3a4cfe-527e-40cf-905c-876f96b8b149_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/e0a03794-6a05-475e-a61f-d75e58b3eede_fixed.java
@@ -1,24 +1,20 @@
    public static DateTimeZone forOffsetHoursMinutes(int hoursOffset, int minutesOffset) throws IllegalArgumentException {
         if (hoursOffset == 0 && minutesOffset == 0) {
             return DateTimeZone.UTC;
         }
         if (hoursOffset < -23 || hoursOffset > 23) {
             throw new IllegalArgumentException("Hours out of range: " + hoursOffset);
         }
         if (minutesOffset < 0 || minutesOffset > 59) {
             throw new IllegalArgumentException("Minutes out of range: " + minutesOffset);
         }
         int offset = 0;
         try {
-            int hoursInMinutes = hoursOffset * 60;
+            int hoursInMinutes = FieldUtils.safeMultiply(hoursOffset, 60);
             if (hoursInMinutes < 0) {
                 minutesOffset = hoursInMinutes - minutesOffset;
             } else {
                 minutesOffset = hoursInMinutes + minutesOffset;
             }
             offset = FieldUtils.safeMultiply(minutesOffset, DateTimeConstants.MILLIS_PER_MINUTE);
-        } catch (ArithmeticException ex) {
-            throw new IllegalArgumentException("Offset is too large");
-        }
-        return forOffsetMillis(offset);
-    }
+        } catch
\ No newline at end of file
