diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/172c4dfe-8858-4e1e-a472-c445b3782001_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/2c67c700-0750-4334-99ac-4233c67c8282_fixed.java
index b108107..b1d89ed 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/172c4dfe-8858-4e1e-a472-c445b3782001_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/2c67c700-0750-4334-99ac-4233c67c8282_fixed.java
@@ -1,25 +1,22 @@
  private void inferPropertyTypesToMatchConstraint(
       JSType type, JSType constraint) {
     if (type == null || constraint == null) {
       return;
     }
-
     ObjectType constraintObj =
         ObjectType.cast(constraint.restrictByNotNullOrUndefined());
     if (constraintObj != null && constraintObj.isRecordType()) {
       ObjectType objType = ObjectType.cast(type.restrictByNotNullOrUndefined());
       if (objType != null) {
         for (String prop : constraintObj.getOwnPropertyNames()) {
           JSType propType = constraintObj.getPropertyType(prop);
           if (!objType.isPropertyTypeDeclared(prop)) {
             JSType typeToInfer = propType;
             if (!objType.hasProperty(prop)) {
               typeToInfer =
-                  getNativeType(VOID_TYPE).getLeastSupertype(propType);
+                  getNativeType(VOID_TYPE).getGreatestSubtype(propType);
             }
             objType.defineInferredProperty(prop, typeToInfer, null);
           }
         }
       }
-    }
-  }
