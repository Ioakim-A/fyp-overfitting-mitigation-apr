diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/24d323cb-f262-43ec-80e3-66471cabdc4e_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/5d3f78c0-03f3-4a06-8c3e-bb895f9f3cc1_fixed.java
index 42b7715..76aecc9 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/24d323cb-f262-43ec-80e3-66471cabdc4e_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/5d3f78c0-03f3-4a06-8c3e-bb895f9f3cc1_fixed.java
@@ -1,22 +1,17 @@
  protected void declareNameInScope(FlowScope scope, Node node, JSType type) {
     switch (node.getType()) {
       case Token.NAME:
         scope.inferSlotType(node.getString(), type);
         break;
-
       case Token.GETPROP:
         String qualifiedName = node.getQualifiedName();
         Preconditions.checkNotNull(qualifiedName);
-
         JSType origType = node.getJSType();
         origType = origType == null ? getNativeType(UNKNOWN_TYPE) : origType;
-        scope.inferQualifiedSlot(node, qualifiedName, origType, type);
+        scope.inferQualifiedSlot(node, qualifiedName, type, origType);
         break;
-
-        // "this" references aren't currently modeled in the CFG.
-
       default:
         throw new IllegalArgumentException("Node cannot be refined. \n" +
             node.toStringTree());
     }
   }
