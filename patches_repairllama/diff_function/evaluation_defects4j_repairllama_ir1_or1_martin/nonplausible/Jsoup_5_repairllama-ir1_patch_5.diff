diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/bd4cbb03-992a-46a6-a5a4-43fa207b7e6d_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/1c1c15fd-26b8-4aeb-b72d-643b8a1dfb54_fixed.java
index 39dd8e7..1d6f612 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/bd4cbb03-992a-46a6-a5a4-43fa207b7e6d_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/1c1c15fd-26b8-4aeb-b72d-643b8a1dfb54_fixed.java
@@ -1,30 +1,23 @@
    private Attribute parseAttribute() {
         tq.consumeWhitespace();
         String key = tq.consumeAttributeKey();
         String value = "";
         tq.consumeWhitespace();
         if (tq.matchChomp("=")) {
             tq.consumeWhitespace();
-
             if (tq.matchChomp(SQ)) {
                 value = tq.chompTo(SQ);
+                tq.consume(SQ);
             } else if (tq.matchChomp(DQ)) {
                 value = tq.chompTo(DQ);
+                tq.consume(DQ);
             } else {
                 StringBuilder valueAccum = new StringBuilder();
-                // no ' or " to look for, so scan to end tag or space (or end of stream)
                 while (!tq.matchesAny("<", "/>", ">") && !tq.matchesWhitespace() && !tq.isEmpty()) {
                     valueAccum.append(tq.consume());
                 }
                 value = valueAccum.toString();
             }
             tq.consumeWhitespace();
         }
-        if (key.length() != 0)
-            return Attribute.createFromEncoded(key, value);
-        else {
-            tq.consume();
-                
-            return null;
-        }
-    }
+        if (key.
\ No newline at end of file
