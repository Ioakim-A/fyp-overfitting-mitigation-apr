diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/e4adfc7d-8143-4b82-b627-2363efda54dc_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/63b4ae92-c994-457b-a1ef-7e3ad21872e4_fixed.java
index 7e6373a..77518ad 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/e4adfc7d-8143-4b82-b627-2363efda54dc_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/63b4ae92-c994-457b-a1ef-7e3ad21872e4_fixed.java
@@ -1,63 +1,32 @@
    protected String[] flatten(Options options, String[] arguments, boolean stopAtNonOption)
     {
         init();
         this.options = options;
-
-        // an iterator for the command line tokens
         Iterator iter = Arrays.asList(arguments).iterator();
-
-        // process each command line token
         while (iter.hasNext())
         {
-            // get the next command line token
             String token = (String) iter.next();
-
-            // handle long option --foo or --foo=bar
             if (token.startsWith("--"))
             {
                 if (token.indexOf('=') != -1)
                 {
                     tokens.add(token.substring(0, token.indexOf('=')));
                     tokens.add(token.substring(token.indexOf('=') + 1, token.length()));
                 }
                 else
                 {
                     tokens.add(token);
                 }
             }
-
-            // single hyphen
             else if ("-".equals(token))
             {
                 tokens.add(token);
             }
             else if (token.startsWith("-"))
             {
                 if (token.length() == 2)
                 {
-                    processOptionToken(token, stopAtNonOption);
+                    tokens.add(token);
                 }
                 else if (options.hasOption(token))
                 {
\ No newline at end of file
-                    tokens.add(token);
-                }
-                // requires bursting
-                else
-                {
-                    burstToken(token, stopAtNonOption);
-                }
-            }
-            else if (stopAtNonOption)
-            {
-                process(token);
-            }
-            else
-            {
-                tokens.add(token);
-            }
-
-            gobble(iter);
-        }
-
-        return (String[]) tokens.toArray(new String[tokens.size()]);
-    }
