diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/ef12567e-76c8-48ba-b78e-624cd42ae739_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/6e86b3d4-c966-4e9f-b67d-562e86c1e605_fixed.java
index 51a2d7e..79daa62 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/ef12567e-76c8-48ba-b78e-624cd42ae739_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/6e86b3d4-c966-4e9f-b67d-562e86c1e605_fixed.java
@@ -1,49 +1,28 @@
    public static long parseOctal(final byte[] buffer, final int offset, final int length) {
         long    result = 0;
         int     end = offset + length;
         int     start = offset;
-
         if (length < 2){
             throw new IllegalArgumentException("Length "+length+" must be at least 2");
         }
-
-        if (buffer[start] == 0) {
+        if (buffer[start] == '0') {
             return 0L;
         }
-
-        // Skip leading spaces
         while (start < end){
             if (buffer[start] == ' '){
                 start++;
             } else {
                 break;
             }
         }
-
-        // Trim all trailing NULs and spaces.
-        // The ustar and POSIX tar specs require a trailing NUL or
-        // space but some implementations use the extra digit for big
-        // sizes/uids/gids ...
         byte trailer = buffer[end - 1];
         while (start < end && (trailer == 0 || trailer == ' ')) {
             end--;
             trailer = buffer[end - 1];
         }
         if (start == end) {
             throw new IllegalArgumentException(
                     exceptionMessage(buffer, offset, length, start, trailer));
         }
-
         for ( ;start < end; start++) {
-            final byte currentByte = buffer[start];
-            // CheckStyle:MagicNumber OFF
-            if (currentByte < '0' || currentByte > '7'){
-                throw new IllegalArgumentException(
-                        exceptionMessage(buffer, offset, length, start, currentByte));
-            }
-            result = (result << 3) + (currentByte - '0'); // convert from ASCII
-            // CheckStyle:MagicNumber ON
-        }
-
-        return result;
-    }
+            final byte currentByte = buffer
\ No newline at end of file
