diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/8fea6b66-ebf2-45a3-8e33-6c5a1ceae77c_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/fe83d16c-05a3-4b1d-b193-5b753b2f77e2_fixed.java
index 4864541..a196658 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/8fea6b66-ebf2-45a3-8e33-6c5a1ceae77c_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/fe83d16c-05a3-4b1d-b193-5b753b2f77e2_fixed.java
@@ -1,18 +1,15 @@
    public int[] add(ReadablePartial partial, int fieldIndex, int[] values, int valueToAdd) {
-        // overridden as superclass algorithm can't handle
-        // 2004-02-29 + 48 months -> 2008-02-29 type dates
         if (valueToAdd == 0) {
             return values;
         }
-            // month is largest field and being added to, such as month-day
         if (DateTimeUtils.isContiguous(partial)) {
             long instant = 0L;
-            for (int i = 0, isize = partial.size(); i < isize; i++) {
+            for (int i = 0, isize = values.length; i < isize; i++) {
                 instant = partial.getFieldType(i).getField(iChronology).set(instant, values[i]);
             }
             instant = add(instant, valueToAdd);
             return iChronology.get(partial, instant);
         } else {
             return super.add(partial, fieldIndex, values, valueToAdd);
         }
     }
