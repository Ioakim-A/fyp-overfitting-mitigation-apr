diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/2c2380b2-7e66-4e89-947f-b5289bdd43ca_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/bb41048a-6cb8-49f3-9503-adf0b71751f8_fixed.java
index 36033fa..9ca4df6 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/2c2380b2-7e66-4e89-947f-b5289bdd43ca_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/bb41048a-6cb8-49f3-9503-adf0b71751f8_fixed.java
@@ -1,25 +1,22 @@
    public PropertyName findNameForSerialization(Annotated a)
     {
         String name = null;
-
         JsonGetter jg = _findAnnotation(a, JsonGetter.class);
         if (jg != null) {
             name = jg.value();
         } else {
             JsonProperty pann = _findAnnotation(a, JsonProperty.class);
             if (pann != null) {
                 name = pann.value();
-                /* 22-Apr-2014, tatu: Should figure out a better way to do this, but
-                 *   it's actually bit tricky to do it more efficiently (meta-annotations
-                 *   add more lookups; AnnotationMap costs etc)
-                 */
-            } else if (_hasAnnotation(a, JsonSerialize.class)
+            } else {
+                if (_hasAnnotation(a, JsonSerialize.class)
                         || _hasAnnotation(a, JsonView.class)
                         || _hasAnnotation(a, JsonRawValue.class)) {
                     name = "";
                 } else {
                     return null;
                 }
             }
+        }
         return PropertyName.construct(name);
     }
