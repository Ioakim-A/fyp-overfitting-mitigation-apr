diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/defc56b6-fb07-436f-b2cf-e9dd6b6d1c4b_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/5b1dcdae-4aa0-485e-b401-586ca81dddd4_fixed.java
index 68a2cad..bf27074 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/defc56b6-fb07-436f-b2cf-e9dd6b6d1c4b_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/5b1dcdae-4aa0-485e-b401-586ca81dddd4_fixed.java
@@ -1,35 +1,19 @@
    public JsonDeserializer<?> createContextual(DeserializationContext ctxt,
             BeanProperty property) throws JsonMappingException
     {
-        // May need to resolve types for delegate-based creators:
         JsonDeserializer<Object> delegate = null;
         if (_valueInstantiator != null) {
-            // [databind#2324]: check both array-delegating and delegating
             AnnotatedWithParams delegateCreator = _valueInstantiator.getDelegateCreator();
             if (delegateCreator != null) {
                 JavaType delegateType = _valueInstantiator.getDelegateType(ctxt.getConfig());
-                delegate = findDeserializer(ctxt, delegateType, property);
+                delegate = findDeserializer(ctxt, delegateType, delegateCreator);
             }
         }
         JsonDeserializer<?> valueDeser = _valueDeserializer;
         final JavaType valueType = _containerType.getContentType();
         if (valueDeser == null) {
-            // [databind#125]: May have a content converter
             valueDeser = findConvertingContentDeserializer(ctxt, property, valueDeser);
             if (valueDeser == null) {
-            // And we may also need to get deserializer for String
                 valueDeser = ctxt.findContextualValueDeserializer(valueType, property);
             }
-        } else { // if directly assigned, probably not yet contextual, so:
-            valueDeser = ctxt.handleSecondaryContextualization(valueDeser, property, valueType);
-        }
-        // 11-Dec-2015, tatu: Should we pass basic `Collection.class`, or more refined? Mostly
-        //   comes down to "List vs Collection" I suppose... for now, pass Collection
-        Boolean unwrapSingle = findFormatFeature(ctxt, property, Collection.class,
-                JsonFormat.Feature.ACCEPT_SINGLE_VALUE_AS_ARRAY);
-        NullValueProvider nuller = findContentNullProvider(ctxt, property, valueDeser);
-        if (isDefaultDeserializer(valueDeser)) {
-            valueDeser = null;
-        }
-        return withResolved(delegate, valueDeser, nuller, unwrapSingle);
-    }
+        } else
\ No newline at end of file
