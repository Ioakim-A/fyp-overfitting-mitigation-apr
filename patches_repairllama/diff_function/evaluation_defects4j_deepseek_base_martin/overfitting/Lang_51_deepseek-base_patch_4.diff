diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/46ba5a8c-56c8-44ac-8c37-99842273ca6b_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/8d561e2f-b8b0-4e02-af00-fe3c62adc0fa_fixed.java
index 55b319a..354f310 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/46ba5a8c-56c8-44ac-8c37-99842273ca6b_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/8d561e2f-b8b0-4e02-af00-fe3c62adc0fa_fixed.java
@@ -1,77 +1,88 @@
     /**
      * <p>Converts a String to a boolean (optimised for performance).</p>
      * 
      * <p><code>'true'</code>, <code>'on'</code> or <code>'yes'</code>
      * (case insensitive) will return <code>true</code>. Otherwise,
      * <code>false</code> is returned.</p>
      * 
      * <p>This method performs 4 times faster (JDK1.4) than
      * <code>Boolean.valueOf(String)</code>. However, this method accepts
      * 'on' and 'yes' as true values.
      *
      * <pre>
      *   BooleanUtils.toBoolean(null)    = false
      *   BooleanUtils.toBoolean("true")  = true
      *   BooleanUtils.toBoolean("TRUE")  = true
      *   BooleanUtils.toBoolean("tRUe")  = true
      *   BooleanUtils.toBoolean("on")    = true
      *   BooleanUtils.toBoolean("yes")   = true
      *   BooleanUtils.toBoolean("false") = false
      *   BooleanUtils.toBoolean("x gti") = false
      * </pre>
      *
      * @param str  the String to check
      * @return the boolean value of the string, <code>false</code> if no match
      */
     public static boolean toBoolean(String str) {
         // Previously used equalsIgnoreCase, which was fast for interned 'true'.
         // Non interned 'true' matched 15 times slower.
         // 
         // Optimisation provides same performance as before for interned 'true'.
         // Similar performance for null, 'false', and other strings not length 2/3/4.
         // 'true'/'TRUE' match 4 times slower, 'tRUE'/'True' 7 times slower.
         if (str == "true") {
             return true;
         }
         if (str == null) {
             return false;
         }
         switch (str.length()) {
             case 2: {
                 char ch0 = str.charAt(0);
                 char ch1 = str.charAt(1);
                 return 
                     (ch0 == 'o' || ch0 == 'O') &&
                     (ch1 == 'n' || ch1 == 'N');
             }
             case 3: {
                 char ch = str.charAt(0);
                 if (ch == 'y') {
                     return 
                         (str.charAt(1) == 'e' || str.charAt(1) == 'E') &&
                         (str.charAt(2) == 's' || str.charAt(2) == 'S');
                 }
                 if (ch == 'Y') {
                     return 
                         (str.charAt(1) == 'E' || str.charAt(1) == 'e') &&
                         (str.charAt(2) == 'S' || str.charAt(2) == 's');
                 }
+                if (ch == 'o') {
+                    return 
+                        (str.charAt(1) == 'n' || str.charAt(1) == 'N') &&
+                        (str.charAt(2) == 'e' || str.charAt(2) == 'E');
+                }
+                if (ch == 'O') {
+                    return 
+                        (str.charAt(1) == 'N' || str.charAt(1) == 'n') &&
+                        (str.charAt(2) == 'E' || str.charAt(2) == 'e');
+                }
+                return false;
             }
             case 4: {
                 char ch = str.charAt(0);
                 if (ch == 't') {
                     return 
                         (str.charAt(1) == 'r' || str.charAt(1) == 'R') &&
                         (str.charAt(2) == 'u' || str.charAt(2) == 'U') &&
                         (str.charAt(3) == 'e' || str.charAt(3) == 'E');
                 }
                 if (ch == 'T') {
                     return 
                         (str.charAt(1) == 'R' || str.charAt(1) == 'r') &&
                         (str.charAt(2) == 'U' || str.charAt(2) == 'u') &&
                         (str.charAt(3) == 'E' || str.charAt(3) == 'e');
                 }
             }
         }
         return false;
     }
