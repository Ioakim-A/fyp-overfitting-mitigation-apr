diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/af9929ce-d3c1-4ee5-b12c-5d95c69bfed1_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/128a1849-4115-4500-861a-b80326e6041e_fixed.java
index fd32990..295a486 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/af9929ce-d3c1-4ee5-b12c-5d95c69bfed1_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/128a1849-4115-4500-861a-b80326e6041e_fixed.java
@@ -1,20 +1,40 @@
     /**
      * Returns a value by name.
      *
      * @param name
      *            the name of the column to be retrieved.
      * @return the column value, or {@code null} if the column name is not found
      * @throws IllegalStateException
      *             if no header mapping was provided
      * @throws IllegalArgumentException
      *             if the record is inconsistent
      * @see #isConsistent()
      */
     public String get(final String name) {
         if (mapping == null) {
             throw new IllegalStateException(
                     "No header mapping was specified, the record values can't be accessed by name");
         }
         final Integer index = mapping.get(name);
-            return index != null ? values[index.intValue()] : null;
+        if (index == null) {
+            return null;
+        }
+        return get(index);
+    }
+
+    /**
+     * Returns a value by name.
+     *
+     * @param name
+     *            the name of the column to be retrieved.
+     * @return the column value, or {@code null} if the column name is not found
+     * @throws IllegalStateException
+     *             if no header mapping was provided
+     * @throws IllegalArgumentException
+     *             if the record is inconsistent
+     * @see #isConsistent()
+     */
+    public String get(final String name, final String defaultValue) {
+        final String value = get(name);
+        return value == null ? defaultValue : value;
     }
