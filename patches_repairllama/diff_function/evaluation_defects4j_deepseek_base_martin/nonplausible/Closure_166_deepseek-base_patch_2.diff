diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/d827a8a3-90ba-4631-9ede-3da64a17132c_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/baa01ae9-e52a-4c35-aec6-5eccb9af9844_fixed.java
index 5f96616..048a0e1 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/d827a8a3-90ba-4631-9ede-3da64a17132c_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/baa01ae9-e52a-4c35-aec6-5eccb9af9844_fixed.java
@@ -1,20 +1,22 @@
   @Override
   public void matchConstraint(JSType constraint) {
     // We only want to match constraints on anonymous types.
     if (hasReferenceName()) {
       return;
     }
-
     // Handle the case where the constraint object is a record type.
     //
     // param constraint {{prop: (number|undefined)}}
     // function f(constraint) {}
     // f({});
     //
     // We want to modify the object literal to match the constraint, by
     // taking any each property on the record and trying to match
     // properties on this object.
     if (constraint.isRecordType()) {
       matchRecordTypeConstraint(constraint.toObjectType());
+      return;
+    }
+    super.matchConstraint(constraint);
     }
   }
