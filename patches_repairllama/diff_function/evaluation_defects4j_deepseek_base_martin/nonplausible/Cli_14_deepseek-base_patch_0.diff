diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/b380edfc-8ead-4fe7-a011-64d07c693a3a_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/e7b8009f-d572-420a-9a20-2f0d21c829c1_fixed.java
index 71189c3..3f2c00d 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/b380edfc-8ead-4fe7-a011-64d07c693a3a_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/e7b8009f-d572-420a-9a20-2f0d21c829c1_fixed.java
@@ -1,46 +1,36 @@
     public void validate(final WriteableCommandLine commandLine)
         throws OptionException {
         // number of options found
         int present = 0;
-
         // reference to first unexpected option
         Option unexpected = null;
-
         for (final Iterator i = options.iterator(); i.hasNext();) {
             final Option option = (Option) i.next();
-
             // needs validation?
             boolean validate = option.isRequired() || option instanceof Group;
-            if (validate) {
-                option.validate(commandLine);
-            }
-
-            // if the child option is present then validate it
             if (commandLine.hasOption(option)) {
-                if (++present > maximum) {
+                present++;
+                if (!validate) {
                     unexpected = option;
-
                     break;
                 }
-
+            }
+            if (validate) {
                 option.validate(commandLine);
             }
         }
-
         // too many options
         if (unexpected != null) {
             throw new OptionException(this, ResourceConstants.UNEXPECTED_TOKEN,
                                       unexpected.getPreferredName());
         }
-
         // too few option
         if (present < minimum) {
             throw new OptionException(this, ResourceConstants.MISSING_OPTION);
         }
-
         // validate each anonymous argument
         for (final Iterator i = anonymous.iterator(); i.hasNext();) {
             final Option option = (Option) i.next();
             option.validate(commandLine);
         }
     }
