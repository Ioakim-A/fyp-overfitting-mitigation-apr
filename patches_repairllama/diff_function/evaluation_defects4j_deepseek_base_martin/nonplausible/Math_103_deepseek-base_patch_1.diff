diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/7712766f-25c6-4246-bbaa-b530ff16915f_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/ac70261a-166d-4652-907f-ab081627896a_fixed.java
index 6cfa79b..767db1c 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/7712766f-25c6-4246-bbaa-b530ff16915f_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/ac70261a-166d-4652-907f-ab081627896a_fixed.java
@@ -1,12 +1,23 @@
     /**
      * For this disbution, X, this method returns P(X &lt; <code>x</code>).
      * @param x the value at which the CDF is evaluated.
      * @return CDF evaluted at <code>x</code>. 
      * @throws MathException if the algorithm fails to converge; unless
      * x is more than 20 standard deviations from the mean, in which case the
      * convergence exception is caught and 0 or 1 is returned.
      */
     public double cumulativeProbability(double x) throws MathException {
-            return 0.5 * (1.0 + Erf.erf((x - mean) /
-                    (standardDeviation * Math.sqrt(2.0))));
+        return super.cumulativeProbability(x);
+    }
+
+    /**
+     * For this disbution, X, this method returns P(X &gt; <code>x</code>).
+     * @param x the value at which the CDF is evaluated.
+     * @return CDF evaluted at <code>x</code>. 
+     * @throws MathException if the algorithm fails to converge; unless
+     * x is more than 20 standard deviations from the mean, in which case the
+     * convergence exception is caught and 0 or 1 is returned.
+     */
+    public double tailProbability(double x) throws MathException {
+        return super.tailProbability(x);
     }
