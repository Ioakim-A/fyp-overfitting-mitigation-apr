diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/3634b4ad-9ef6-4398-b390-78c9d0b57846_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/96bb248a-870b-4cad-9826-42ae62b9892f_fixed.java
index dc93be3..dc4a6f9 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/3634b4ad-9ef6-4398-b390-78c9d0b57846_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/96bb248a-870b-4cad-9826-42ae62b9892f_fixed.java
@@ -1,14 +1,26 @@
     Element insert(Token.StartTag startTag) {
         // handle empty unknown tags
         // when the spec expects an empty tag, will directly hit insertEmpty, so won't generate this fake end tag.
         if (startTag.isSelfClosing()) {
             Element el = insertEmpty(startTag);
             stack.add(el);
             tokeniser.emit(new Token.EndTag(el.tagName()));  // ensure we get out of whatever state we are in. emitted for yielded processing
             return el;
         }
+        Element el = new Element(Tag.valueOf(startTag.name()), baseUri, startTag.attributes);
+        insert(el);
+        return el;
+    }
 
+    Element insertEmpty(Token.StartTag startTag) {
+        // handle empty unknown tags
+        if (startTag.isSelfClosing()) {
+            Element el = insertEmpty(startTag);
+            stack.add(el);
+            tokeniser.emit(new Token.EndTag(el.tagName()));  // ensure we get out of whatever state we are in. emitted for yielded processing
+            return el;
+        }
         Element el = new Element(Tag.valueOf(startTag.name()), baseUri, startTag.attributes);
         insert(el);
         return el;
     }
