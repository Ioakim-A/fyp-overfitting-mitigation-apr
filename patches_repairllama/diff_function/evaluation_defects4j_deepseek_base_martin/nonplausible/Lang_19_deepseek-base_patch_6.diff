diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/a392261f-933a-40a7-808d-8cb76169a579_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/873432bc-5023-4dd7-8e69-62ba5365d2fe_fixed.java
index 72a422c..f8f86cf 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/a392261f-933a-40a7-808d-8cb76169a579_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/873432bc-5023-4dd7-8e69-62ba5365d2fe_fixed.java
@@ -1,51 +1,17 @@
     /**
      * {@inheritDoc}
      */
     @Override
     public int translate(CharSequence input, int index, Writer out) throws IOException {
         int seqEnd = input.length();
         // Uses -2 to ensure there is something after the &#
-        if(input.charAt(index) == '&' && index < seqEnd - 1 && input.charAt(index + 1) == '#') {
-            int start = index + 2;
-            boolean isHex = false;
-
-            char firstChar = input.charAt(start);
-            if(firstChar == 'x' || firstChar == 'X') {
-                start++;
-                isHex = true;
-
-                // Check there's more than just an x after the &#
-            }
-
-            int end = start;
-            // Note that this supports character codes without a ; on the end
-            while(input.charAt(end) != ';')
-            {
-                end++;
-            }
-
-            int entityValue;
-            try {
-                if(isHex) {
-                    entityValue = Integer.parseInt(input.subSequence(start, end).toString(), 16);
-                } else {
-                    entityValue = Integer.parseInt(input.subSequence(start, end).toString(), 10);
-                }
-            } catch(NumberFormatException nfe) {
-            System.err.println("FAIL: " + input.subSequence(start, end) + "[" + start +"]["+ end +"]");
-                return 0;
-            }
-
-            if(entityValue > 0xFFFF) {
-                char[] chrs = Character.toChars(entityValue);
-                out.write(chrs[0]);
-                out.write(chrs[1]);
+        for (int i = index + 2; i < seqEnd; i++) {
+            char c = input.charAt(i);
+            if (Character.isDigit(c)) {
+                out.write(c);
             } else {
-                out.write(entityValue);
+                return i;
             }
-
-
-            return 2 + (end - start) + (isHex ? 1 : 0) + 1;
         }
         return 0;
     }
