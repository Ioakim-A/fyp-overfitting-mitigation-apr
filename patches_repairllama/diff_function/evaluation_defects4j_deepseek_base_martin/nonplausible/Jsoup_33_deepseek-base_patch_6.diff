diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/6d13faae-af9b-407f-a849-3a82e748627d_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/c105e4bb-7ec4-41e7-a16b-c2a54c638b6c_fixed.java
index dc93be3..9e3f4c7 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/6d13faae-af9b-407f-a849-3a82e748627d_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/c105e4bb-7ec4-41e7-a16b-c2a54c638b6c_fixed.java
@@ -1,14 +1,14 @@
     Element insert(Token.StartTag startTag) {
         // handle empty unknown tags
         // when the spec expects an empty tag, will directly hit insertEmpty, so won't generate this fake end tag.
         if (startTag.isSelfClosing()) {
             Element el = insertEmpty(startTag);
             stack.add(el);
+            tokeniser.emit(new Token.EndTag(el.tagName()));
             tokeniser.emit(new Token.EndTag(el.tagName()));  // ensure we get out of whatever state we are in. emitted for yielded processing
             return el;
         }
-        
         Element el = new Element(Tag.valueOf(startTag.name()), baseUri, startTag.attributes);
         insert(el);
         return el;
     }
