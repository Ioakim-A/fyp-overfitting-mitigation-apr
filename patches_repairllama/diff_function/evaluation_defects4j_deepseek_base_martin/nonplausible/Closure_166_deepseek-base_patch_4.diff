diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/1eb57e68-7a37-415d-9faa-5d2ce878bc03_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/c43c4f92-66ed-40ae-8d6a-d7741769de1e_fixed.java
index 5f96616..0a1f0e9 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/1eb57e68-7a37-415d-9faa-5d2ce878bc03_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/c43c4f92-66ed-40ae-8d6a-d7741769de1e_fixed.java
@@ -1,20 +1,24 @@
   @Override
   public void matchConstraint(JSType constraint) {
     // We only want to match constraints on anonymous types.
     if (hasReferenceName()) {
       return;
     }
-
     // Handle the case where the constraint object is a record type.
     //
     // param constraint {{prop: (number|undefined)}}
     // function f(constraint) {}
     // f({});
     //
     // We want to modify the object literal to match the constraint, by
     // taking any each property on the record and trying to match
     // properties on this object.
     if (constraint.isRecordType()) {
       matchRecordTypeConstraint(constraint.toObjectType());
+      return;
+    }
+
+    if (constraint.isObjectType()) {
+      matchObjectTypeConstraint(constraint.toObjectType());
     }
   }
