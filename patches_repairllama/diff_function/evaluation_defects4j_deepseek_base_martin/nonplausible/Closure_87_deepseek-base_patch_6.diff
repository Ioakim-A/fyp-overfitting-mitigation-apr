diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/257c6eb5-dc81-4a3a-9d20-5b7bdb6eb8d8_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/04052026-a51a-4690-b81a-a13a6254a408_fixed.java
index 19fd63e..d826c3c 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/257c6eb5-dc81-4a3a-9d20-5b7bdb6eb8d8_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/04052026-a51a-4690-b81a-a13a6254a408_fixed.java
@@ -1,24 +1,13 @@
   /**
    * @return Whether the node is a block with a single statement that is
    *     an expression.
    */
   private boolean isFoldableExpressBlock(Node n) {
     if (n.getType() == Token.BLOCK) {
       if (n.hasOneChild()) {
         Node maybeExpr = n.getFirstChild();
-          // IE has a bug where event handlers behave differently when
-          // their return value is used vs. when their return value is in
-          // an EXPR_RESULT. It's pretty freaking weird. See:
-          // http://code.google.com/p/closure-compiler/issues/detail?id=291
-          // We try to detect this case, and not fold EXPR_RESULTs
-          // into other expressions.
-
-            // We only have to worry about methods with an implicit 'this'
-            // param, or this doesn't happen.
-
-          return NodeUtil.isExpressionNode(maybeExpr);
+        if (maybeExpr.getType() == Token.EXPR) return true;
       }
     }
-
     return false;
   }
