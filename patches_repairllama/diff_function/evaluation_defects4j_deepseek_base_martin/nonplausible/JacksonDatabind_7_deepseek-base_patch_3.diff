diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/089a73d7-1b52-48ec-bc7a-a2b0755da509_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/6a51ee17-ac0f-40bc-9ca5-e12abcb29945_fixed.java
index 4f21a3a..05f6092 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/089a73d7-1b52-48ec-bc7a-a2b0755da509_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/6a51ee17-ac0f-40bc-9ca5-e12abcb29945_fixed.java
@@ -1,14 +1,35 @@
     /**
      * Helper method used by standard deserializer.
      * 
      * @since 2.3
      */
     public TokenBuffer deserialize(JsonParser jp, DeserializationContext ctxt) throws IOException
     {
-            copyCurrentStructure(jp);
-        /* 28-Oct-2014, tatu: As per #592, need to support a special case of starting from
-         *    FIELD_NAME, which is taken to mean that we are missing START_OBJECT, but need
-         *    to assume one did exist.
+        JsonToken t = jp.getCurrentToken();
+        if (t == JsonToken.VALUE_NULL) {
+            return null;
+        }
+        if (t != JsonToken.START_ARRAY) {
+            throw ctxt.wrongTokenException(jp, JsonToken.START_ARRAY, "Expected array or null");
+        }
+        TokenBuffer result = new TokenBuffer();
+        while (jp.nextToken() != JsonToken.END_ARRAY) {
+            result.add(jp.getCurrentToken());
+        }
+        return result;
+    }
+
+    /**
+     * Helper method used by standard serializer.
+     * 
+     * @since 2.3
      */
+    public TokenBuffer serialize(JsonGenerator jgen, SerializerProvider provider) throws IOException
+    {
+        jgen.writeStartArray();
+        for (JsonToken t : this) {
+            jgen.writeToken(t);
+        }
+        jgen.writeEndArray();
         return this;
     }
