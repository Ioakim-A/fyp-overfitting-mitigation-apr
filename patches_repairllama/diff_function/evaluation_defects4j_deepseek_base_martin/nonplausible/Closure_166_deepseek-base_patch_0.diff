diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/70842555-1d7d-4809-bdae-6400e1dce865_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/f79c8f92-13ac-461e-9833-6f2d8c4d93ac_fixed.java
index 5f96616..658fd7a 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/70842555-1d7d-4809-bdae-6400e1dce865_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/f79c8f92-13ac-461e-9833-6f2d8c4d93ac_fixed.java
@@ -1,20 +1,24 @@
   @Override
   public void matchConstraint(JSType constraint) {
     // We only want to match constraints on anonymous types.
     if (hasReferenceName()) {
       return;
     }
-
     // Handle the case where the constraint object is a record type.
     //
     // param constraint {{prop: (number|undefined)}}
     // function f(constraint) {}
     // f({});
     //
     // We want to modify the object literal to match the constraint, by
     // taking any each property on the record and trying to match
     // properties on this object.
     if (constraint.isRecordType()) {
       matchRecordTypeConstraint(constraint.toObjectType());
+      return;
+    }
+    if (constraint.isObjectType()) {
+      matchObjectTypeConstraint(constraint.toObjectType());
+      return;
     }
   }
