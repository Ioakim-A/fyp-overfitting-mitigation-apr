diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/38760358-ad78-43a5-833a-a87f4dd0d73d_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/9580402b-9ab3-4c1d-b317-38c5e1aa5cd1_fixed.java
index bfa2423..a0273d1 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/38760358-ad78-43a5-833a-a87f4dd0d73d_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/9580402b-9ab3-4c1d-b317-38c5e1aa5cd1_fixed.java
@@ -1,23 +1,20 @@
     /**
      * Generate a random sample from the distribution.
      *
      * @param sampleSize the number of random values to generate.
      * @return an array representing the random sample.
      * @throws NotStrictlyPositiveException if {@code sampleSize} is not
      * positive.
      */
-    public T[] sample(int sampleSize) throws NotStrictlyPositiveException {
+    public double[] sample(int sampleSize) throws NotStrictlyPositiveException {
         if (sampleSize <= 0) {
-            throw new NotStrictlyPositiveException(LocalizedFormats.NUMBER_OF_SAMPLES,
-                    sampleSize);
+            throw new NotStrictlyPositiveException(
+                    LocalizedFormats.NUMBER_OF_SAMPLES, sampleSize);
         }
-
-        final T[]out = (T[]) java.lang.reflect.Array.newInstance(singletons.get(0).getClass(), sampleSize);
+        double[] out = new double[sampleSize];
 
         for (int i = 0; i < sampleSize; i++) {
             out[i] = sample();
         }
-
         return out;
-
     }
