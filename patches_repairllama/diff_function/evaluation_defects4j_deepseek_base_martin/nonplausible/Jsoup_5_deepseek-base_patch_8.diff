diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/f19ffbbd-d57e-459b-be6e-60cf601158b8_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/ed798b95-82a9-4024-bea4-9909e324511f_fixed.java
index 39dd8e7..363bcd8 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/f19ffbbd-d57e-459b-be6e-60cf601158b8_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/ed798b95-82a9-4024-bea4-9909e324511f_fixed.java
@@ -1,30 +1,28 @@
     private Attribute parseAttribute() {
         tq.consumeWhitespace();
         String key = tq.consumeAttributeKey();
         String value = "";
         tq.consumeWhitespace();
         if (tq.matchChomp("=")) {
             tq.consumeWhitespace();
-
             if (tq.matchChomp(SQ)) {
                 value = tq.chompTo(SQ);
             } else if (tq.matchChomp(DQ)) {
                 value = tq.chompTo(DQ);
             } else {
                 StringBuilder valueAccum = new StringBuilder();
                 // no ' or " to look for, so scan to end tag or space (or end of stream)
                 while (!tq.matchesAny("<", "/>", ">") && !tq.matchesWhitespace() && !tq.isEmpty()) {
                     valueAccum.append(tq.consume());
                 }
                 value = valueAccum.toString();
             }
             tq.consumeWhitespace();
         }
         if (key.length() != 0)
             return Attribute.createFromEncoded(key, value);
         else {
-            tq.consume();
-                
+            tq.consumeTag();
             return null;
         }
     }
