diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/adacf257-647e-4cea-a8c1-52b92446ace5_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/4d537849-30fa-4577-8a9f-1152dd60a24b_fixed.java
index b5d94e0..d76ac82 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/adacf257-647e-4cea-a8c1-52b92446ace5_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/4d537849-30fa-4577-8a9f-1152dd60a24b_fixed.java
@@ -1,26 +1,22 @@
   private void traverse(Node node) {
     // The goal here is to avoid retraversing
     // the entire AST to catch newly created opportunities.
     // So we track whether a "unit of code" has changed,
     // and revisit immediately.
     if (!shouldVisit(node)) {
       return;
     }
-
     int visits = 0;
     do {
       Node c = node.getFirstChild();
       while(c != null) {
-        traverse(c);
-        Node next = c.getNext();
+        Node next = c.getNextSibling();
+        traverse(node);
         c = next;
       }
-
       visit(node);
       visits++;
-
       Preconditions.checkState(visits < 10000, "too many interations");
     } while (shouldRetraverse(node));
-
     exitNode(node);
   }
