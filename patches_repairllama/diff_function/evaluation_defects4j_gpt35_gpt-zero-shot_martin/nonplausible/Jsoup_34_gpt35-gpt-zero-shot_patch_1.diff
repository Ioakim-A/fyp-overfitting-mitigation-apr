diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/cac4a5af-8a2d-4a7c-b9bf-7f9615895c8a_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/5726d8ac-1f95-4a4f-a8e2-c86b35c4b29e_fixed.java
index 3ea5b43..bd1844f 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/cac4a5af-8a2d-4a7c-b9bf-7f9615895c8a_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/5726d8ac-1f95-4a4f-a8e2-c86b35c4b29e_fixed.java
@@ -1,17 +1,4 @@
-    int nextIndexOf(CharSequence seq) {
-        // doesn't handle scanning for surrogates
-        char startChar = seq.charAt(0);
-        for (int offset = pos; offset < length; offset++) {
-            // scan to first instance of startchar:
-            if (startChar != input[offset])
-                while(++offset < length && startChar != input[offset]);
-            int i = offset + 1;
-            int last = i + seq.length()-1;
-            if (offset < length) {
-                for (int j = 1; i < last && seq.charAt(j) == input[i]; i++, j++);
-                if (i == last) // found full sequence
+if (i < length) {
+    if (seq.charAt(last) == input[i])
         return offset - pos;
 }
\ No newline at end of file
-        }
-        return -1;
-    }
