diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/ac5f1e2a-f0ae-4898-b0d7-8ca547204f17_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/ffe4a4f7-6dac-4166-ae21-d4101b0b7bbf_fixed.java
index a66e5f8..56f2a4e 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/ac5f1e2a-f0ae-4898-b0d7-8ca547204f17_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/ffe4a4f7-6dac-4166-ae21-d4101b0b7bbf_fixed.java
@@ -1,44 +1,32 @@
 protected StringBuffer renderWrappedText(StringBuffer sb, int width, 
                                          int nextLineTabStop, String text)
 {
     int pos = findWrapPos(text, width, 0);
-
     if (pos == -1)
     {
         sb.append(rtrim(text));
-
         return sb;
     }
     sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
-
     if (nextLineTabStop >= width)
     {
-            // stops infinite loop happening
         throw new IllegalStateException("Total width is less than the width of the argument and indent " +
                                         "- no room for the description");
     }
-
-        // all following lines must be padded with nextLineTabStop space 
-        // characters
     final String padding = createPadding(nextLineTabStop);
-
     while (true)
     {
         text = padding + text.substring(pos).trim();
         pos = findWrapPos(text, width, 0);
-
         if (pos == -1)
         {
             sb.append(text);
-
             return sb;
         }
-            
         if ( (text.length() > width) && (pos == nextLineTabStop - 1) ) 
         {
             pos = width;
         }
-
         sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
     }
 }
\ No newline at end of file
