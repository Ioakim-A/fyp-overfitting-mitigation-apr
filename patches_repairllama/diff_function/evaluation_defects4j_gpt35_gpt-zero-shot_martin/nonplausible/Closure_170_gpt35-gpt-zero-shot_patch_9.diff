diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/8dbbe3ac-87d2-419d-a368-b2673e2ab3d9_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/465404e7-4327-4c0c-b030-5fe1cba9767e_fixed.java
index a0eee42..cdede03 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/8dbbe3ac-87d2-419d-a368-b2673e2ab3d9_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/465404e7-4327-4c0c-b030-5fe1cba9767e_fixed.java
@@ -1,25 +1,6 @@
-    private void getNumUseInUseCfgNode(final Node cfgNode) {
-
-      numUsesWithinCfgNode = 0;
-      AbstractCfgNodeTraversalCallback gatherCb =
-          new AbstractCfgNodeTraversalCallback() {
-
-        @Override
-        public void visit(NodeTraversal t, Node n, Node parent) {
-          if (n.isName() && n.getString().equals(varName) &&
-            // We make a special exception when the entire cfgNode is a chain
-            // of assignments, since in that case the assignment statements
-            // will happen after the inlining of the right hand side.
-            // TODO(blickly): Make the SIDE_EFFECT_PREDICATE check more exact
-            //   and remove this special case.
-              !(parent.isAssign() &&
-               (parent.getFirstChild() == n))) {
-              // Don't count lhs of top-level assignment chain
+if (n.isName()
+    && n.getString().equals(varName)
+    && !parent.isAssign()
+    && parent.getFirstChild() != n) {
   numUsesWithinCfgNode++;
 }
\ No newline at end of file
-        }
-
-      };
-
-      NodeTraversal.traverse(compiler, cfgNode, gatherCb);
-    }
