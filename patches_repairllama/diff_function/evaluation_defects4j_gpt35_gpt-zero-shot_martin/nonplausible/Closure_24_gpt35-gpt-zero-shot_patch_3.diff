diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/1a530d2a-2d41-40d1-895a-f068d609f1c6_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/3dccd01c-9e61-4784-b087-b88e4a572b2d_fixed.java
index 602226b..d369e47 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/1a530d2a-2d41-40d1-895a-f068d609f1c6_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/3dccd01c-9e61-4784-b087-b88e4a572b2d_fixed.java
@@ -1,26 +1,22 @@
 private void findAliases(NodeTraversal t) {
   Scope scope = t.getScope();
   for (Var v : scope.getVarIterable()) {
     Node n = v.getNode();
     int type = n.getType();
     Node parent = n.getParent();
     if (parent.isVar()) {
       if (n.hasChildren() && n.getFirstChild().isQualifiedName()) {
         String name = n.getString();
         Var aliasVar = scope.getVar(name);
         aliases.put(name, aliasVar);
-
-          String qualifiedName =
-              aliasVar.getInitialValue().getQualifiedName();
+        String qualifiedName = null;
+        if (aliasVar.getInitialValue() != null) {
+          qualifiedName = aliasVar.getInitialValue().getQualifiedName();
+        }
         transformation.addAlias(name, qualifiedName);
-          // Bleeding functions already get a BAD_PARAMETERS error, so just
-          // do nothing.
-          // Parameters of the scope function also get a BAD_PARAMETERS
-          // error.
       } else {
-          // TODO(robbyw): Support using locals for private variables.
         report(t, n, GOOG_SCOPE_NON_ALIAS_LOCAL, n.getString());
       }
     }
   }
 }
\ No newline at end of file
