diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/1c334b49-38cd-4eac-b8b6-c4cad4742b7f_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/7bb786d7-65b5-43da-9075-060ae57d9d04_fixed.java
index 810d6e1..17628f3 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/1c334b49-38cd-4eac-b8b6-c4cad4742b7f_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/7bb786d7-65b5-43da-9075-060ae57d9d04_fixed.java
@@ -1,18 +1,13 @@
     public long adjustOffset(long instant, boolean earlierOrLater) {
-        // a bit messy, but will work in all non-pathological cases
-        
-        // evaluate 3 hours before and after to work out if anything is happening
         long instantBefore = convertUTCToLocal(instant - 3 * DateTimeConstants.MILLIS_PER_HOUR);
         long instantAfter = convertUTCToLocal(instant + 3 * DateTimeConstants.MILLIS_PER_HOUR);
         if (instantBefore == instantAfter) {
-            return instant;  // not an overlap (less than is a gap, equal is normal case)
+            return instant;  
         }
-        
-        // work out range of instants that have duplicate local times
         long local = convertUTCToLocal(instant);
-        return convertLocalToUTC(local, false, earlierOrLater ? instantAfter : instantBefore);
-        
-        // calculate result
-          // currently in later offset
-          // currently in earlier offset
+        if(earlierOrLater) {
+            return convertLocalToUTC(local, false, instantAfter);
+        } else {
+            return convertLocalToUTC(local, false, instantBefore);
+        }
     }
\ No newline at end of file
