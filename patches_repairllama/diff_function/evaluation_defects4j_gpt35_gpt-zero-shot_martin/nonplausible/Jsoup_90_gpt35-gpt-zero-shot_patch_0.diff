diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/ef9b2ced-bebc-4347-bf32-daa39857c44a_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/8909c1b7-b6f0-4e15-99ae-03ecb9283b18_fixed.java
index 373b1e8..8327d8b 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/ef9b2ced-bebc-4347-bf32-daa39857c44a_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/8909c1b7-b6f0-4e15-99ae-03ecb9283b18_fixed.java
@@ -1,37 +1,11 @@
-        private static boolean looksLikeUtf8(byte[] input) {
-            int i = 0;
-            // BOM:
-            if (input.length >= 3 && (input[0] & 0xFF) == 0xEF
-                && (input[1] & 0xFF) == 0xBB & (input[2] & 0xFF) == 0xBF) {
-                i = 3;
-            }
-
-            int end;
-            for (int j = input.length; i < j; ++i) {
-                int o = input[i];
-                if ((o & 0x80) == 0) {
-                    continue; // ASCII
-                }
-
-                // UTF-8 leading:
-                if ((o & 0xE0) == 0xC0) {
 end = i + 1;
-                } else if ((o & 0xF0) == 0xE0) {
-                    end = i + 2;
-                } else if ((o & 0xF8) == 0xF0) {
-                    end = i + 3;
-                } else {
-                    return false;
-                }
-
-
 while (i < end) {
     i++;
+    if (i >= input.length) {
+        return false;
+    }
     o = input[i];
     if ((o & 0xC0) != 0x80) {
         return false;
     }
 }
\ No newline at end of file
-            }
-            return true;
-        }
