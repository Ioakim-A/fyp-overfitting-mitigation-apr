diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/2e78a85c-6d8d-4939-8a48-f2fb0617a344_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/d5d3e190-4129-4437-83ae-37ae071ee960_fixed.java
index 42b7715..7ac2725 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/2e78a85c-6d8d-4939-8a48-f2fb0617a344_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/d5d3e190-4129-4437-83ae-37ae071ee960_fixed.java
@@ -1,22 +1,23 @@
   protected void declareNameInScope(FlowScope scope, Node node, JSType type) {
     switch (node.getType()) {
       case Token.NAME:
         scope.inferSlotType(node.getString(), type);
         break;
-
       case Token.GETPROP:
         String qualifiedName = node.getQualifiedName();
         Preconditions.checkNotNull(qualifiedName);
-
         JSType origType = node.getJSType();
         origType = origType == null ? getNativeType(UNKNOWN_TYPE) : origType;
         scope.inferQualifiedSlot(node, qualifiedName, origType, type);
         break;
-
-        // "this" references aren't currently modeled in the CFG.
-
+      case Token.GETELEM:
+        Node child = node.getFirstChild();
+        Preconditions.checkState(child != null);
+        Preconditions.checkState(child.getNext() != null);
+        scope.inferBracketSlot(child, child.getNext(), type);
+        break;
       default:
         throw new IllegalArgumentException("Node cannot be refined. \n" +
             node.toStringTree());
     }
   }
\ No newline at end of file
