diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/762418e6-f36a-48d6-8375-965689d84042_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/8592a541-29e9-483a-81ea-0f268e357c6d_fixed.java
index 3840a76..1f49349 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/762418e6-f36a-48d6-8375-965689d84042_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/8592a541-29e9-483a-81ea-0f268e357c6d_fixed.java
@@ -1,29 +1,23 @@
 JSType resolveInternal(ErrorReporter t, StaticScope<JSType> enclosing) {
-    // TODO(user): Investigate whether it is really necessary to keep two
-    // different mechanisms for resolving named types, and if so, which order
-    // makes more sense. Now, resolution via registry is first in order to
-    // avoid triggering the warnings built into the resolution via properties.
   boolean resolved = resolveViaRegistry(t, enclosing);
   if (detectImplicitPrototypeCycle()) {
     handleTypeCycle(t);
   }
-
   if (resolved) {
     super.resolveInternal(t, enclosing);
     finishPropertyContinuations();
     return registry.isLastGeneration() ?
       getReferencedType() : this;
-    }
-
+  } else {
     resolveViaProperties(t, enclosing);
     if (detectImplicitPrototypeCycle()) {
       handleTypeCycle(t);
     }
-
     super.resolveInternal(t, enclosing);
     if (isResolved()) {
       finishPropertyContinuations();
     }
     return registry.isLastGeneration() ?
       getReferencedType() : this;
   }
+}
\ No newline at end of file
