diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/a19d7d0f-d41d-48e5-a149-be70a8c822db_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/f2779922-e9bb-4298-8ed3-c0bc4def44e9_fixed.java
index 4712376..6000e84 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/a19d7d0f-d41d-48e5-a149-be70a8c822db_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/f2779922-e9bb-4298-8ed3-c0bc4def44e9_fixed.java
@@ -1,64 +1,55 @@
     private Fraction(double value, double epsilon, int maxDenominator, int maxIterations)
         throws FractionConversionException
     {
         long overflow = Integer.MAX_VALUE;
         double r0 = value;
         long a0 = (long)FastMath.floor(r0);
+
         if (a0 > overflow) {
             throw new FractionConversionException(value, a0, 1l);
         }
-
-        // check for (almost) integer arguments, which should not go
-        // to iterations.
         if (FastMath.abs(a0 - value) < epsilon) {
             this.numerator = (int) a0;
             this.denominator = 1;
             return;
         }
-
         long p0 = 1;
         long q0 = 0;
         long p1 = a0;
         long q1 = 1;
-
         long p2 = 0;
         long q2 = 1;
-
         int n = 0;
         boolean stop = false;
         do {
             ++n;
             double r1 = 1.0 / (r0 - a0);
             long a1 = (long)FastMath.floor(r1);
             p2 = (a1 * p1) + p0;
             q2 = (a1 * q1) + q0;
             if ((p2 > overflow) || (q2 > overflow)) {
                 throw new FractionConversionException(value, p2, q2);
             }
-
             double convergent = (double)p2 / (double)q2;
             if (n < maxIterations && FastMath.abs(convergent - value) > epsilon && q2 < maxDenominator) {
                 p0 = p1;
                 p1 = p2;
                 q0 = q1;
                 q1 = q2;
                 a0 = a1;
                 r0 = r1;
             } else {
                 stop = true;
             }
         } while (!stop);
-
         if (n >= maxIterations) {
             throw new FractionConversionException(value, maxIterations);
         }
-
         if (q2 < maxDenominator) {
             this.numerator = (int) p2;
             this.denominator = (int) q2;
         } else {
             this.numerator = (int) p1;
             this.denominator = (int) q1;
         }
-
     }
\ No newline at end of file
