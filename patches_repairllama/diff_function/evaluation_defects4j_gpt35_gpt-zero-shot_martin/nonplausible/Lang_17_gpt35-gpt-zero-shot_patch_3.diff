diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/1a8d8f6e-31b1-44e3-8d14-b7090550aea4_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/28d9b130-9386-401e-8152-3bfba8353727_fixed.java
index 8cbef3b..9e1604c 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/1a8d8f6e-31b1-44e3-8d14-b7090550aea4_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/28d9b130-9386-401e-8152-3bfba8353727_fixed.java
@@ -1,30 +1,20 @@
     public final void translate(CharSequence input, Writer out) throws IOException {
         if (out == null) {
             throw new IllegalArgumentException("The Writer must not be null");
         }
         if (input == null) {
             return;
         }
         int pos = 0;
-        int len = Character.codePointCount(input, 0, input.length());
+        int len = input.length();
         while (pos < len) {
             int consumed = translate(input, pos, out);
             if (consumed == 0) {
                 char[] c = Character.toChars(Character.codePointAt(input, pos));
                 out.write(c);
-            }
-            else {
-//          // contract with translators is that they have to understand codepoints 
-//          // and they just took care of a surrogate pair
-            for (int pt = 0; pt < consumed; pt++) {
-                    if (pos < len - 2) {
-                pos += Character.charCount(Character.codePointAt(input, pos));
             } else {
-                        pos++;
-                    }
-                }
-                pos--;
+                pos += consumed;
             }
             pos++;
         }
     }
\ No newline at end of file
