diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/561e8535-8924-4d3a-88ff-7a1bb26a0341_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/bb6dfd78-b578-40a9-9f43-5acdc644877e_fixed.java
index 6656ad6..fa84879 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/561e8535-8924-4d3a-88ff-7a1bb26a0341_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/bb6dfd78-b578-40a9-9f43-5acdc644877e_fixed.java
@@ -1,36 +1,28 @@
-    private void init() {
-        thisYear= Calendar.getInstance(timeZone, locale).get(Calendar.YEAR);
-
-        nameValues= new ConcurrentHashMap<Integer, KeyValue[]>();
-
-        StringBuilder regex= new StringBuilder();
-        List<Strategy> collector = new ArrayList<Strategy>();
-
 Matcher patternMatcher= formatPattern.matcher(pattern);
-        if(!patternMatcher.lookingAt()) {
+if(!patternMatcher.find()) {
     throw new IllegalArgumentException("Invalid pattern");
 }
-
 currentFormatField= patternMatcher.group();
 Strategy currentStrategy= getStrategy(currentFormatField);
+
 for(;;) {
     patternMatcher.region(patternMatcher.end(), patternMatcher.regionEnd());
-            if(!patternMatcher.lookingAt()) {
+    if(!patternMatcher.find()) {
         nextStrategy = null;
         break;
     }
     String nextFormatField= patternMatcher.group();
     nextStrategy = getStrategy(nextFormatField);
     if(currentStrategy.addRegex(this, regex)) {
         collector.add(currentStrategy);
     }
     currentFormatField= nextFormatField;
     currentStrategy= nextStrategy;
 }
+
 if(currentStrategy.addRegex(this, regex)) {
     collector.add(currentStrategy);
 }
 currentFormatField= null;
 strategies= collector.toArray(new Strategy[collector.size()]);
 parsePattern= Pattern.compile(regex.toString());
\ No newline at end of file
-    }
