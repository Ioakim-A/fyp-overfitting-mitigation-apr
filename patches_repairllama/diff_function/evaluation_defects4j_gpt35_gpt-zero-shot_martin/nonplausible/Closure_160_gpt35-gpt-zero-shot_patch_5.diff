diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/ed4f3e97-e421-4c4d-a0f7-b766b1f46fb6_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/8a5460c0-2926-480f-a53b-9d00dc712ef1_fixed.java
index 6bce391..4828ca4 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/ed4f3e97-e421-4c4d-a0f7-b766b1f46fb6_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/8a5460c0-2926-480f-a53b-9d00dc712ef1_fixed.java
@@ -1,57 +1 @@
-  public void initOptions(CompilerOptions options) {
-    this.options = options;
-    if (errorManager == null) {
-      if (outStream == null) {
-        setErrorManager(
-            new LoggerErrorManager(createMessageFormatter(), logger));
-      } else {
-        PrintStreamErrorManager printer =
-            new PrintStreamErrorManager(createMessageFormatter(), outStream);
-        printer.setSummaryDetailLevel(options.summaryDetailLevel);
-        setErrorManager(printer);
-      }
-    }
-
-    // DiagnosticGroups override the plain checkTypes option.
-    if (options.enables(DiagnosticGroups.CHECK_TYPES)) {
-      options.checkTypes = true;
-    } else if (options.disables(DiagnosticGroups.CHECK_TYPES)) {
-      options.checkTypes = false;
-    } else if (!options.checkTypes) {
-      // If DiagnosticGroups did not override the plain checkTypes
-      // option, and checkTypes is enabled, then turn off the
-      // parser type warnings.
-      options.setWarningLevel(
-          DiagnosticGroup.forType(
-              RhinoErrorReporter.TYPE_PARSE_ERROR),
-          CheckLevel.OFF);
-    }
-
-    if (options.checkGlobalThisLevel.isOn()) {
-      options.setWarningLevel(
-          DiagnosticGroups.GLOBAL_THIS,
-          options.checkGlobalThisLevel);
-    }
-
-    // Initialize the warnings guard.
-    List<WarningsGuard> guards = Lists.newArrayList();
-    guards.add(
-        new SuppressDocWarningsGuard(
-            getDiagnosticGroups().getRegisteredGroups()));
-    guards.add(options.getWarningsGuard());
-
-
-    // All passes must run the variable check. This synthesizes
-    // variables later so that the compiler doesn't crash. It also
-    // checks the externs file for validity. If you don't want to warn
-    // about missing variable declarations, we shut that specific
-    // error off.
-    if (!options.checkSymbols &&
-        (warningsGuard == null || !warningsGuard.disables(
-            DiagnosticGroups.CHECK_VARIABLES))) {
-      guards.add(new DiagnosticGroupWarningsGuard(
-          DiagnosticGroups.CHECK_VARIABLES, CheckLevel.OFF));
-    }
-
-    this.warningsGuard = new ComposeWarningsGuard(guards);
-  }
+this.warningsGuard = ComposeWarningsGuard.compose(guards);
\ No newline at end of file
