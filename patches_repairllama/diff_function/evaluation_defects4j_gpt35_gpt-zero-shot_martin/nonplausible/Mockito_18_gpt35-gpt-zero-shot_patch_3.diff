diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/0c6cb968-03bb-4599-949d-171a5ae5fd73_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/62417325-17e6-4617-b83e-73a109c1700b_fixed.java
index 710fcc0..8f60755 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/0c6cb968-03bb-4599-949d-171a5ae5fd73_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/62417325-17e6-4617-b83e-73a109c1700b_fixed.java
@@ -1,37 +1,34 @@
 Object returnValueFor(Class<?> type) {
     if (Primitives.isPrimitiveOrWrapper(type)) {
         return Primitives.defaultValueForPrimitiveOrWrapper(type);
-            //new instances are used instead of Collections.emptyList(), etc.
-            //to avoid UnsupportedOperationException if code under test modifies returned collection
-        } else if (type == Collection.class) {
-            return new LinkedList<Object>();
-        } else if (type == Set.class) {
-            return new HashSet<Object>();
+    } else if (Collection.class.isAssignableFrom(type)) {
+        return new LinkedList<>();
+    } else if (Set.class.isAssignableFrom(type)) {
+        return new HashSet<>();
     } else if (type == HashSet.class) {
-            return new HashSet<Object>();
-        } else if (type == SortedSet.class) {
-            return new TreeSet<Object>();
+        return new HashSet<>();
+    } else if (SortedSet.class.isAssignableFrom(type)) {
+        return new TreeSet<>();
     } else if (type == TreeSet.class) {
-            return new TreeSet<Object>();
+        return new TreeSet<>();
     } else if (type == LinkedHashSet.class) {
-            return new LinkedHashSet<Object>();
-        } else if (type == List.class) {
-            return new LinkedList<Object>();
+        return new LinkedHashSet<>();
+    } else if (List.class.isAssignableFrom(type)) {
+        return new LinkedList<>();
     } else if (type == LinkedList.class) {
-            return new LinkedList<Object>();
+        return new LinkedList<>();
     } else if (type == ArrayList.class) {
-            return new ArrayList<Object>();
-        } else if (type == Map.class) {
-            return new HashMap<Object, Object>();
+        return new ArrayList<>();
+    } else if (Map.class.isAssignableFrom(type)) {
+        return new HashMap<>();
     } else if (type == HashMap.class) {
-            return new HashMap<Object, Object>();
-        } else if (type == SortedMap.class) {
-            return new TreeMap<Object, Object>();
+        return new HashMap<>();
+    } else if (SortedMap.class.isAssignableFrom(type)) {
+        return new TreeMap<>();
     } else if (type == TreeMap.class) {
-            return new TreeMap<Object, Object>();
+        return new TreeMap<>();
     } else if (type == LinkedHashMap.class) {
-            return new LinkedHashMap<Object, Object>();
+        return new LinkedHashMap<>();
     }
-        //Let's not care about the rest of collections.
     return null;
 }
\ No newline at end of file
