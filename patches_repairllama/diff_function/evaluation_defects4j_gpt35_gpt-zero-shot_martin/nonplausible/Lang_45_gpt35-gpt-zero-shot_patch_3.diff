diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/bf44e481-8d95-451e-9538-65d5b7f45bad_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/e607cdf3-e9d3-4249-9e3a-41d6af6ba0be_fixed.java
index 27c4e77..15dce7c 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/bf44e481-8d95-451e-9538-65d5b7f45bad_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/e607cdf3-e9d3-4249-9e3a-41d6af6ba0be_fixed.java
@@ -1,38 +1,29 @@
 public static String abbreviate(String str, int lower, int upper, String appendToEnd) {
-        // initial parameter checks
     if (str == null) {
         return null;
     }
     if (str.length() == 0) {
         return StringUtils.EMPTY;
     }
-
-        // if the lower value is greater than the length of the string,
-        // set to the length of the string
-        // if the upper value is -1 (i.e. no limit) or is greater
-        // than the length of the string, set to the length of the string
     if (upper == -1 || upper > str.length()) {
         upper = str.length();
     }
-        // if upper is less than lower, raise it to lower
     if (upper < lower) {
         upper = lower;
     }
-
     StringBuffer result = new StringBuffer();
     int index = StringUtils.indexOf(str, " ", lower);
     if (index == -1) {
         result.append(str.substring(0, upper));
-            // only if abbreviation has occured do we append the appendToEnd value
         if (upper != str.length()) {
             result.append(StringUtils.defaultString(appendToEnd));
         }
     } else if (index > upper) {
         result.append(str.substring(0, upper));
         result.append(StringUtils.defaultString(appendToEnd));
     } else {
         result.append(str.substring(0, index));
         result.append(StringUtils.defaultString(appendToEnd));
     }
     return result.toString();
 }
\ No newline at end of file
