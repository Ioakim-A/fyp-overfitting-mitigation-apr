diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/48271495-e9d6-4109-b282-f467c506753d_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/866bdc49-1c2d-47ed-a633-6df62e679f07_fixed.java
index aa64e1a..a235031 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/48271495-e9d6-4109-b282-f467c506753d_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/866bdc49-1c2d-47ed-a633-6df62e679f07_fixed.java
@@ -1,38 +1,30 @@
 void writePaxHeaders(String entryName,
                      Map<String, String> headers) throws IOException {
     String name = "./PaxHeaders.X/" + stripTo7Bits(entryName);
-            // TarEntry's constructor would think this is a directory
-            // and not allow any data to be written
     if (name.length() >= TarConstants.NAMELEN) {
         name = name.substring(0, TarConstants.NAMELEN - 1);
     }
     TarArchiveEntry pex = new TarArchiveEntry(name,
                                               TarConstants.LF_PAX_EXTENDED_HEADER_LC);
-
     StringWriter w = new StringWriter();
     for (Map.Entry<String, String> h : headers.entrySet()) {
         String key = h.getKey();
         String value = h.getValue();
         int len = key.length() + value.length()
-                + 3 /* blank, equals and newline */
-                + 2 /* guess 9 < actual length < 100 */;
+            + 3 
+            + 2 ;
         String line = len + " " + key + "=" + value + "\n";
-            int actualLength = line.getBytes(CharsetNames.UTF_8).length;
+        int actualLength = line.getBytes(StandardCharsets.UTF_8).length;
         while (len != actualLength) {
-                // Adjust for cases where length < 10 or > 100
-                // or where UTF-8 encoding isn't a single octet
-                // per character.
-                // Must be in loop as size may go from 99 to 100 in
-                // first pass so we'd need a second.
             len = actualLength;
             line = len + " " + key + "=" + value + "\n";
-                actualLength = line.getBytes(CharsetNames.UTF_8).length;
+            actualLength = line.getBytes(StandardCharsets.UTF_8).length;
         }
         w.write(line);
     }
-        byte[] data = w.toString().getBytes(CharsetNames.UTF_8);
+    byte[] data = w.toString().getBytes(StandardCharsets.UTF_8);
     pex.setSize(data.length);
     putArchiveEntry(pex);
     write(data);
     closeArchiveEntry();
 }
\ No newline at end of file
