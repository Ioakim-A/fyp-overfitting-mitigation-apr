diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/dc31fa87-3301-46b5-9f2b-623d5b6ff390_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/8bddb2c1-2f9a-46aa-96d4-514cc32da3b0_fixed.java
index 2081350..33e30b3 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/dc31fa87-3301-46b5-9f2b-623d5b6ff390_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/8bddb2c1-2f9a-46aa-96d4-514cc32da3b0_fixed.java
@@ -1,31 +1,2 @@
-    static Document parseByteData(ByteBuffer byteData, String charsetName, String baseUri, Parser parser) {
-        String docData;
-        Document doc = null;
-        if (charsetName == null) { // determine from meta. safe parse as UTF-8
-            // look for <meta http-equiv="Content-Type" content="text/html;charset=gb2312"> or HTML5 <meta charset="gb2312">
-            docData = Charset.forName(defaultCharset).decode(byteData).toString();
-            doc = parser.parseInput(docData, baseUri);
-            Element meta = doc.select("meta[http-equiv=content-type], meta[charset]").first();
-            if (meta != null) { // if not found, will keep utf-8 as best attempt
-                String foundCharset = meta.hasAttr("http-equiv") ? getCharsetFromContentType(meta.attr("content")) : meta.attr("charset");
-                if (foundCharset != null && foundCharset.length() != 0 && !foundCharset.equals(defaultCharset)) { // need to re-decode
-                    charsetName = foundCharset;
-                    byteData.rewind();
-                    docData = Charset.forName(foundCharset).decode(byteData).toString();
-                    doc = null;
-                }
-            }
-        } else { // specified by content type header (or by user on file load)
-            Validate.notEmpty(charsetName, "Must set charset arg to character set of file to parse. Set to null to attempt to detect from HTML");
-            docData = Charset.forName(charsetName).decode(byteData).toString();
-        }
-        if (doc == null) {
-            // there are times where there is a spurious byte-order-mark at the start of the text. Shouldn't be present
-            // in utf-8. If after decoding, there is a BOM, strip it; otherwise will cause the parser to go straight
-            // into head mode
-
 doc = parser.parseInput(docData, baseUri);
 doc.outputSettings().charset(charsetName);
\ No newline at end of file
-        }
-        return doc;
-    }
