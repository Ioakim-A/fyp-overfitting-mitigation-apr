diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/39b4a41a-72ea-4757-aa3f-3206eb2b8235_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/79f5bb62-e636-4a71-b9e5-956ef3cb2193_fixed.java
index 3840a76..19d17ad 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/39b4a41a-72ea-4757-aa3f-3206eb2b8235_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/79f5bb62-e636-4a71-b9e5-956ef3cb2193_fixed.java
@@ -1,29 +1,22 @@
 JSType resolveInternal(ErrorReporter t, StaticScope<JSType> enclosing) {
-    // TODO(user): Investigate whether it is really necessary to keep two
-    // different mechanisms for resolving named types, and if so, which order
-    // makes more sense. Now, resolution via registry is first in order to
-    // avoid triggering the warnings built into the resolution via properties.
   boolean resolved = resolveViaRegistry(t, enclosing);
   if (detectImplicitPrototypeCycle()) {
     handleTypeCycle(t);
-    }
-
     if (resolved) {
       super.resolveInternal(t, enclosing);
       finishPropertyContinuations();
       return registry.isLastGeneration() ?
           getReferencedType() : this;
     }
-
+  }
   resolveViaProperties(t, enclosing);
   if (detectImplicitPrototypeCycle()) {
     handleTypeCycle(t);
   }
-
   super.resolveInternal(t, enclosing);
   if (isResolved()) {
     finishPropertyContinuations();
   }
   return registry.isLastGeneration() ?
       getReferencedType() : this;
 }
\ No newline at end of file
