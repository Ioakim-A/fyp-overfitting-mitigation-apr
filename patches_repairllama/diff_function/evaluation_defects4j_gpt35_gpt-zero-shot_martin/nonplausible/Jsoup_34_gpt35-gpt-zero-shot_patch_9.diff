diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/0cc4e25d-aab3-497f-9c07-821a5449d773_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/b6b635e7-88a4-4f13-943f-2b4d3596baa8_fixed.java
index 3ea5b43..9c3b167 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/0cc4e25d-aab3-497f-9c07-821a5449d773_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/b6b635e7-88a4-4f13-943f-2b4d3596baa8_fixed.java
@@ -1,17 +1,15 @@
     int nextIndexOf(CharSequence seq) {
-        // doesn't handle scanning for surrogates
         char startChar = seq.charAt(0);
         for (int offset = pos; offset < length; offset++) {
-            // scan to first instance of startchar:
             if (startChar != input[offset])
                 while(++offset < length && startChar != input[offset]);
             int i = offset + 1;
             int last = i + seq.length()-1;
-            if (offset < length) {
-                for (int j = 1; i < last && seq.charAt(j) == input[i]; i++, j++);
-                if (i == last) // found full sequence
+            if (i <= length) { // Change condition to i <= length
+                for (int j = 1; i <= last && seq.charAt(j) == input[i]; i++, j++); // Change condition to i <= last
+                if (i == last) 
                     return offset - pos;
             }
         }
         return -1;
     }
\ No newline at end of file
