diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/0768e855-12de-40fc-9445-520f34399f65_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/dc7086bc-09b2-42f3-8160-6c9659686f7d_fixed.java
index d7b8fbd..e78af4c 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/0768e855-12de-40fc-9445-520f34399f65_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/dc7086bc-09b2-42f3-8160-6c9659686f7d_fixed.java
@@ -1,59 +1,15 @@
-    protected String[] flatten(Options options, String[] arguments, boolean stopAtNonOption)
-    {
-        List tokens = new ArrayList();
-
-        boolean eatTheRest = false;
-
-        for (int i = 0; i < arguments.length; i++)
-        {
-            String arg = arguments[i];
-
-            if ("--".equals(arg))
-            {
-                eatTheRest = true;
-                tokens.add("--");
-            }
-            else if ("-".equals(arg))
-            {
-                tokens.add("-");
-            }
-            else if (arg.startsWith("-"))
-            {
-                String opt = Util.stripLeadingHyphens(arg);
-
-                if (options.hasOption(opt))
-                {
-                    tokens.add(arg);
-                }
-                else
-                {
     if (options.hasOption(arg.substring(0, 2)))
     {
-                        // the format is --foo=value or -foo=value
-                        // the format is a special properties option (-Dproperty=value)
-                        tokens.add(arg.substring(0, 2)); // -D
-                        tokens.add(arg.substring(2)); // property=value
+        tokens.add(arg.substring(0, 2)); 
+        tokens.add(arg.substring(2)); 
+    }
+    else if (options.hasOption(arg.substring(0, 1)))
+    {
+        tokens.add(arg.substring(0, 1)); 
+        tokens.add(arg.substring(1));
     }
     else
     {
         eatTheRest = stopAtNonOption;
         tokens.add(arg);
     }
\ No newline at end of file
-                }
-            }
-            else
-            {
-                tokens.add(arg);
-            }
-
-            if (eatTheRest)
-            {
-                for (i++; i < arguments.length; i++)
-                {
-                    tokens.add(arguments[i]);
-                }
-            }
-        }
-
-        return (String[]) tokens.toArray(new String[tokens.size()]);
-    }
