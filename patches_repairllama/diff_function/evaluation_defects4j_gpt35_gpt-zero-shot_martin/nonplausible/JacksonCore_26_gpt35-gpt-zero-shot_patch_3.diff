diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/a4f6cc8a-2dee-40aa-9688-1e667f977afd_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/cbdc92c8-be29-47b6-b81a-2ff992abd04a_fixed.java
index 7af3068..4d003d7 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/a4f6cc8a-2dee-40aa-9688-1e667f977afd_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/cbdc92c8-be29-47b6-b81a-2ff992abd04a_fixed.java
@@ -1,25 +1,19 @@
     public void feedInput(byte[] buf, int start, int end) throws IOException
     {
-        // Must not have remaining input
         if (_inputPtr < _inputEnd) {
             _reportError("Still have %d undecoded bytes, should not call 'feedInput'", _inputEnd - _inputPtr);
         }
         if (end < start) {
             _reportError("Input end (%d) may not be before start (%d)", end, start);
         }
-        // and shouldn't have been marked as end-of-input
         if (_endOfInput) {
             _reportError("Already closed, can not feed more input");
         }
-        // Time to update pointers first
         _currInputProcessed += _origBufferLen;
-
-        // Also need to adjust row start, to work as if it extended into the past wrt new buffer
         _currInputRowStart = start - (_inputEnd - _currInputRowStart);
-
-        // And then update buffer settings
-        _inputBuffer = buf;
-        _inputPtr = start;
-        _inputEnd = end;
+        _inputBuffer = new byte[end - start];
+        System.arraycopy(buf, start, _inputBuffer, 0, end - start);
+        _inputPtr = 0;
+        _inputEnd = end - start;
         _origBufferLen = end - start;
     }
\ No newline at end of file
