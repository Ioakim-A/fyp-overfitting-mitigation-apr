diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/a01b20b2-4f90-4747-86cb-7bcf020eb7fd_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/140c64d7-9458-4226-ba93-a7e22e7a14b7_fixed.java
index 4aff4e4..6bae962 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/a01b20b2-4f90-4747-86cb-7bcf020eb7fd_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/140c64d7-9458-4226-ba93-a7e22e7a14b7_fixed.java
@@ -1,15 +1,11 @@
-    private boolean testValidProtocol(Element el, Attribute attr, Set<Protocol> protocols) {
-        // try to resolve relative urls to abs, and optionally update the attribute so output html has abs.
-        // rels without a baseuri get removed
-        String value = el.absUrl(attr.getKey());
-        if (!preserveRelativeLinks)
-            attr.setValue(value);
-        
-        for (Protocol protocol : protocols) {
-            String prot = protocol.toString() + ":";
-            if (value.toLowerCase().startsWith(prot)) {
+URL url;
+try {
+    url = new URL(value);
+    if (protocols.contains(Protocol.valueOf(url.getProtocol().toUpperCase()))) {
         return true;
     }
+} catch (MalformedURLException e) {
+    // Handle exception
 }
+
 return false;
\ No newline at end of file
-    }
