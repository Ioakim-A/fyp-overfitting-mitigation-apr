diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/be7b8bfb-f64d-4ab7-a9b7-651f0c6ae3f6_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/b23973ae-7f2d-482c-a68d-9746040f9dac_fixed.java
index dc93be3..f42bfb6 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/be7b8bfb-f64d-4ab7-a9b7-651f0c6ae3f6_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/b23973ae-7f2d-482c-a68d-9746040f9dac_fixed.java
@@ -1,14 +1 @@
-    Element insert(Token.StartTag startTag) {
-        // handle empty unknown tags
-        // when the spec expects an empty tag, will directly hit insertEmpty, so won't generate this fake end tag.
-        if (startTag.isSelfClosing()) {
-            Element el = insertEmpty(startTag);
 stack.add(el);
\ No newline at end of file
-            tokeniser.emit(new Token.EndTag(el.tagName()));  // ensure we get out of whatever state we are in. emitted for yielded processing
-            return el;
-        }
-        
-        Element el = new Element(Tag.valueOf(startTag.name()), baseUri, startTag.attributes);
-        insert(el);
-        return el;
-    }
