diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/8fd8baed-7e9c-463b-acd5-4817ff02f779_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/42287969-2529-4179-9688-af36c7a8b42a_fixed.java
index a66e5f8..86fadc2 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/8fd8baed-7e9c-463b-acd5-4817ff02f779_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/42287969-2529-4179-9688-af36c7a8b42a_fixed.java
@@ -1,44 +1,25 @@
 protected StringBuffer renderWrappedText(StringBuffer sb, int width,
-                                             int nextLineTabStop, String text)
-    {
+                                         int nextLineTabStop, String text) {
     int pos = findWrapPos(text, width, 0);
-
-        if (pos == -1)
-        {
+    if (pos == -1) {
         sb.append(rtrim(text));
-
         return sb;
     }
     sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
-
-        if (nextLineTabStop >= width)
-        {
-            // stops infinite loop happening
-            throw new IllegalStateException("Total width is less than the width of the argument and indent " +
-                                            "- no room for the description");
+    if (nextLineTabStop >= width) {
+        throw new IllegalArgumentException("Next line tab stop cannot be greater than or equal to the width");
     }
-
-        // all following lines must be padded with nextLineTabStop space 
-        // characters
     final String padding = createPadding(nextLineTabStop);
-
-        while (true)
-        {
+    while (true) {
         text = padding + text.substring(pos).trim();
         pos = findWrapPos(text, width, 0);
-
-            if (pos == -1)
-            {
+        if (pos == -1) {
             sb.append(text);
-
             return sb;
         }
-            
-            if ( (text.length() > width) && (pos == nextLineTabStop - 1) ) 
-            {
+        if ((text.length() > width) && (pos == nextLineTabStop - 1)) {
             pos = width;
         }
-
         sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
     }
 }
\ No newline at end of file
