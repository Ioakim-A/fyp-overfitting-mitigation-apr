diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/9ade36d3-2c4c-4d04-8e3b-d6294e2d72fc_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/9d4a95d0-696b-4b2a-9907-9e5d90ff5312_fixed.java
index 89df533..3fa673a 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/9ade36d3-2c4c-4d04-8e3b-d6294e2d72fc_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/9d4a95d0-696b-4b2a-9907-9e5d90ff5312_fixed.java
@@ -1,67 +1 @@
-    public TarArchiveEntry getNextTarEntry() throws IOException {
-        if (hasHitEOF) {
-            return null;
-        }
-
-        if (currEntry != null) {
-            long numToSkip = entrySize - entryOffset;
-
-            while (numToSkip > 0) {
-                long skipped = skip(numToSkip);
-                if (skipped <= 0) {
-                    throw new RuntimeException("failed to skip current tar entry");
-                }
-                numToSkip -= skipped;
-            }
-
-            readBuf = null;
-        }
-
-        byte[] headerBuf = getRecord();
-
-        if (hasHitEOF) {
-            currEntry = null;
-            return null;
-        }
-
 currEntry = new TarArchiveEntry(headerBuf);
\ No newline at end of file
-        entryOffset = 0;
-        entrySize = currEntry.getSize();
-
-        if (currEntry.isGNULongNameEntry()) {
-            // read in the name
-            StringBuffer longName = new StringBuffer();
-            byte[] buf = new byte[SMALL_BUFFER_SIZE];
-            int length = 0;
-            while ((length = read(buf)) >= 0) {
-                longName.append(new String(buf, 0, length));
-            }
-            getNextEntry();
-            if (currEntry == null) {
-                // Bugzilla: 40334
-                // Malformed tar file - long entry name not followed by entry
-                return null;
-            }
-            // remove trailing null terminator
-            if (longName.length() > 0
-                && longName.charAt(longName.length() - 1) == 0) {
-                longName.deleteCharAt(longName.length() - 1);
-            }
-            currEntry.setName(longName.toString());
-        }
-
-        if (currEntry.isPaxHeader()){ // Process Pax headers
-            paxHeaders();
-        }
-
-        if (currEntry.isGNUSparse()){ // Process sparse files
-            readGNUSparse();
-        }
-
-        // If the size of the next element in the archive has changed
-        // due to a new size being reported in the posix header
-        // information, we update entrySize here so that it contains
-        // the correct value.
-        entrySize = currEntry.getSize();
-        return currEntry;
-    }
