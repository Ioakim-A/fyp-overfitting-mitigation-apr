diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/ad6e24dc-d91c-4845-910f-a7a3114f5787_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/fba8ac10-7c62-4dae-aa19-129a3653c107_fixed.java
index dc93be3..b5e4734 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/ad6e24dc-d91c-4845-910f-a7a3114f5787_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/fba8ac10-7c62-4dae-aa19-129a3653c107_fixed.java
@@ -1,14 +1,11 @@
 Element insert(Token.StartTag startTag) {
-        // handle empty unknown tags
-        // when the spec expects an empty tag, will directly hit insertEmpty, so won't generate this fake end tag.
     if (startTag.isSelfClosing()) {
         Element el = insertEmpty(startTag);
         stack.add(el);
-            tokeniser.emit(new Token.EndTag(el.tagName()));  // ensure we get out of whatever state we are in. emitted for yielded processing
+        tokeniser.emit(new Token.EndTag(el.tagName()));  
         return el;
     }
-        
     Element el = new Element(Tag.valueOf(startTag.name()), baseUri, startTag.attributes);
     insert(el);
     return el;
 }
\ No newline at end of file
