diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/22cd73f1-15ab-4705-a17b-25c8744c3b06_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/5adca140-f75c-4c10-969b-416daa602d25_fixed.java
index 3110cf7..839e77b 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/22cd73f1-15ab-4705-a17b-25c8744c3b06_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/5adca140-f75c-4c10-969b-416daa602d25_fixed.java
@@ -1,26 +1,25 @@
       public boolean apply(Node n) {
-        // When the node is null it means, we reached the implicit return
-        // where the function returns (possibly without an return statement)
         if (n == null) {
           return false;
         }
-
-        // TODO(user): We only care about calls to functions that
-        // passes one of the dependent variable to a non-side-effect free
-        // function.
         if (n.isCall() && NodeUtil.functionCallHasSideEffects(n)) {
           return true;
         }
-
         if (n.isNew() && NodeUtil.constructorCallHasSideEffects(n)) {
           return true;
         }
         
-
+        if (n.isFunction()) {
+          if (NodeUtil.mayHaveSideEffects(n)) {
+            return true;
+          }
+          // Recursively check the children of the function node
           for (Node c = n.getFirstChild(); c != null; c = c.getNext()) {
             if (!ControlFlowGraph.isEnteringNewCfgNode(c) && apply(c)) {
               return true;
             }
           }
+        }
+        
         return false;
       }
\ No newline at end of file
