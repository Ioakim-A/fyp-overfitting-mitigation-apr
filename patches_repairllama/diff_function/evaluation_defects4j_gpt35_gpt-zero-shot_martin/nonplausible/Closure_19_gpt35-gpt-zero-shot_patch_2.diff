diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/add65ded-84fd-4cb5-9742-f7491533fd71_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/8e89d421-6fcd-4a55-9478-4ae6cb3f204c_fixed.java
index 42b7715..9e0a5a1 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/add65ded-84fd-4cb5-9742-f7491533fd71_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/8e89d421-6fcd-4a55-9478-4ae6cb3f204c_fixed.java
@@ -1,22 +1,14 @@
-  protected void declareNameInScope(FlowScope scope, Node node, JSType type) {
-    switch (node.getType()) {
-      case Token.NAME:
-        scope.inferSlotType(node.getString(), type);
-        break;
-
-      case Token.GETPROP:
-        String qualifiedName = node.getQualifiedName();
-        Preconditions.checkNotNull(qualifiedName);
-
-        JSType origType = node.getJSType();
-        origType = origType == null ? getNativeType(UNKNOWN_TYPE) : origType;
-        scope.inferQualifiedSlot(node, qualifiedName, origType, type);
-        break;
-
-        // "this" references aren't currently modeled in the CFG.
-
-      default:
-        throw new IllegalArgumentException("Node cannot be refined. \n" +
-            node.toStringTree());
+      // Fix for the bug
+      case Token.GETELEM:
+        Node left = node.getFirstChild();
+        Node right = left.getNext();
+        JSType objType = left.getJSType();
+        JSType indexType = right.getJSType();
+        if (objType == null) {
+          objType = getNativeType(UNKNOWN_TYPE);
         }
+        if (indexType == null) {
+          indexType = getNativeType(UNKNOWN_TYPE);
         }
+        scope.inferQualifiedSlot(node, objType, indexType, type);
+        break;
\ No newline at end of file
