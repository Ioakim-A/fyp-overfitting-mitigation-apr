diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/02e2a08e-22bf-40eb-9c2e-ab6d2067f5dc_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/63b3818b-545b-42fc-9d2e-b7093f7ccf8d_fixed.java
index 50cbfb2..1b344b8 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/02e2a08e-22bf-40eb-9c2e-ab6d2067f5dc_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/63b3818b-545b-42fc-9d2e-b7093f7ccf8d_fixed.java
@@ -1,39 +1,16 @@
-    protected void iterateSimplex(final Comparator<RealPointValuePair> comparator)
-        throws FunctionEvaluationException, OptimizationException, IllegalArgumentException {
-
-        while (true) {
-
         incrementIterationsCounter();
-
-            // save the original vertex
         final RealPointValuePair[] original = simplex;
         final RealPointValuePair best = original[0];
-
-            // perform a reflection step
         final RealPointValuePair reflected = evaluateNewSimplex(original, 1.0, comparator);
         if (comparator.compare(reflected, best) < 0) {
-
-                // compute the expanded simplex
             final RealPointValuePair[] reflectedSimplex = simplex;
             final RealPointValuePair expanded = evaluateNewSimplex(original, khi, comparator);
             if (comparator.compare(reflected, expanded) <= 0) {
-                    // accept the reflected simplex
                 simplex = reflectedSimplex;
             }
-
             return;
-
         }
-
-            // compute the contracted simplex
         final RealPointValuePair contracted = evaluateNewSimplex(original, gamma, comparator);
         if (comparator.compare(contracted, best) < 0) {
-                // accept the contracted simplex
-
-            // check convergence
             return;
         }
\ No newline at end of file
-
-        }
-
-    }
