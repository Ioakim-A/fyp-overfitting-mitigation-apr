diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/cbd53bad-4d5a-4d17-8da6-7d3a29ad2e43_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/ec13d4ea-617c-4b3f-9138-b140a26e608d_fixed.java
index 9f14d90..b2b2c2f 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/cbd53bad-4d5a-4d17-8da6-7d3a29ad2e43_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/ec13d4ea-617c-4b3f-9138-b140a26e608d_fixed.java
@@ -1,20 +1,12 @@
 private void annotateCalls(Node n) {
   Preconditions.checkState(n.isCall());
-
-      // Keep track of of the "this" context of a call.  A call without an
-      // explicit "this" is a free call.
   Node first = n.getFirstChild();
 
-      // ignore cast nodes.
-
   if (!NodeUtil.isGet(first)) {
     n.putBooleanProp(Node.FREE_CALL, true);
   }
-
-      // Keep track of the context in which eval is called. It is important
-      // to distinguish between "(0, eval)()" and "eval()".
   if (first.isName() &&
       "eval".equals(first.getString())) {
     first.putBooleanProp(Node.DIRECT_EVAL, true);
   }
 }
\ No newline at end of file
