diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/4727cab5-0ba7-4dba-a381-059367c8f015_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/1741c95a-06eb-4b31-a523-c62a96580f9d_fixed.java
index 9dbd4e4..0742365 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/4727cab5-0ba7-4dba-a381-059367c8f015_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/1741c95a-06eb-4b31-a523-c62a96580f9d_fixed.java
@@ -1,18 +1,17 @@
 public double chiSquare(double[] expected, long[] observed)
     throws IllegalArgumentException {
     if ((expected.length < 2) || (expected.length != observed.length)) {
         throw new IllegalArgumentException(
                 "observed, expected array lengths incorrect");
     }
     if (!isPositive(expected) || !isNonNegative(observed)) {
         throw new IllegalArgumentException(
-                "observed counts must be non-negative and expected counts must be postive");
+            "observed counts must be non-negative and expected counts must be positive");
     }
     double sumSq = 0.0d;
-        double dev = 0.0d;
     for (int i = 0; i < observed.length; i++) {
-                dev = ((double) observed[i] - expected[i]);
-                sumSq += dev * dev / expected[i];
+        double dev = ((double) observed[i] - expected[i]);
+        sumSq += (dev * dev) / expected[i];
     }
     return sumSq;
 }
\ No newline at end of file
