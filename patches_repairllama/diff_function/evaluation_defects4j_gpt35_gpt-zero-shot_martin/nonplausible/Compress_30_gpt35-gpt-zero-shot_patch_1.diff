diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/53db942b-ad3a-4df7-9247-e33c1fc5c5ea_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/38cdd707-7b61-401d-8be9-35c921cb805d_fixed.java
index 20d45d1..c4949a4 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/53db942b-ad3a-4df7-9247-e33c1fc5c5ea_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/38cdd707-7b61-401d-8be9-35c921cb805d_fixed.java
@@ -1,27 +1,9 @@
-    public int read(final byte[] dest, final int offs, final int len)
-        throws IOException {
-        if (offs < 0) {
-            throw new IndexOutOfBoundsException("offs(" + offs + ") < 0.");
-        }
-        if (len < 0) {
-            throw new IndexOutOfBoundsException("len(" + len + ") < 0.");
-        }
-        if (offs + len > dest.length) {
-            throw new IndexOutOfBoundsException("offs(" + offs + ") + len("
-                                                + len + ") > dest.length(" + dest.length + ").");
-        }
-        if (this.in == null) {
-            throw new IOException("stream closed");
-        }
-
-        final int hi = offs + len;
+        int bytesRead = 0;
         int destOffs = offs;
         int b;
-        while (destOffs < hi && ((b = read0()) >= 0)) {
+        while (destOffs < offs + len && ((b = read0()) >= 0)) {
             dest[destOffs++] = (byte) b;
-            count(1);
+            bytesRead++;
         }
-
-        int c = (destOffs == offs) ? -1 : (destOffs - offs);
+        int c = (bytesRead == 0) ? -1 : bytesRead;
         return c;
\ No newline at end of file
-    }
