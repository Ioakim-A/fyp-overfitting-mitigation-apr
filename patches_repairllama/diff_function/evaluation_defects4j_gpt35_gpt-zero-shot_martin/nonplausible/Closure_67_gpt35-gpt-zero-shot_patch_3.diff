diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/9984ee02-09e7-49be-9406-72548eda1a94_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/0d99e085-2622-4206-b303-0cabcc63e903_fixed.java
index 939f49b..d309139 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/9984ee02-09e7-49be-9406-72548eda1a94_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/0d99e085-2622-4206-b303-0cabcc63e903_fixed.java
@@ -1,21 +1,11 @@
 private boolean isPrototypePropertyAssign(Node assign) {
   Node n = assign.getFirstChild();
   if (n != null && NodeUtil.isVarOrSimpleAssignLhs(n, assign)
       && n.getType() == Token.GETPROP
-          ) {
-        // We want to exclude the assignment itself from the usage list
-        boolean isChainedProperty =
-            n.getFirstChild().getType() == Token.GETPROP;
-
-        if (isChainedProperty) {
-          Node child = n.getFirstChild().getFirstChild().getNext();
-
-          if (child.getType() == Token.STRING &&
-              child.getString().equals("prototype")) {
+      && n.getFirstChild().getType() == Token.GETPROP
+      && n.getFirstChild().getFirstChild().getNext().getType() == Token.STRING
+      && n.getFirstChild().getFirstChild().getNext().getString().equals("prototype")) {
     return true;
   }
-        }
-      }
-
   return false;
 }
\ No newline at end of file
