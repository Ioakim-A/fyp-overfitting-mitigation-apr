diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/34544388-8e19-4cc8-af21-04f293af2f2a_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/a1f2aac3-b7b8-4c3f-a07c-36fed118380c_fixed.java
index 511560e..a525207 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/34544388-8e19-4cc8-af21-04f293af2f2a_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/a1f2aac3-b7b8-4c3f-a07c-36fed118380c_fixed.java
@@ -1,21 +1,20 @@
 private boolean inSpecificScope(String[] targetNames, String[] baseTypes, String[] extraTypes) {
-        // https://html.spec.whatwg.org/multipage/parsing.html#has-an-element-in-the-specific-scope
     int bottom = stack.size() - 1;
     if (bottom > MaxScopeSearchDepth) {
         bottom = MaxScopeSearchDepth;
     }
-        final int top = bottom > MaxScopeSearchDepth ? bottom - MaxScopeSearchDepth : 0;
-        // don't walk too far up the tree
-
+    int top = Math.max(bottom - MaxScopeSearchDepth, 0);
     for (int pos = bottom; pos >= top; pos--) {
-            final String elName = stack.get(pos).nodeName();
-            if (inSorted(elName, targetNames))
+        String elName = stack.get(pos).nodeName();
+        if (inSorted(elName, targetNames)) {
             return true;
-            if (inSorted(elName, baseTypes))
+        }
+        if (inSorted(elName, baseTypes)) {
             return false;
-            if (extraTypes != null && inSorted(elName, extraTypes))
+        }
+        if (extraTypes != null && inSorted(elName, extraTypes)) {
             return false;
         }
-        //Validate.fail("Should not be reachable"); // would end up false because hitting 'html' at root (basetypes)
+    }
     return false;
 }
\ No newline at end of file
