diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/7686a6e0-cb85-4b31-8898-8890c81c6589_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/46075447-26a1-4721-9797-602b7a83f7ee_fixed.java
index 671037f..c20275f 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/7686a6e0-cb85-4b31-8898-8890c81c6589_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/46075447-26a1-4721-9797-602b7a83f7ee_fixed.java
@@ -1,36 +1,32 @@
 private Map<String, Integer> initializeHeader() throws IOException {
     Map<String, Integer> hdrMap = null;
     final String[] formatHeader = this.format.getHeader();
     if (formatHeader != null) {
         hdrMap = new LinkedHashMap<String, Integer>();
-
         String[] headerRecord = null;
         if (formatHeader.length == 0) {
-                // read the header from the first line of the file
             final CSVRecord nextRecord = this.nextRecord();
             if (nextRecord != null) {
                 headerRecord = nextRecord.values();
             }
         } else {
             if (this.format.getSkipHeaderRecord()) {
                 this.nextRecord();
             }
             headerRecord = formatHeader;
         }
-
-            // build the name to index mappings
         if (headerRecord != null) {
             for (int i = 0; i < headerRecord.length; i++) {
                 final String header = headerRecord[i];
                 final boolean containsHeader = hdrMap.containsKey(header);
-                    final boolean emptyHeader = header.trim().isEmpty();
+                final boolean emptyHeader = header == null || header.trim().isEmpty();
                 if (containsHeader && (!emptyHeader || (emptyHeader && !this.format.getIgnoreEmptyHeaders()))) {
                     throw new IllegalArgumentException("The header contains a duplicate name: \"" + header +
                             "\" in " + Arrays.toString(headerRecord));
                 }
                 hdrMap.put(header, Integer.valueOf(i));
             }
         }
     }
     return hdrMap;
 }
\ No newline at end of file
