diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/82cd125c-ab42-4add-b6a9-c64bda6d0014_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/7003c852-9679-4abf-adc6-b48fe63b7412_fixed.java
index a4d475d..167db0f 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/82cd125c-ab42-4add-b6a9-c64bda6d0014_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/7003c852-9679-4abf-adc6-b48fe63b7412_fixed.java
@@ -1,19 +1,14 @@
   private void visitGetProp(NodeTraversal t, Node n, Node parent) {
-    // obj.prop or obj.method()
-    // Lots of types can appear on the left, a call to a void function can
-    // never be on the left. getPropertyType will decide what is acceptable
-    // and what isn't.
     Node property = n.getLastChild();
     Node objNode = n.getFirstChild();
     JSType childType = getJSType(objNode);
-
     if (childType.isDict()) {
       report(t, property, TypeValidator.ILLEGAL_PROPERTY_ACCESS, "'.'", "dict");
-    } else if (n.getJSType() != null && parent.isAssign()) {
+    } else if (n.getJSType() != null && parent == null) {
       return;
     } else if (validator.expectNotNullOrUndefined(t, n, childType,
         "No properties on this expression", getNativeType(OBJECT_TYPE))) {
       checkPropertyAccess(childType, property.getString(), t, n);
     }
     ensureTyped(t, n);
   }
\ No newline at end of file
