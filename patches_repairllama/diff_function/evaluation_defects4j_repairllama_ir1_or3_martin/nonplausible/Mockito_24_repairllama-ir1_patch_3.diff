diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/6c9d86a4-61ea-4b05-be1d-175ff8b63529_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/189ebd1c-21bd-42b0-a78e-c35d54ecf8d7_fixed.java
index 654abbf..8f06d9e 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/6c9d86a4-61ea-4b05-be1d-175ff8b63529_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/189ebd1c-21bd-42b0-a78e-c35d54ecf8d7_fixed.java
@@ -1,19 +1,10 @@
     public Object answer(InvocationOnMock invocation) {
         if (methodsGuru.isToString(invocation.getMethod())) {
             Object mock = invocation.getMock();
-            MockName name = mockUtil.getMockName(mock);
-            if (name.isDefault()) {
             return "Mock for " + mockUtil.getMockSettings(mock).getTypeToMock().getSimpleName() + ", hashCode: " + mock.hashCode();
-            } else {
-                return name.toString();
-            }
         } else if (methodsGuru.isCompareToMethod(invocation.getMethod())) {
-            //see issue 184.
-            //mocks by default should return 0 if references are the same, otherwise some other value because they are not the same. Hence we return 1 (anything but 0 is good).
-            //Only for compareTo() method by the Comparable interface
             return 1;
         }
-        
         Class<?> returnType = invocation.getMethod().getReturnType();
         return returnValueFor(returnType);
     }
