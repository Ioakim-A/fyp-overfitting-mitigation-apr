diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/f8ecf78a-ce04-40dc-8fcb-817e98a86850_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/82c043e4-ed53-464e-9210-484b73ddaaff_fixed.java
index dde7e35..257a837 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/f8ecf78a-ce04-40dc-8fcb-817e98a86850_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/82c043e4-ed53-464e-9210-484b73ddaaff_fixed.java
@@ -1,19 +1,18 @@
   static TypeAdapter<?> getTypeAdapter(ConstructorConstructor constructorConstructor, Gson gson,
       TypeToken<?> fieldType, JsonAdapter annotation) {
     Class<?> value = annotation.value();
-    TypeAdapter<?> typeAdapter;
+    TypeAdapter<?> typeAdapter = null;
     if (TypeAdapter.class.isAssignableFrom(value)) {
       Class<TypeAdapter<?>> typeAdapterClass = (Class<TypeAdapter<?>>) value;
       typeAdapter = constructorConstructor.get(TypeToken.get(typeAdapterClass)).construct();
     } else if (TypeAdapterFactory.class.isAssignableFrom(value)) {
       Class<TypeAdapterFactory> typeAdapterFactory = (Class<TypeAdapterFactory>) value;
       typeAdapter = constructorConstructor.get(TypeToken.get(typeAdapterFactory))
-          .construct()
-          .create(gson, fieldType);
+          .construct().create(gson, fieldType);
     } else {
       throw new IllegalArgumentException(
           "@JsonAdapter value must be TypeAdapter or TypeAdapterFactory reference.");
     }
       typeAdapter = typeAdapter.nullSafe();
     return typeAdapter;
   }
