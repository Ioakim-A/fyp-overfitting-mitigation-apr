diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/65211198-6d0b-4744-ae6d-2c868bdc75a8_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/d4249f99-551e-40e4-9fb9-48b727752483_fixed.java
index dc93be3..d8fb89a 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/65211198-6d0b-4744-ae6d-2c868bdc75a8_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/d4249f99-551e-40e4-9fb9-48b727752483_fixed.java
@@ -1,14 +1,8 @@
     Element insert(Token.StartTag startTag) {
-        // handle empty unknown tags
-        // when the spec expects an empty tag, will directly hit insertEmpty, so won't generate this fake end tag.
         if (startTag.isSelfClosing()) {
             Element el = insertEmpty(startTag);
-            stack.add(el);
-            tokeniser.emit(new Token.EndTag(el.tagName()));  // ensure we get out of whatever state we are in. emitted for yielded processing
+            tokeniser.emit(new Token.EndTag(el.tagName()));  
             return el;
         }
-        
-        Element el = new Element(Tag.valueOf(startTag.name()), baseUri, startTag.attributes);
-        insert(el);
-        return el;
+        return insert(startTag);
     }
