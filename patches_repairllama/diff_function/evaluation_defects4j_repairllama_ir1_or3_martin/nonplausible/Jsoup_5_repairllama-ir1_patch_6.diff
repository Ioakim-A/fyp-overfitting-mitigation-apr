diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/8dc82a59-a56f-4a46-ad52-ef82ab537f88_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/ee028fae-9127-460d-8507-bff069a77095_fixed.java
index 39dd8e7..e9825a8 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/8dc82a59-a56f-4a46-ad52-ef82ab537f88_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/ee028fae-9127-460d-8507-bff069a77095_fixed.java
@@ -1,30 +1,27 @@
     private Attribute parseAttribute() {
-        tq.consumeWhitespace();
         String key = tq.consumeAttributeKey();
         String value = "";
         tq.consumeWhitespace();
+        tq.consumeWhitespace();
         if (tq.matchChomp("=")) {
             tq.consumeWhitespace();
-
             if (tq.matchChomp(SQ)) {
                 value = tq.chompTo(SQ);
             } else if (tq.matchChomp(DQ)) {
                 value = tq.chompTo(DQ);
             } else {
                 StringBuilder valueAccum = new StringBuilder();
-                // no ' or " to look for, so scan to end tag or space (or end of stream)
                 while (!tq.matchesAny("<", "/>", ">") && !tq.matchesWhitespace() && !tq.isEmpty()) {
                     valueAccum.append(tq.consume());
                 }
                 value = valueAccum.toString();
             }
             tq.consumeWhitespace();
         }
         if (key.length() != 0)
             return Attribute.createFromEncoded(key, value);
         else {
             tq.consume();
-                
             return null;
         }
     }
