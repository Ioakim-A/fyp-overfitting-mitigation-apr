diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/ca4eba65-981e-4b18-8614-67a3def9b9f4_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/fb8d0f8a-5e51-4c70-9757-dab8791cb029_fixed.java
index b5d94e0..f759977 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/ca4eba65-981e-4b18-8614-67a3def9b9f4_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/fb8d0f8a-5e51-4c70-9757-dab8791cb029_fixed.java
@@ -1,26 +1,20 @@
   private void traverse(Node node) {
-    // The goal here is to avoid retraversing
-    // the entire AST to catch newly created opportunities.
-    // So we track whether a "unit of code" has changed,
-    // and revisit immediately.
     if (!shouldVisit(node)) {
       return;
     }
-
     int visits = 0;
     do {
       Node c = node.getFirstChild();
-      while(c != null) {
+      if (c != null) {
+        do {
           traverse(c);
           Node next = c.getNext();
           c = next;
+        } while (c != null);
       }
-
       visit(node);
       visits++;
-
       Preconditions.checkState(visits < 10000, "too many interations");
     } while (shouldRetraverse(node));
-
     exitNode(node);
   }
