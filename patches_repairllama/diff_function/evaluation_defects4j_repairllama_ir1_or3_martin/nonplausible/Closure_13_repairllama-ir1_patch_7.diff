diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/8da9a2b5-ad07-4621-822a-9a26c2530a79_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/b1196311-aa80-4940-be96-582e26e8563c_fixed.java
index b5d94e0..9578e69 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/8da9a2b5-ad07-4621-822a-9a26c2530a79_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/b1196311-aa80-4940-be96-582e26e8563c_fixed.java
@@ -1,26 +1,20 @@
   private void traverse(Node node) {
-    // The goal here is to avoid retraversing
-    // the entire AST to catch newly created opportunities.
-    // So we track whether a "unit of code" has changed,
-    // and revisit immediately.
     if (!shouldVisit(node)) {
       return;
     }
-
     int visits = 0;
     do {
+      if (node.getFirstChild() != null) {
         Node c = node.getFirstChild();
         while(c != null) {
           traverse(c);
           Node next = c.getNext();
           c = next;
         }
-
+      }
       visit(node);
       visits++;
-
       Preconditions.checkState(visits < 10000, "too many interations");
     } while (shouldRetraverse(node));
-
     exitNode(node);
   }
