diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/dfca0e6c-03e5-407b-a800-84d687e74cc8_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/bc1efb23-22d3-4138-895d-966b52b270f5_fixed.java
index dc93be3..7571fe5 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/dfca0e6c-03e5-407b-a800-84d687e74cc8_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/bc1efb23-22d3-4138-895d-966b52b270f5_fixed.java
@@ -1,14 +1,10 @@
     Element insert(Token.StartTag startTag) {
-        // handle empty unknown tags
-        // when the spec expects an empty tag, will directly hit insertEmpty, so won't generate this fake end tag.
         if (startTag.isSelfClosing()) {
             Element el = insertEmpty(startTag);
-            stack.add(el);
-            tokeniser.emit(new Token.EndTag(el.tagName()));  // ensure we get out of whatever state we are in. emitted for yielded processing
+            tokeniser.emit(new Token.EndTag(el.tagName()));  
             return el;
         }
-        
         Element el = new Element(Tag.valueOf(startTag.name()), baseUri, startTag.attributes);
         insert(el);
         return el;
     }
