diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/61472fdc-7f51-44ff-8ce8-fd5842751f70_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/d5e4d8e3-6c76-4fd2-98ab-fd81323f21f0_fixed.java
index cdab603..ac1eab1 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/61472fdc-7f51-44ff-8ce8-fd5842751f70_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/d5e4d8e3-6c76-4fd2-98ab-fd81323f21f0_fixed.java
@@ -1,40 +1,30 @@
   private void processRequireCall(NodeTraversal t, Node n, Node parent) {
     Node left = n.getFirstChild();
     Node arg = left.getNext();
-    if (verifyLastArgumentIsString(t, left, arg)) {
+    if (verifyLastArgumentIsString(t, n, arg)) {
       String ns = arg.getString();
       ProvidedName provided = providedNames.get(ns);
       if (provided == null || !provided.isExplicitlyProvided()) {
         unrecognizedRequires.add(
             new UnrecognizedRequire(n, ns, t.getSourceName()));
       } else {
         JSModule providedModule = provided.explicitModule;
-
-        // This must be non-null, because there was an explicit provide.
         Preconditions.checkNotNull(providedModule);
-
         JSModule module = t.getModule();
         if (moduleGraph != null &&
             module != providedModule &&
             !moduleGraph.dependsOn(module, providedModule)) {
           compiler.report(
               t.makeError(n, XMODULE_REQUIRE_ERROR, ns,
                   providedModule.getName(),
                   module.getName()));
         }
       }
-
       maybeAddToSymbolTable(left);
       maybeAddStringNodeToSymbolTable(arg);
-
-      // Requires should be removed before further processing.
-      // Some clients run closure pass multiple times, first with
-      // the checks for broken requires turned off. In these cases, we
-      // allow broken requires to be preserved by the first run to
-      // let them be caught in the subsequent run.
       if (provided != null) {
         parent.detachFromParent();
         compiler.reportCodeChange();
       }
     }
   }
