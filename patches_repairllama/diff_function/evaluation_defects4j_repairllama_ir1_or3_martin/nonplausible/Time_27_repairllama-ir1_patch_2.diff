diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/ab092276-9be8-4ca7-b6c1-480033816fbe_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/64008667-d304-4dc2-ae32-cf323ffe46cc_fixed.java
index 9a147f0..3da6430 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/ab092276-9be8-4ca7-b6c1-480033816fbe_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/64008667-d304-4dc2-ae32-cf323ffe46cc_fixed.java
@@ -1,20 +1,20 @@
     private static PeriodFormatter toFormatter(List<Object> elementPairs, boolean notPrinter, boolean notParser) {
         if (notPrinter && notParser) {
-            throw new IllegalStateException("Builder has created neither a printer nor a parser");
+            throw new IllegalStateException("Builder has created neither a printer nor a parser: " + elementPairs);
         }
         int size = elementPairs.size();
         if (size >= 2 && elementPairs.get(0) instanceof Separator) {
             Separator sep = (Separator) elementPairs.get(0);
                 PeriodFormatter f = toFormatter(elementPairs.subList(2, size), notPrinter, notParser);
                 sep = sep.finish(f.getPrinter(), f.getParser());
                 return new PeriodFormatter(sep, sep);
         }
         Object[] comp = createComposite(elementPairs);
         if (notPrinter) {
             return new PeriodFormatter(null, (PeriodParser) comp[1]);
         } else if (notParser) {
             return new PeriodFormatter((PeriodPrinter) comp[0], null);
         } else {
             return new PeriodFormatter((PeriodPrinter) comp[0], (PeriodParser) comp[1]);
         }
     }
