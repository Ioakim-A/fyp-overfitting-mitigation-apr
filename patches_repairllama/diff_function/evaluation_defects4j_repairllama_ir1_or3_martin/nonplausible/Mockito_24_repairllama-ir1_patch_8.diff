diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/7b4f635e-9089-4b69-bb7e-e3631250afbd_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/e02171d9-b31e-4472-b2df-862f6c122bdd_fixed.java
index 654abbf..0695d05 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/7b4f635e-9089-4b69-bb7e-e3631250afbd_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/e02171d9-b31e-4472-b2df-862f6c122bdd_fixed.java
@@ -1,19 +1,11 @@
     public Object answer(InvocationOnMock invocation) {
         if (methodsGuru.isToString(invocation.getMethod())) {
             Object mock = invocation.getMock();
             MockName name = mockUtil.getMockName(mock);
-            if (name.isDefault()) {
-                return "Mock for " + mockUtil.getMockSettings(mock).getTypeToMock().getSimpleName() + ", hashCode: " + mock.hashCode();
-            } else {
             return name.toString();
-            }
         } else if (methodsGuru.isCompareToMethod(invocation.getMethod())) {
-            //see issue 184.
-            //mocks by default should return 0 if references are the same, otherwise some other value because they are not the same. Hence we return 1 (anything but 0 is good).
-            //Only for compareTo() method by the Comparable interface
             return 1;
         }
-        
         Class<?> returnType = invocation.getMethod().getReturnType();
         return returnValueFor(returnType);
     }
