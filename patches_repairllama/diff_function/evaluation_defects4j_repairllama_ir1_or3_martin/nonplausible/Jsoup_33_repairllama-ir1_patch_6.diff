diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/a2553483-ce57-473e-bbd8-b81a72b17eda_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/6a48e51f-483f-430b-91aa-c7260fe6c434_fixed.java
index dc93be3..2de88bd 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/a2553483-ce57-473e-bbd8-b81a72b17eda_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/6a48e51f-483f-430b-91aa-c7260fe6c434_fixed.java
@@ -1,14 +1,10 @@
     Element insert(Token.StartTag startTag) {
-        // handle empty unknown tags
-        // when the spec expects an empty tag, will directly hit insertEmpty, so won't generate this fake end tag.
         if (startTag.isSelfClosing()) {
             Element el = insertEmpty(startTag);
-            stack.add(el);
-            tokeniser.emit(new Token.EndTag(el.tagName()));  // ensure we get out of whatever state we are in. emitted for yielded processing
+            tokeniser.emit(new Token.EndTag(el.tagName()));
             return el;
         }
-        
         Element el = new Element(Tag.valueOf(startTag.name()), baseUri, startTag.attributes);
         insert(el);
         return el;
     }
