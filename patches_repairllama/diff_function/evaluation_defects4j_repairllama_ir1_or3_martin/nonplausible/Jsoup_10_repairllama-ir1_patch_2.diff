diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/8686276b-f837-4f1d-a6b6-061023e63c89_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/335bc9f0-b8f8-40d9-ba8c-f15d69ef32a6_fixed.java
index f8677d4..f8c9bdf 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/8686276b-f837-4f1d-a6b6-061023e63c89_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/335bc9f0-b8f8-40d9-ba8c-f15d69ef32a6_fixed.java
@@ -1,24 +1,21 @@
     public String absUrl(String attributeKey) {
         Validate.notEmpty(attributeKey);
-
-        String relUrl = attr(attributeKey);
+        String relUrl = attr(attributeKey).trim();
         if (!hasAttr(attributeKey)) {
-            return ""; // nothing to make absolute with
+            return ""; 
         } else {
             URL base;
             try {
                 try {
                     base = new URL(baseUri);
                 } catch (MalformedURLException e) {
-                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                     URL abs = new URL(relUrl);
                     return abs.toExternalForm();
                 }
-                // workaround: java resolves '//path/file + ?foo' to '//path/?foo', not '//path/file?foo' as desired
                 URL abs = new URL(base, relUrl);
                 return abs.toExternalForm();
             } catch (MalformedURLException e) {
                 return "";
             }
         }
     }
