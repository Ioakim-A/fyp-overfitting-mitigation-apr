diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/55e9d186-51a9-40d0-99e8-65ab0a47d4e4_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/9fddf426-abb2-49db-9451-836f375e7e2c_fixed.java
index b5d94e0..b8f6ca2 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/55e9d186-51a9-40d0-99e8-65ab0a47d4e4_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/9fddf426-abb2-49db-9451-836f375e7e2c_fixed.java
@@ -1,26 +1,6 @@
   private void traverse(Node node) {
-    // The goal here is to avoid retraversing
-    // the entire AST to catch newly created opportunities.
-    // So we track whether a "unit of code" has changed,
-    // and revisit immediately.
     if (!shouldVisit(node)) {
       return;
-    }
-
-    int visits = 0;
-    do {
-      Node c = node.getFirstChild();
-      while(c != null) {
-        traverse(c);
-        Node next = c.getNext();
-        c = next;
-      }
-
-      visit(node);
-      visits++;
-
-      Preconditions.checkState(visits < 10000, "too many interations");
     } while (shouldRetraverse(node));
-
     exitNode(node);
   }
