diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/3bb5b700-03aa-45a0-9d37-e6663f1d67c6_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/8f34cb83-8a6f-4686-bb7e-064d8709f5bf_fixed.java
index b5d94e0..4a29595 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/3bb5b700-03aa-45a0-9d37-e6663f1d67c6_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/8f34cb83-8a6f-4686-bb7e-064d8709f5bf_fixed.java
@@ -1,26 +1,18 @@
 private void traverse(Node node) {
-    // The goal here is to avoid retraversing
-    // the entire AST to catch newly created opportunities.
-    // So we track whether a "unit of code" has changed,
-    // and revisit immediately.
   if (!shouldVisit(node)) {
     return;
   }
-
   int visits = 0;
   do {
     Node c = node.getFirstChild();
     while(c != null) {
-        traverse(c);
       Node next = c.getNext();
+      traverse(c);
       c = next;
     }
-
     visit(node);
     visits++;
-
-      Preconditions.checkState(visits < 10000, "too many interations");
+    Preconditions.checkState(visits < 10000, "too many iterations");
   } while (shouldRetraverse(node));
-
   exitNode(node);
 }
\ No newline at end of file
