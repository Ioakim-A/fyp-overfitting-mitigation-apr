diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/1f4ce2e9-990b-4924-9bd5-560f73727cf1_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/f3b8b09b-c1da-4da3-a380-e5fee6b63c10_fixed.java
index dcea789..203ffe5 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/1f4ce2e9-990b-4924-9bd5-560f73727cf1_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/f3b8b09b-c1da-4da3-a380-e5fee6b63c10_fixed.java
@@ -1,16 +1,17 @@
     public static byte[] encodeBase64(byte[] binaryData, boolean isChunked, boolean urlSafe, int maxResultSize) {
         if (binaryData == null || binaryData.length == 0) {
             return binaryData;
         }
         
-        long len = getEncodeLength(binaryData, MIME_CHUNK_SIZE, CHUNK_SEPARATOR);
+        // fixed code
+        long len = (4 * (binaryData.length / 3)) + ((binaryData.length % 3) == 0 ? 0 : 3);
+        
         if (len > maxResultSize) {
             throw new IllegalArgumentException("Input array too big, the output array would be bigger (" +
                 len +
-                ") than the specified maxium size of " +
+                ") than the specified maximum size of " +
                 maxResultSize);
         }
-                
         Base64 b64 = isChunked ? new Base64(urlSafe) : new Base64(0, CHUNK_SEPARATOR, urlSafe);
         return b64.encode(binaryData);
     }
\ No newline at end of file
