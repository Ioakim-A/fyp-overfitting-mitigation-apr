diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/5fa5eda0-ad1f-4c66-bf40-3c74a92b8328_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/9edb402d-8cc3-4dff-8da8-deb0b29762d6_fixed.java
index 680d3be..769d6d1 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/5fa5eda0-ad1f-4c66-bf40-3c74a92b8328_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/9edb402d-8cc3-4dff-8da8-deb0b29762d6_fixed.java
@@ -1,47 +1,4 @@
-    public void visit(NodeTraversal t, Node n, Node parent) {
-
-      // Record global variable and function declarations
-      if (t.inGlobalScope()) {
-        if (NodeUtil.isVarDeclaration(n)) {
-          NameInformation ns = createNameInformation(t, n, parent);
-          Preconditions.checkNotNull(ns);
-          recordSet(ns.name, n);
-        } else if (NodeUtil.isFunctionDeclaration(n)) {
-          Node nameNode = n.getFirstChild();
-          NameInformation ns = createNameInformation(t, nameNode, n);
-          if (ns != null) {
-            JsName nameInfo = getName(nameNode.getString(), true);
-            recordSet(nameInfo.name, nameNode);
-          }
-        } else if (NodeUtil.isObjectLitKey(n, parent)) {
-          NameInformation ns = createNameInformation(t, n, parent);
-          if (ns != null) {
-            recordSet(ns.name, n);
-          }
-        }
-      }
-
-      // Record assignments and call sites
-      if (n.isAssign()) {
-        Node nameNode = n.getFirstChild();
-
-        NameInformation ns = createNameInformation(t, nameNode, n);
-        if (ns != null) {
-          if (ns.isPrototype) {
-            recordPrototypeSet(ns.prototypeClass, ns.prototypeProperty, n);
-          } else {
-            recordSet(ns.name, nameNode);
-          }
-        }
-      } else if (n.isCall()) {
-        Node nameNode = n.getFirstChild();
-        NameInformation ns = createNameInformation(t, nameNode, n);
-        if (ns != null && ns.onlyAffectsClassDef) {
 JsName name = getName(ns.name, false);
 if (name != null) {
-          refNodes.add(new ClassDefiningFunctionNode(
-              name, n, parent, parent.getParent()));
-          }
-        }
-      }
+  refNodes.add(new ClassDefiningFunctionNode(name, n, parent, parent.getParent()));
 }
\ No newline at end of file
