diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/a5d89a6d-efa0-4d34-a9f9-2052766063ab_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/fb605269-0b60-4763-8d6d-2c6cf13daf13_fixed.java
index b2d53db..ddb28a0 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/a5d89a6d-efa0-4d34-a9f9-2052766063ab_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/fb605269-0b60-4763-8d6d-2c6cf13daf13_fixed.java
@@ -1,34 +1,34 @@
     void read(Tokeniser t, CharacterReader r) {
         if (r.matchesLetter()) {
             String name = r.consumeLetterSequence();
             t.tagPending.appendTagName(name.toLowerCase());
             t.dataBuffer.append(name);
+            // buggy code fixed
             r.advance();
             return;
         }
-
         if (t.isAppropriateEndTagToken() && !r.isEmpty()) {
             char c = r.consume();
             switch (c) {
                 case '\t':
                 case '\n':
                 case '\f':
                 case ' ':
                     t.transition(BeforeAttributeName);
                     break;
                 case '/':
                     t.transition(SelfClosingStartTag);
                     break;
                 case '>':
                     t.emitTagPending();
                     t.transition(Data);
                     break;
                 default:
                     t.dataBuffer.append(c);
                     anythingElse(t, r);
                     break;
             }
         } else {
             anythingElse(t, r);
         }
     }
\ No newline at end of file
