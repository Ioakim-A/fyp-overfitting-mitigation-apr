diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/f03102ce-4102-44c6-bd4f-ad0ea6741034_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/6f8d402e-600f-45c9-8a66-760f1c404740_fixed.java
index 9f14d90..0ef594b 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/f03102ce-4102-44c6-bd4f-ad0ea6741034_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/6f8d402e-600f-45c9-8a66-760f1c404740_fixed.java
@@ -1,20 +1,15 @@
     private void annotateCalls(Node n) {
       Preconditions.checkState(n.isCall());
-
-      // Keep track of of the "this" context of a call.  A call without an
-      // explicit "this" is a free call.
       Node first = n.getFirstChild();
       
-      // ignore cast nodes.
-
+      // Check if the node has a child
+      if (first != null) {
         if (!NodeUtil.isGet(first)) {
           n.putBooleanProp(Node.FREE_CALL, true);
         }
-
-      // Keep track of the context in which eval is called. It is important
-      // to distinguish between "(0, eval)()" and "eval()".
         if (first.isName() &&
             "eval".equals(first.getString())) {
           first.putBooleanProp(Node.DIRECT_EVAL, true);
         }
       }
+    }
\ No newline at end of file
