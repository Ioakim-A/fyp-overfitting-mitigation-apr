diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/18dce96d-ee4b-4c41-9b96-430801e812b5_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/4f963b51-33ec-4de0-aa5d-a7bba8ceeb36_fixed.java
index d5fd081..5e27d48 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/18dce96d-ee4b-4c41-9b96-430801e812b5_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/4f963b51-33ec-4de0-aa5d-a7bba8ceeb36_fixed.java
@@ -1,24 +1,22 @@
     private void handleObjectLit(NodeTraversal t, Node n) {
       for (Node child = n.getFirstChild();
           child != null;
           child = child.getNext()) {
-        // Maybe STRING, GET, SET
-
-        // We should never see a mix of numbers and strings.
+        // Fixed code
+        // Check if child is not null before calling getString()
+        if (child != null) {
             String name = child.getString();
             T type = typeSystem.getType(getScope(), n, name);
-
             Property prop = getProperty(name);
             if (!prop.scheduleRenaming(child,
                                        processProperty(t, prop, type, null))) {
-          // TODO(user): It doesn't look like the user can do much in this
-          // case right now.
               if (propertiesToErrorFor.containsKey(name)) {
                 compiler.report(JSError.make(
                     t.getSourceName(), child, propertiesToErrorFor.get(name),
                     Warnings.INVALIDATION, name,
                     (type == null ? "null" : type.toString()), n.toString(), ""));
               }
             }
         }
       }
+    }
\ No newline at end of file
