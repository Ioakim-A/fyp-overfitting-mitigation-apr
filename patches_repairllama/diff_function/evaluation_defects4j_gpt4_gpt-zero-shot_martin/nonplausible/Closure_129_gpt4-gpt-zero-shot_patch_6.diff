diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/f155326c-5380-473c-aa31-781bfbb060da_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/d2467d6a-72e0-4731-b4aa-e54b2a884808_fixed.java
index 9f14d90..b065caf 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/f155326c-5380-473c-aa31-781bfbb060da_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/d2467d6a-72e0-4731-b4aa-e54b2a884808_fixed.java
@@ -1,20 +1,15 @@
     private void annotateCalls(Node n) {
       Preconditions.checkState(n.isCall());
-
-      // Keep track of of the "this" context of a call.  A call without an
-      // explicit "this" is a free call.
       Node first = n.getFirstChild();
-
-      // ignore cast nodes.
-
+      // fixed code
+      if(first == null) {
+          return;
+      }
       if (!NodeUtil.isGet(first)) {
         n.putBooleanProp(Node.FREE_CALL, true);
       }
-
-      // Keep track of the context in which eval is called. It is important
-      // to distinguish between "(0, eval)()" and "eval()".
       if (first.isName() &&
           "eval".equals(first.getString())) {
         first.putBooleanProp(Node.DIRECT_EVAL, true);
       }
     }
\ No newline at end of file
