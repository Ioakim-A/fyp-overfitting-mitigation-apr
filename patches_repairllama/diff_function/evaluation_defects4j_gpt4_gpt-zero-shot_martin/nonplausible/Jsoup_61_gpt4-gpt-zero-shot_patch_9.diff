diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/5e3674e3-f9fe-41bb-9177-2421a74871bb_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/fdde49c2-04f3-45fa-868d-bf065c677488_fixed.java
index e6a5296..a6ee50f 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/5e3674e3-f9fe-41bb-9177-2421a74871bb_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/fdde49c2-04f3-45fa-868d-bf065c677488_fixed.java
@@ -1,42 +1,35 @@
 public boolean hasClass(String className) {
+    // fixed code
     final String classAttr = attributes.get("class");
+    
     final int len = classAttr.length();
     final int wantLen = className.length();
-
     if (len == 0 || len < wantLen) {
         return false;
     }
-
-        // if both lengths are equal, only need compare the className with the attribute
     if (len == wantLen) {
         return className.equalsIgnoreCase(classAttr);
     }
 
-        // otherwise, scan for whitespace and compare regions (with no string or arraylist allocations)
     boolean inClass = false;
     int start = 0;
     for (int i = 0; i < len; i++) {
         if (Character.isWhitespace(classAttr.charAt(i))) {
             if (inClass) {
-                    // white space ends a class name, compare it with the requested one, ignore case
                 if (i - start == wantLen && classAttr.regionMatches(true, start, className, 0, wantLen)) {
                     return true;
                 }
                 inClass = false;
             }
         } else {
             if (!inClass) {
-                    // we're in a class name : keep the start of the substring
                 inClass = true;
                 start = i;
             }
         }
     }
-
-        // check the last entry
     if (inClass && len - start == wantLen) {
         return classAttr.regionMatches(true, start, className, 0, wantLen);
     }
-
     return false;
 }
\ No newline at end of file
