diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/4ad220f8-0060-437d-8998-4ed02a65302d_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/2b654192-d6a4-45b7-8ece-1b4932ba0444_fixed.java
index d4e6d48..6a7956c 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/4ad220f8-0060-437d-8998-4ed02a65302d_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/2b654192-d6a4-45b7-8ece-1b4932ba0444_fixed.java
@@ -1,23 +1,17 @@
   private Node tryFoldSimpleFunctionCall(Node n) {
     Preconditions.checkState(n.isCall());
     Node callTarget = n.getFirstChild();
     if (callTarget != null && callTarget.isName() &&
         callTarget.getString().equals("String")) {
-      // Fold String(a) to '' + (a) on immutable literals,
-      // which allows further optimizations
-      //
-      // We can't do this in the general case, because String(a) has
-      // slightly different semantics than '' + (a). See
-      // http://code.google.com/p/closure-compiler/issues/detail?id=759
       Node value = callTarget.getNext();
       if (value != null) {
         Node addition = IR.add(
             IR.string("").srcref(callTarget),
             value.detachFromParent());
         n.getParent().replaceChild(n, addition);
         reportCodeChange();
         return addition;
       }
     }
     return n;
   }
\ No newline at end of file
