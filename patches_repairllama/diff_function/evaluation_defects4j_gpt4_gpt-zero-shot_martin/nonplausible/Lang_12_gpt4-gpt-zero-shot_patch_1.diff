diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/7ca41b1f-e56b-4024-b989-84662c439a10_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/8310133a-924e-4e6c-b110-04858f8591a9_fixed.java
index 20ed145..9b373b9 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/7ca41b1f-e56b-4024-b989-84662c439a10_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/8310133a-924e-4e6c-b110-04858f8591a9_fixed.java
@@ -1,60 +1,8 @@
-    public static String random(int count, int start, int end, boolean letters, boolean numbers,
-                                char[] chars, Random random) {
-        if (count == 0) {
-            return "";
-        } else if (count < 0) {
-            throw new IllegalArgumentException("Requested random string length " + count + " is less than 0.");
-        }
-
 if (start == 0 && end == 0) {
     if (!letters && !numbers) {
-                    end = Integer.MAX_VALUE;
+        end = 'z' + 1;    // Limit the range to ASCII characters.
     } else {
-                    end = 'z' + 1;
-                    start = ' ';                
+        end = 'z' + 1;    // Include all ASCII letters and numbers.
+        start = '0';
     }
 }
\ No newline at end of file
-
-        char[] buffer = new char[count];
-        int gap = end - start;
-
-        while (count-- != 0) {
-            char ch;
-            if (chars == null) {
-                ch = (char) (random.nextInt(gap) + start);
-            } else {
-                ch = chars[random.nextInt(gap) + start];
-            }
-            if (letters && Character.isLetter(ch)
-                    || numbers && Character.isDigit(ch)
-                    || !letters && !numbers) {
-                if(ch >= 56320 && ch <= 57343) {
-                    if(count == 0) {
-                        count++;
-                    } else {
-                        // low surrogate, insert high surrogate after putting it in
-                        buffer[count] = ch;
-                        count--;
-                        buffer[count] = (char) (55296 + random.nextInt(128));
-                    }
-                } else if(ch >= 55296 && ch <= 56191) {
-                    if(count == 0) {
-                        count++;
-                    } else {
-                        // high surrogate, insert low surrogate before putting it in
-                        buffer[count] = (char) (56320 + random.nextInt(128));
-                        count--;
-                        buffer[count] = ch;
-                    }
-                } else if(ch >= 56192 && ch <= 56319) {
-                    // private high surrogate, no effing clue, so skip it
-                    count++;
-                } else {
-                    buffer[count] = ch;
-                }
-            } else {
-                count++;
-            }
-        }
-        return new String(buffer);
-    }
