diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/62b963f9-a0c5-4541-8e47-aafff24d88c7_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/c7b9dd6b-cf85-41fd-8b88-34813b5f8af3_fixed.java
index dc93be3..e8e0e93 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/62b963f9-a0c5-4541-8e47-aafff24d88c7_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/c7b9dd6b-cf85-41fd-8b88-34813b5f8af3_fixed.java
@@ -1,14 +1,12 @@
     Element insert(Token.StartTag startTag) {
-        // handle empty unknown tags
-        // when the spec expects an empty tag, will directly hit insertEmpty, so won't generate this fake end tag.
         if (startTag.isSelfClosing()) {
             Element el = insertEmpty(startTag);
             stack.add(el);
-            tokeniser.emit(new Token.EndTag(el.tagName()));  // ensure we get out of whatever state we are in. emitted for yielded processing
+            stack.removeElement(el);
+            tokeniser.emit(new Token.EndTag(el.tagName()));  
             return el;
         }
-        
         Element el = new Element(Tag.valueOf(startTag.name()), baseUri, startTag.attributes);
         insert(el);
         return el;
     }
\ No newline at end of file
