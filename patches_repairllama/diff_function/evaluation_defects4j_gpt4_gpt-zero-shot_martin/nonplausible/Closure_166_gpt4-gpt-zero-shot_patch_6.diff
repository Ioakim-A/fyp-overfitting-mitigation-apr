diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/f9ba53c6-4328-403c-91ae-87bd505b5662_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/6c929bce-eae6-43a5-8fe8-3871c6847148_fixed.java
index 70ac830..6887bfd 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/f9ba53c6-4328-403c-91ae-87bd505b5662_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/6c929bce-eae6-43a5-8fe8-3871c6847148_fixed.java
@@ -1,19 +1,11 @@
 public void matchConstraint(JSType constraint) {
-    // We only want to match constraints on anonymous types.
     if (hasReferenceName()) {
       return;
     }
-
-    // Handle the case where the constraint object is a record type.
-    //
-    // param constraint {{prop: (number|undefined)}}
-    // function f(constraint) {}
-    // f({});
-    //
-    // We want to modify the object literal to match the constraint, by
-    // taking any each property on the record and trying to match
-    // properties on this object.
     if (constraint.isRecordType()) {
       matchRecordTypeConstraint(constraint.toObjectType());
+    } else {
+      // Replace '<FILL_ME>' with a call to handle non-record type constraints.
+      handleNonRecordTypeConstraint(constraint);
     }
 }
\ No newline at end of file
