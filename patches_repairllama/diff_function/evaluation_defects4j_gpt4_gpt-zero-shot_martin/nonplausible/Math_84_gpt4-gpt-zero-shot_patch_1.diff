diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/7db9357e-28aa-4829-a2ff-a344e84953d9_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/7a43ab05-a941-464a-bdc6-55e9bed2b841_fixed.java
index 50cbfb2..77623ab 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/7db9357e-28aa-4829-a2ff-a344e84953d9_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/7a43ab05-a941-464a-bdc6-55e9bed2b841_fixed.java
@@ -1,39 +1,23 @@
 protected void iterateSimplex(final Comparator<RealPointValuePair> comparator)
         throws FunctionEvaluationException, OptimizationException, IllegalArgumentException {
-
-        while (true) {
-
+        boolean continueIteration = true;
+        while (continueIteration) {
             incrementIterationsCounter();
-
-            // save the original vertex
             final RealPointValuePair[] original = simplex;
             final RealPointValuePair best = original[0];
-
-            // perform a reflection step
             final RealPointValuePair reflected = evaluateNewSimplex(original, 1.0, comparator);
             if (comparator.compare(reflected, best) < 0) {
-
-                // compute the expanded simplex
                 final RealPointValuePair[] reflectedSimplex = simplex;
                 final RealPointValuePair expanded = evaluateNewSimplex(original, khi, comparator);
                 if (comparator.compare(reflected, expanded) <= 0) {
-                    // accept the reflected simplex
                     simplex = reflectedSimplex;
                 }
-
                 return;
-
             }
-
-            // compute the contracted simplex
             final RealPointValuePair contracted = evaluateNewSimplex(original, gamma, comparator);
             if (comparator.compare(contracted, best) < 0) {
-                // accept the contracted simplex
-
-            // check convergence
                 return;
             }
-
+            continueIteration = false;
         }
-
     }
\ No newline at end of file
