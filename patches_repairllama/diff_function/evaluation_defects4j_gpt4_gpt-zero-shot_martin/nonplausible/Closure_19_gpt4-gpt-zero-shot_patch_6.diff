diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/739e4383-a9d2-45d9-8e80-fc54780d5dcf_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/8d8c9e09-031e-420f-a983-3143edb9f279_fixed.java
index 42b7715..a93c2ec 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/739e4383-a9d2-45d9-8e80-fc54780d5dcf_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/8d8c9e09-031e-420f-a983-3143edb9f279_fixed.java
@@ -1,22 +1,20 @@
 protected void declareNameInScope(FlowScope scope, Node node, JSType type) {
   switch (node.getType()) {
     case Token.NAME:
       scope.inferSlotType(node.getString(), type);
       break;
-
     case Token.GETPROP:
       String qualifiedName = node.getQualifiedName();
       Preconditions.checkNotNull(qualifiedName);
-
       JSType origType = node.getJSType();
       origType = origType == null ? getNativeType(UNKNOWN_TYPE) : origType;
       scope.inferQualifiedSlot(node, qualifiedName, origType, type);
       break;
-
-        // "this" references aren't currently modeled in the CFG.
-
+    case Token.SOME_OTHER_TOKEN_TYPE: // assuming SOME_OTHER_TOKEN_TYPE is a valid token type
+      // implementation for this token type
+      break;
     default:
       throw new IllegalArgumentException("Node cannot be refined. \n" +
           node.toStringTree());
   }
 }
\ No newline at end of file
