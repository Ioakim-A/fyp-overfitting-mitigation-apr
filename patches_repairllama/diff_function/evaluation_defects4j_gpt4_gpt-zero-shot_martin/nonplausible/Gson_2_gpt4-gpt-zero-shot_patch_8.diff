diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/1d1e1ce2-f738-43bd-bf19-f9458cccddc6_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/48b90fa9-a89f-4a8b-b262-6e4cae6c5f7e_fixed.java
index 3563e3c..e69869c 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/1d1e1ce2-f738-43bd-bf19-f9458cccddc6_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/48b90fa9-a89f-4a8b-b262-6e4cae6c5f7e_fixed.java
@@ -1,17 +1,21 @@
 public static <T1> TypeAdapterFactory newTypeHierarchyFactory(
     final Class<T1> clazz, final TypeAdapter<T1> typeAdapter) {
   return new TypeAdapterFactory() {
     @SuppressWarnings("unchecked")
     public <T2> TypeAdapter<T2> create(Gson gson, TypeToken<T2> typeToken) {
       final Class<? super T2> requestedType = typeToken.getRawType();
       if (!clazz.isAssignableFrom(requestedType)) {
         return null;
       }
+      // corrected code
+      if (typeAdapter.getClass().isAssignableFrom(TypeAdapter.class)) {
         return (TypeAdapter<T2>) typeAdapter;
-
+      } else {
+        throw new IllegalArgumentException(clazz.getName() + " is not a valid type for the adapter " + typeAdapter);
+      }
     }
     @Override public String toString() {
       return "Factory[typeHierarchy=" + clazz.getName() + ",adapter=" + typeAdapter + "]";
     }
   };
 }
\ No newline at end of file
