diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/349561cd-26e2-4f27-9380-107006527a94_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/0668de13-5de2-47b4-b474-788217620130_fixed.java
index b108107..eb5d427 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/349561cd-26e2-4f27-9380-107006527a94_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/0668de13-5de2-47b4-b474-788217620130_fixed.java
@@ -1,25 +1,23 @@
 private void inferPropertyTypesToMatchConstraint(
     JSType type, JSType constraint) {
   if (type == null || constraint == null) {
     return;
   }
-
-    ObjectType constraintObj =
-        ObjectType.cast(constraint.restrictByNotNullOrUndefined());
+  ObjectType constraintObj = ObjectType.cast(constraint.restrictByNotNullOrUndefined());
   if (constraintObj != null && constraintObj.isRecordType()) {
     ObjectType objType = ObjectType.cast(type.restrictByNotNullOrUndefined());
     if (objType != null) {
       for (String prop : constraintObj.getOwnPropertyNames()) {
         JSType propType = constraintObj.getPropertyType(prop);
         if (!objType.isPropertyTypeDeclared(prop)) {
           JSType typeToInfer = propType;
           if (!objType.hasProperty(prop)) {
-              typeToInfer =
-                  getNativeType(VOID_TYPE).getLeastSupertype(propType);
+            typeToInfer = getNativeType(VOID_TYPE).getLeastSupertype(propType);
           }
-            objType.defineInferredProperty(prop, typeToInfer, null);
+          // change defineInferredProperty to defineDeclaredProperty
+          objType.defineDeclaredProperty(prop, typeToInfer, null);
         }
       }
     }
   }
 }
\ No newline at end of file
