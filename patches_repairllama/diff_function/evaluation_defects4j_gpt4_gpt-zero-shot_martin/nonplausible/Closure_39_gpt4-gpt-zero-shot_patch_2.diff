diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/da3248d4-c2c3-40ef-950f-f29c90cc1d95_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/9a2b800c-b187-4bee-9136-28fbc26c34d8_fixed.java
index 25b1dac..c19f76a 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/da3248d4-c2c3-40ef-950f-f29c90cc1d95_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/9a2b800c-b187-4bee-9136-28fbc26c34d8_fixed.java
@@ -1,44 +1,13 @@
-  String toStringHelper(boolean forAnnotations) {
-    if (hasReferenceName()) {
-      return getReferenceName();
-    } else if (prettyPrint) {
-      // Don't pretty print recursively.
-      prettyPrint = false;
-
-      // Use a tree set so that the properties are sorted.
-      Set<String> propertyNames = Sets.newTreeSet();
-      for (ObjectType current = this;
-           current != null && !current.isNativeObjectType() &&
-               propertyNames.size() <= MAX_PRETTY_PRINTED_PROPERTIES;
-           current = current.getImplicitPrototype()) {
-        propertyNames.addAll(current.getOwnPropertyNames());
-      }
-
-      StringBuilder sb = new StringBuilder();
-      sb.append("{");
-
-      int i = 0;
-      for (String property : propertyNames) {
-        if (i > 0) {
-          sb.append(", ");
-        }
-
-        sb.append(property);
-        sb.append(": ");
         sb.append(getPropertyType(property).toString());
-
         ++i;
         if (i == MAX_PRETTY_PRINTED_PROPERTIES) {
           sb.append(", ...");
           break;
         }
       }
-
       sb.append("}");
-
       prettyPrint = true;
       return sb.toString();
     } else {
       return "{...}";
     }
\ No newline at end of file
-  }
