diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/29ebacba-f274-4485-9b4a-0cab755c7459_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/e093cd7a-2d65-48c9-b6a0-677549eafc5a_fixed.java
index d7b8fbd..e1a26f7 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/29ebacba-f274-4485-9b4a-0cab755c7459_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/e093cd7a-2d65-48c9-b6a0-677549eafc5a_fixed.java
@@ -1,59 +1,56 @@
     protected String[] flatten(Options options, String[] arguments, boolean stopAtNonOption)
     {
-        List tokens = new ArrayList();
-
+        List<String> tokens = new ArrayList<>();
         boolean eatTheRest = false;
-
         for (int i = 0; i < arguments.length; i++)
         {
             String arg = arguments[i];
-
             if ("--".equals(arg))
             {
                 eatTheRest = true;
                 tokens.add("--");
             }
             else if ("-".equals(arg))
             {
                 tokens.add("-");
             }
             else if (arg.startsWith("-"))
             {
                 String opt = Util.stripLeadingHyphens(arg);
-
                 if (options.hasOption(opt))
                 {
                     tokens.add(arg);
                 }
                 else
                 {
-                    if (options.hasOption(arg.substring(0, 2)))
+                    String potentialOpt;
+                    for (int j = 1; j <= arg.length(); j++) {
+                        potentialOpt = arg.substring(0, j);
+                        if (options.hasOption(potentialOpt))
                         {
-                        // the format is --foo=value or -foo=value
-                        // the format is a special properties option (-Dproperty=value)
-                        tokens.add(arg.substring(0, 2)); // -D
-                        tokens.add(arg.substring(2)); // property=value
+                            tokens.add(arg.substring(0, j));
+                            tokens.add(arg.substring(j));
+                            break;
                         }
-                    else
+                        else if (j == arg.length()) 
                         {
                             eatTheRest = stopAtNonOption;
                             tokens.add(arg);
                         }
                     }
                 }
+            }
             else
             {
                 tokens.add(arg);
             }
-
             if (eatTheRest)
             {
                 for (i++; i < arguments.length; i++)
                 {
                     tokens.add(arguments[i]);
                 }
             }
         }
-
-        return (String[]) tokens.toArray(new String[tokens.size()]);
+        return tokens.toArray(new String[0]);
     }
\ No newline at end of file
