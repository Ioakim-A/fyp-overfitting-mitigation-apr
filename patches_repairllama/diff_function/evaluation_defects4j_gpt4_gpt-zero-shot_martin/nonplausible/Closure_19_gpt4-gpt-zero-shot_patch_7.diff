diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/2fd6d46d-2525-42e3-854a-152df2a4a97f_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/f9c68e4d-2359-4bca-832e-4e58cfb7901d_fixed.java
index 42b7715..b9ae731 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/2fd6d46d-2525-42e3-854a-152df2a4a97f_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/f9c68e4d-2359-4bca-832e-4e58cfb7901d_fixed.java
@@ -1,22 +1,22 @@
 protected void declareNameInScope(FlowScope scope, Node node, JSType type) {
     switch (node.getType()) {
       case Token.NAME:
         scope.inferSlotType(node.getString(), type);
         break;
-
       case Token.GETPROP:
         String qualifiedName = node.getQualifiedName();
         Preconditions.checkNotNull(qualifiedName);
-
         JSType origType = node.getJSType();
         origType = origType == null ? getNativeType(UNKNOWN_TYPE) : origType;
         scope.inferQualifiedSlot(node, qualifiedName, origType, type);
         break;
-
-        // "this" references aren't currently modeled in the CFG.
-
+      case Token.FUNCTION:
+        String functionName = node.getFunctionName();
+        Preconditions.checkNotNull(functionName);
+        scope.inferSlotType(functionName, type);
+        break;
       default:
         throw new IllegalArgumentException("Node cannot be refined. \n" +
             node.toStringTree());
     }
 }
\ No newline at end of file
