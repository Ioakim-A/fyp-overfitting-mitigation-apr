diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/a8f2df47-4aa1-4988-9da4-298d7a81ef9a_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/4eab6cc9-9603-47cd-be6f-80de397d26a2_fixed.java
index dad17c3..991eabf 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/a8f2df47-4aa1-4988-9da4-298d7a81ef9a_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/4eab6cc9-9603-47cd-be6f-80de397d26a2_fixed.java
@@ -1,41 +1,18 @@
 public static Locale toLocale(final String str) {
     if (str == null) {
         return null;
     }
-        final int len = str.length();
-        if (len < 2) {
-            throw new IllegalArgumentException("Invalid locale format: " + str);
-        }
-        final char ch0 = str.charAt(0);
-            final char ch1 = str.charAt(1);
-            if (!Character.isLowerCase(ch0) || !Character.isLowerCase(ch1)) {
-                throw new IllegalArgumentException("Invalid locale format: " + str);
-            }
-            if (len == 2) {
+    int underscoreFirstIndex = str.indexOf('_');
+    int underscoreSecondIndex = str.lastIndexOf('_');
+    
+    if (underscoreFirstIndex == -1) {
+        // No underscores, language only
         return new Locale(str);
+    } else if (underscoreFirstIndex == underscoreSecondIndex) {
+        // One underscore, language and country
+        return new Locale(str.substring(0, underscoreFirstIndex), str.substring(underscoreFirstIndex + 1));
+    } else {
+        // Two underscores, language, country and variant
+        return new Locale(str.substring(0, underscoreFirstIndex), str.substring(underscoreFirstIndex + 1, underscoreSecondIndex), str.substring(underscoreSecondIndex + 1));
     }
-            if (len < 5) {
-                throw new IllegalArgumentException("Invalid locale format: " + str);
-            }
-            if (str.charAt(2) != '_') {
-                throw new IllegalArgumentException("Invalid locale format: " + str);
-            }
-            final char ch3 = str.charAt(3);
-            if (ch3 == '_') {
-                return new Locale(str.substring(0, 2), "", str.substring(4));
-            }
-            final char ch4 = str.charAt(4);
-            if (!Character.isUpperCase(ch3) || !Character.isUpperCase(ch4)) {
-                throw new IllegalArgumentException("Invalid locale format: " + str);
-            }
-            if (len == 5) {
-                return new Locale(str.substring(0, 2), str.substring(3, 5));
-            }
-            if (len < 7) {
-                throw new IllegalArgumentException("Invalid locale format: " + str);
-            }
-            if (str.charAt(5) != '_') {
-                throw new IllegalArgumentException("Invalid locale format: " + str);
-            }
-            return new Locale(str.substring(0, 2), str.substring(3, 5), str.substring(6));
 }
\ No newline at end of file
