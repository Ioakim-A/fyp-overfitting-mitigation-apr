diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/1ff2625b-4e13-4650-b506-bdbd4e09bcb4_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/42fce2a3-a91a-414d-83ff-df5e16970bdf_fixed.java
index b5d94e0..11e74ad 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/1ff2625b-4e13-4650-b506-bdbd4e09bcb4_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/42fce2a3-a91a-414d-83ff-df5e16970bdf_fixed.java
@@ -1,26 +1,18 @@
 private void traverse(Node node) {
-    // The goal here is to avoid retraversing
-    // the entire AST to catch newly created opportunities.
-    // So we track whether a "unit of code" has changed,
-    // and revisit immediately.
   if (!shouldVisit(node)) {
     return;
   }
-
   int visits = 0;
   do {
     Node c = node.getFirstChild();
     while(c != null) {
+      Node next = c.getNextSibling();
       traverse(c);
-        Node next = c.getNext();
       c = next;
     }
-
     visit(node);
     visits++;
-
     Preconditions.checkState(visits < 10000, "too many interations");
   } while (shouldRetraverse(node));
-
   exitNode(node);
 }
\ No newline at end of file
