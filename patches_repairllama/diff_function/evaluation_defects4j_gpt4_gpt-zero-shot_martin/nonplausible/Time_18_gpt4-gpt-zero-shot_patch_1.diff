diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/2dafe4a4-4384-476a-b675-eb87eb2a2cf6_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/a85a9103-1826-4cdb-be17-faec8764d37b_fixed.java
index be2af16..c645be7 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/2dafe4a4-4384-476a-b675-eb87eb2a2cf6_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/a85a9103-1826-4cdb-be17-faec8764d37b_fixed.java
@@ -1,29 +1,25 @@
 public long getDateTimeMillis(int year, int monthOfYear, int dayOfMonth,
                               int hourOfDay, int minuteOfHour,
                               int secondOfMinute, int millisOfSecond)
     throws IllegalArgumentException
 {
     Chronology base;
     if ((base = getBase()) != null) {
         return base.getDateTimeMillis
             (year, monthOfYear, dayOfMonth,
              hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
     }
-
-        // Assume date is Gregorian.
     long instant;
     instant = iGregorianChronology.getDateTimeMillis
         (year, monthOfYear, dayOfMonth,
          hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
     if (instant < iCutoverMillis) {
-            // Maybe it's Julian.
         instant = iJulianChronology.getDateTimeMillis
             (year, monthOfYear, dayOfMonth,
              hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
         if (instant >= iCutoverMillis) {
-                // Okay, it's in the illegal cutover gap.
             throw new IllegalArgumentException("Specified date does not exist");
         }
     }
     return instant;
 }
\ No newline at end of file
