diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/6e2ab61d-2829-43d4-892f-c479a5ac6bfd_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/9fd0e938-7798-4c53-89b2-fc03630c0d49_fixed.java
index a66e5f8..c3ca262 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/6e2ab61d-2829-43d4-892f-c479a5ac6bfd_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/9fd0e938-7798-4c53-89b2-fc03630c0d49_fixed.java
@@ -1,44 +1,33 @@
 protected StringBuffer renderWrappedText(StringBuffer sb, int width, 
                                          int nextLineTabStop, String text)
 {
     int pos = findWrapPos(text, width, 0);
-
     if (pos == -1)
     {
         sb.append(rtrim(text));
-
         return sb;
     }
     sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
-
     if (nextLineTabStop >= width)
     {
-            // stops infinite loop happening
-            throw new IllegalStateException("Total width is less than the width of the argument and indent " +
-                                            "- no room for the description");
+// fixed code
+        sb.append("Error: Total width is less than or equal to the width of the argument and indent - no room for the description");
+        return sb; 
     }
-
-        // all following lines must be padded with nextLineTabStop space 
-        // characters
     final String padding = createPadding(nextLineTabStop);
-
     while (true)
     {
         text = padding + text.substring(pos).trim();
         pos = findWrapPos(text, width, 0);
-
         if (pos == -1)
         {
             sb.append(text);
-
             return sb;
         }
-            
         if ( (text.length() > width) && (pos == nextLineTabStop - 1) ) 
         {
             pos = width;
         }
-
         sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
     }
 }
\ No newline at end of file
