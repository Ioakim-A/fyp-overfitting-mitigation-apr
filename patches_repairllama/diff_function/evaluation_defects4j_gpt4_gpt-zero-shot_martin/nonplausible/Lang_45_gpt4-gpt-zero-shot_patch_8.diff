diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/e697bade-9b41-4b62-a137-93293e854575_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/763549ad-6e03-4023-9a4c-9238d3aceb16_fixed.java
index 27c4e77..bf52ff4 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/e697bade-9b41-4b62-a137-93293e854575_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/763549ad-6e03-4023-9a4c-9238d3aceb16_fixed.java
@@ -1,38 +1,37 @@
 public static String abbreviate(String str, int lower, int upper, String appendToEnd) {
-        // initial parameter checks
     if (str == null) {
         return null;
     }
     if (str.length() == 0) {
         return StringUtils.EMPTY;
     }
 
-        // if the lower value is greater than the length of the string,
-        // set to the length of the string
-        // if the upper value is -1 (i.e. no limit) or is greater
-        // than the length of the string, set to the length of the string
+    if (lower < 0) {
+        lower = 0;
+    }
+    if (lower > str.length()) {
+        lower = str.length();
+    }
+
     if (upper == -1 || upper > str.length()) {
         upper = str.length();
     }
-        // if upper is less than lower, raise it to lower
     if (upper < lower) {
         upper = lower;
     }
-
     StringBuffer result = new StringBuffer();
     int index = StringUtils.indexOf(str, " ", lower);
     if (index == -1) {
-            result.append(str.substring(0, upper));
-            // only if abbreviation has occured do we append the appendToEnd value
+        result.append(str.substring(lower, upper));
         if (upper != str.length()) {
             result.append(StringUtils.defaultString(appendToEnd));
         }
     } else if (index > upper) {
-            result.append(str.substring(0, upper));
+        result.append(str.substring(lower, upper));
         result.append(StringUtils.defaultString(appendToEnd));
     } else {
-            result.append(str.substring(0, index));
+        result.append(str.substring(lower, index));
         result.append(StringUtils.defaultString(appendToEnd));
     }
     return result.toString();
 }
\ No newline at end of file
