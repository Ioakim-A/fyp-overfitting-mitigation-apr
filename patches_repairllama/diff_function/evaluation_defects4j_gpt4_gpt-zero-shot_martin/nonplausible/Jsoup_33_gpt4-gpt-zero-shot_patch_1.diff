diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/0940c72f-8804-499d-82e1-ff591ba251db_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/bfc81dfa-2864-4873-9195-3ccbf66eb8a6_fixed.java
index dc93be3..0af6ae1 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/0940c72f-8804-499d-82e1-ff591ba251db_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/bfc81dfa-2864-4873-9195-3ccbf66eb8a6_fixed.java
@@ -1,14 +1,13 @@
     Element insert(Token.StartTag startTag) {
-        // handle empty unknown tags
-        // when the spec expects an empty tag, will directly hit insertEmpty, so won't generate this fake end tag.
         if (startTag.isSelfClosing()) {
             Element el = insertEmpty(startTag);
             stack.add(el);
-            tokeniser.emit(new Token.EndTag(el.tagName()));  // ensure we get out of whatever state we are in. emitted for yielded processing
+            // fixed code
+            popStackToClose(el.tagName());
+            tokeniser.emit(new Token.EndTag(el.tagName()));  
             return el;
         }
-        
         Element el = new Element(Tag.valueOf(startTag.name()), baseUri, startTag.attributes);
         insert(el);
         return el;
     }
\ No newline at end of file
