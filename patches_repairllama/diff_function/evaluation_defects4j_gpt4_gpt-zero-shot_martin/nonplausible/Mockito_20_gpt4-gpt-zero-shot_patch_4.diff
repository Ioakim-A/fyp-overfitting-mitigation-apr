diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/e60b98d3-a403-4d35-980d-8d890b842df8_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/1782f5c5-facd-45e6-893a-d78e46a99173_fixed.java
index f9a9b5b..88ccaf8 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/e60b98d3-a403-4d35-980d-8d890b842df8_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/1782f5c5-facd-45e6-893a-d78e46a99173_fixed.java
@@ -1,30 +1,30 @@
 public <T> T createMock(MockCreationSettings<T> settings, MockHandler handler) {
     if (settings.getSerializableMode() == SerializableMode.ACROSS_CLASSLOADERS) {
         throw new MockitoException("Serialization across classloaders not yet supported with ByteBuddyMockMaker");
     }
     Class<? extends T> mockedProxyType = cachingMockBytecodeGenerator.get(
             settings.getTypeToMock(),
             settings.getExtraInterfaces()
     );
     T mockInstance = null;
     try {
         mockInstance = classInstantiator.instantiate(mockedProxyType);
         MockMethodInterceptor.MockAccess mockAccess = (MockMethodInterceptor.MockAccess) mockInstance;
         mockAccess.setMockitoInterceptor(new MockMethodInterceptor(asInternalMockHandler(handler), settings));
-
         return ensureMockIsAssignableToMockedType(settings, mockInstance);
     } catch (ClassCastException cce) {
         throw new MockitoException(join(
                 "ClassCastException occurred while creating the mockito mock :",
                 "  class to mock : " + describeClass(mockedProxyType),
                 "  created class : " + describeClass(settings.getTypeToMock()),
                 "  proxy instance class : " + describeClass(mockInstance),
                 "  instance creation by : " + classInstantiator.getClass().getSimpleName(),
+                "The above information might indicate that the generated proxy class is incompatible with the class being mocked due to classloader differences."),
                 "",
                 "You might experience classloading issues, please ask the mockito mailing-list.",
                 ""
         ),cce);
     } catch (org.mockito.internal.creation.instance.InstantiationException e) {
         throw new MockitoException("Unable to create mock instance of type '" + mockedProxyType.getSuperclass().getSimpleName() + "'", e);
     }
 }
\ No newline at end of file
