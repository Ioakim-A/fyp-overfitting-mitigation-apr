diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/1465cde5-8c2d-48b3-9e46-679fa7cf95ec_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/5bd8ef05-19b5-4465-9d8d-e2c24240573f_fixed.java
index 6656ad6..3acf57f 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/1465cde5-8c2d-48b3-9e46-679fa7cf95ec_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/5bd8ef05-19b5-4465-9d8d-e2c24240573f_fixed.java
@@ -1,36 +1,33 @@
 private void init() {
     thisYear= Calendar.getInstance(timeZone, locale).get(Calendar.YEAR);
-
     nameValues= new ConcurrentHashMap<Integer, KeyValue[]>();
-
     StringBuilder regex= new StringBuilder();
     List<Strategy> collector = new ArrayList<Strategy>();
-
     Matcher patternMatcher= formatPattern.matcher(pattern);
     if(!patternMatcher.lookingAt()) {
         throw new IllegalArgumentException("Invalid pattern");
     }
-
     currentFormatField= patternMatcher.group();
     Strategy currentStrategy= getStrategy(currentFormatField);
+    Strategy nextStrategy = null;  // initialize the variable here
     for(;;) {
         patternMatcher.region(patternMatcher.end(), patternMatcher.regionEnd());
         if(!patternMatcher.lookingAt()) {
             nextStrategy = null;
             break;
         }
         String nextFormatField= patternMatcher.group();
         nextStrategy = getStrategy(nextFormatField);
         if(currentStrategy.addRegex(this, regex)) {
             collector.add(currentStrategy);
         }
         currentFormatField= nextFormatField;
         currentStrategy= nextStrategy;
     }
     if(currentStrategy.addRegex(this, regex)) {
         collector.add(currentStrategy);
     }
     currentFormatField= null;
     strategies= collector.toArray(new Strategy[collector.size()]);
     parsePattern= Pattern.compile(regex.toString());
 }
\ No newline at end of file
