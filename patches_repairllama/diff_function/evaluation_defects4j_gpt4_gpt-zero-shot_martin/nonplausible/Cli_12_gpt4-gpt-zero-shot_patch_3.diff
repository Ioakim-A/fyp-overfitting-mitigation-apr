diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/7c8cbf9f-bb0c-4b1d-9448-0bb0d46a08dd_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/61f2f4b1-a5c8-4d6e-9d06-2fc1a99d218f_fixed.java
index d7b8fbd..5615ac4 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/7c8cbf9f-bb0c-4b1d-9448-0bb0d46a08dd_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/61f2f4b1-a5c8-4d6e-9d06-2fc1a99d218f_fixed.java
@@ -1,59 +1,51 @@
 protected String[] flatten(Options options, String[] arguments, boolean stopAtNonOption)
 {
-        List tokens = new ArrayList();
-
+    List<String> tokens = new ArrayList<>();
     boolean eatTheRest = false;
-
     for (int i = 0; i < arguments.length; i++)
     {
         String arg = arguments[i];
-
         if ("--".equals(arg))
         {
             eatTheRest = true;
             tokens.add("--");
         }
         else if ("-".equals(arg))
         {
             tokens.add("-");
         }
         else if (arg.startsWith("-"))
         {
             String opt = Util.stripLeadingHyphens(arg);
-
             if (options.hasOption(opt))
             {
                 tokens.add(arg);
             }
             else
             {
-                    if (options.hasOption(arg.substring(0, 2)))
+                if (options.getOptions().stream().anyMatch(option -> option.getOpt().startsWith(arg)))
                 {
-                        // the format is --foo=value or -foo=value
-                        // the format is a special properties option (-Dproperty=value)
-                        tokens.add(arg.substring(0, 2)); // -D
-                        tokens.add(arg.substring(2)); // property=value
+                    tokens.add(arg.substring(0, 2)); 
+                    tokens.add(arg.substring(2)); 
                 }
                 else
                 {
                     eatTheRest = stopAtNonOption;
                     tokens.add(arg);
                 }
             }
         }
         else
         {
             tokens.add(arg);
         }
-
         if (eatTheRest)
         {
             for (i++; i < arguments.length; i++)
             {
                 tokens.add(arguments[i]);
             }
         }
     }
-
-        return (String[]) tokens.toArray(new String[tokens.size()]);
+    return tokens.toArray(new String[0]);
 }
\ No newline at end of file
