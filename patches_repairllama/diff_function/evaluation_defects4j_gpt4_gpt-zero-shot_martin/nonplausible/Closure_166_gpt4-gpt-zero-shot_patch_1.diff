diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/eb684ca8-5135-4de5-8727-77aa2676fd39_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/e839c798-e2f7-402c-affd-4068e7c0ae76_fixed.java
index 70ac830..c7464a3 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/eb684ca8-5135-4de5-8727-77aa2676fd39_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/e839c798-e2f7-402c-affd-4068e7c0ae76_fixed.java
@@ -1,19 +1,10 @@
 public void matchConstraint(JSType constraint) {
-    // We only want to match constraints on anonymous types.
     if (hasReferenceName()) {
       return;
     }
-
-    // Handle the case where the constraint object is a record type.
-    //
-    // param constraint {{prop: (number|undefined)}}
-    // function f(constraint) {}
-    // f({});
-    //
-    // We want to modify the object literal to match the constraint, by
-    // taking any each property on the record and trying to match
-    // properties on this object.
     if (constraint.isRecordType()) {
       matchRecordTypeConstraint(constraint.toObjectType());
+    } else {
+      throw new IllegalArgumentException("Non-record type passed to matchConstraint");
     }
 }
\ No newline at end of file
