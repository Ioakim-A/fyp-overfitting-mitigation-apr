diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/96fe2ee6-ff68-45bc-b506-e7e415942e1e_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/8e2ea120-05c5-4cd6-822e-99cbbc31a2ed_fixed.java
index d2fcb52..a54129c 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/96fe2ee6-ff68-45bc-b506-e7e415942e1e_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/8e2ea120-05c5-4cd6-822e-99cbbc31a2ed_fixed.java
@@ -1,50 +1,35 @@
 public static long parseOctal(final byte[] buffer, final int offset, final int length) {
     long    result = 0;
     int     end = offset + length;
     int     start = offset;
-
     if (length < 2){
         throw new IllegalArgumentException("Length "+length+" must be at least 2");
     }
-
     if (buffer[start] == 0) {
         return 0L;
     }
-
-        // Skip leading spaces
     while (start < end){
         if (buffer[start] == ' '){
             start++;
         } else {
             break;
         }
     }
-
-        // Must have trailing NUL or space
     byte trailer;
     trailer = buffer[end-1];
     if (trailer == 0 || trailer == ' '){
         end--;
     } else {
         throw new IllegalArgumentException(
                 exceptionMessage(buffer, offset, length, end-1, trailer));
     }
-        // May have additional NULs or spaces
-        trailer = buffer[end - 1];
-        if (trailer == 0 || trailer == ' '){
-            end--;
-        }
-
     for ( ;start < end; start++) {
         final byte currentByte = buffer[start];
-            // CheckStyle:MagicNumber OFF
         if (currentByte < '0' || currentByte > '7'){
             throw new IllegalArgumentException(
                     exceptionMessage(buffer, offset, length, start, currentByte));
         }
-            result = (result << 3) + (currentByte - '0'); // convert from ASCII
-            // CheckStyle:MagicNumber ON
+        result = (result << 3) + (currentByte - '0'); 
     }
-
     return result;
 }
\ No newline at end of file
