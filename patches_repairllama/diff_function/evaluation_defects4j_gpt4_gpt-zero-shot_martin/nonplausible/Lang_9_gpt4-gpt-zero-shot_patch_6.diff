diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/1899a867-a258-42c5-8a87-9a3e64687bf0_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/544787ed-2977-4834-bfd7-ac0231207495_fixed.java
index 6656ad6..8b8c16e 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/1899a867-a258-42c5-8a87-9a3e64687bf0_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/544787ed-2977-4834-bfd7-ac0231207495_fixed.java
@@ -1,36 +1,34 @@
     private void init() {
         thisYear = Calendar.getInstance(timeZone, locale).get(Calendar.YEAR);
-
         nameValues = new ConcurrentHashMap<Integer, KeyValue[]>();
-
         StringBuilder regex = new StringBuilder();
         List<Strategy> collector = new ArrayList<Strategy>();
-
         Matcher patternMatcher = formatPattern.matcher(pattern);
         if(!patternMatcher.lookingAt()) {
             throw new IllegalArgumentException("Invalid pattern");
         }
-
         currentFormatField = patternMatcher.group();
         Strategy currentStrategy = getStrategy(currentFormatField);
         for(;;) {
             patternMatcher.region(patternMatcher.end(), patternMatcher.regionEnd());
             if(!patternMatcher.lookingAt()) {
                 nextStrategy = null;
                 break;
             }
             String nextFormatField = patternMatcher.group();
             nextStrategy = getStrategy(nextFormatField);
             if(currentStrategy.addRegex(this, regex)) {
                 collector.add(currentStrategy);
             }
             currentFormatField = nextFormatField;
             currentStrategy = nextStrategy;
         }
+        // fixed code
+        nextStrategy = null;
         if(currentStrategy.addRegex(this, regex)) {
             collector.add(currentStrategy);
         }
         currentFormatField = null;
         strategies = collector.toArray(new Strategy[collector.size()]);
         parsePattern = Pattern.compile(regex.toString());
     }
\ No newline at end of file
