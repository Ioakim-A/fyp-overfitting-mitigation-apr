diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/a36149ce-8029-41d1-83cb-570e57d1d2c9_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/e8643f50-509f-4d9b-8a22-568a83165034_fixed.java
index 4864541..baffb71 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/a36149ce-8029-41d1-83cb-570e57d1d2c9_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/e8643f50-509f-4d9b-8a22-568a83165034_fixed.java
@@ -1,18 +1,19 @@
 public int[] add(ReadablePartial partial, int fieldIndex, int[] values, int valueToAdd) {
-        // overridden as superclass algorithm can't handle
-        // 2004-02-29 + 48 months -> 2008-02-29 type dates
     if (valueToAdd == 0) {
         return values;
     } 
-            // month is largest field and being added to, such as month-day
+    // Assuming we need to increment the field at the fieldIndex by valueToAdd
+    else {
+        values[fieldIndex] += valueToAdd;
+    }
     if (DateTimeUtils.isContiguous(partial)) {
         long instant = 0L;
         for (int i = 0, isize = partial.size(); i < isize; i++) {
             instant = partial.getFieldType(i).getField(iChronology).set(instant, values[i]);
         }
         instant = add(instant, valueToAdd);
         return iChronology.get(partial, instant);
     } else {
         return super.add(partial, fieldIndex, values, valueToAdd);
     }
 }
\ No newline at end of file
