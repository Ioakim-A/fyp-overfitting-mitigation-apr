diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/c7acd3f1-1aa7-4c11-82cd-9f0d02eb6f43_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/39e824d2-821b-4eec-9eb0-64a29d353566_fixed.java
index 9a147f0..75ff96b 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/c7acd3f1-1aa7-4c11-82cd-9f0d02eb6f43_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/39e824d2-821b-4eec-9eb0-64a29d353566_fixed.java
@@ -1,20 +1,21 @@
     private static PeriodFormatter toFormatter(List<Object> elementPairs, boolean notPrinter, boolean notParser) {
         if (notPrinter && notParser) {
             throw new IllegalStateException("Builder has created neither a printer nor a parser");
         }
         int size = elementPairs.size();
         if (size >= 2 && elementPairs.get(0) instanceof Separator) {
             Separator sep = (Separator) elementPairs.get(0);
             PeriodFormatter f = toFormatter(elementPairs.subList(2, size), notPrinter, notParser);
-                sep = sep.finish(f.getPrinter(), f.getParser());
-                return new PeriodFormatter(sep, sep);
+            PeriodPrinter printer = (notPrinter) ? null : sep.finish(f.getPrinter(), null);
+            PeriodParser parser = (notParser) ? null : sep.finish(null, f.getParser());
+            return new PeriodFormatter(printer, parser);
         }
         Object[] comp = createComposite(elementPairs);
         if (notPrinter) {
             return new PeriodFormatter(null, (PeriodParser) comp[1]);
         } else if (notParser) {
             return new PeriodFormatter((PeriodPrinter) comp[0], null);
         } else {
             return new PeriodFormatter((PeriodPrinter) comp[0], (PeriodParser) comp[1]);
         }
     }
\ No newline at end of file
