diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/6f48f5a2-e232-4176-b4da-f13d1bdfc3e6_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/98c06faa-4a29-4ec1-9c82-0603a62d2ad3_fixed.java
index 8cbef3b..5781904 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/6f48f5a2-e232-4176-b4da-f13d1bdfc3e6_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/98c06faa-4a29-4ec1-9c82-0603a62d2ad3_fixed.java
@@ -1,30 +1,27 @@
 public final void translate(CharSequence input, Writer out) throws IOException {
     if (out == null) {
         throw new IllegalArgumentException("The Writer must not be null");
     }
     if (input == null) {
         return;
     }
     int pos = 0;
-        int len = Character.codePointCount(input, 0, input.length());
+    int len = input.length();
     while (pos < len) {
-            int consumed = translate(input, pos, out);
+        char currentChar = input.charAt(pos);
+        int consumed = translate(currentChar, out);
         if (consumed == 0) {
-                char[] c = Character.toChars(Character.codePointAt(input, pos));
-                out.write(c);
+            out.write(currentChar);
+            pos++;
         }
         else {
-//          // contract with translators is that they have to understand codepoints 
-//          // and they just took care of a surrogate pair
-            for (int pt = 0; pt < consumed; pt++) {
-                    if (pos < len - 2) {
-                pos += Character.charCount(Character.codePointAt(input, pos));
-                    } else {
-                        pos++;
+            pos += consumed;
         }
     }
-                pos--;
-            }
-            pos++;
 }
+
+// consider to have a translate method as follows:
+public int translate(char inputChar, Writer out) throws IOException {
+    // implement the logic to translate a single character
+    // and return the number of characters consumed in the input.
 }
\ No newline at end of file
