diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/da396d46-109a-4870-8005-0cfde00eca84_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/cbbea0f0-fa4e-495c-88bc-d6134a0c66be_fixed.java
index 6656ad6..ce7389a 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/da396d46-109a-4870-8005-0cfde00eca84_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/cbbea0f0-fa4e-495c-88bc-d6134a0c66be_fixed.java
@@ -1,36 +1,34 @@
 private void init() {
     thisYear= Calendar.getInstance(timeZone, locale).get(Calendar.YEAR);
-
     nameValues= new ConcurrentHashMap<Integer, KeyValue[]>();
-
     StringBuilder regex= new StringBuilder();
     List<Strategy> collector = new ArrayList<Strategy>();
-
     Matcher patternMatcher= formatPattern.matcher(pattern);
     if(!patternMatcher.lookingAt()) {
         throw new IllegalArgumentException("Invalid pattern");
     }
-
     currentFormatField= patternMatcher.group();
     Strategy currentStrategy= getStrategy(currentFormatField);
     for(;;) {
         patternMatcher.region(patternMatcher.end(), patternMatcher.regionEnd());
         if(!patternMatcher.lookingAt()) {
             nextStrategy = null;
             break;
         }
         String nextFormatField= patternMatcher.group();
         nextStrategy = getStrategy(nextFormatField);
         if(currentStrategy.addRegex(this, regex)) {
             collector.add(currentStrategy);
         }
         currentFormatField= nextFormatField;
         currentStrategy= nextStrategy;
     }
-        if(currentStrategy.addRegex(this, regex)) {
+// corrected code
+// 
+    if(currentStrategy != null && currentStrategy.addRegex(this, regex)) {
         collector.add(currentStrategy);
     }
     currentFormatField= null;
     strategies= collector.toArray(new Strategy[collector.size()]);
     parsePattern= Pattern.compile(regex.toString());
 }
\ No newline at end of file
