diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/da4c9793-709b-4d42-b152-73b83ff375b6_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/3cbbea64-fca5-49e9-9cdd-08b020a44cd2_fixed.java
index 511560e..cc8681f 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/da4c9793-709b-4d42-b152-73b83ff375b6_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/3cbbea64-fca5-49e9-9cdd-08b020a44cd2_fixed.java
@@ -1,21 +1,33 @@
+    private Stack<String> stack; // assuming it has been initialized somewhere
+    private final int MaxScopeSearchDepth = 5; // assuming it's a constant value
+
     private boolean inSpecificScope(String[] targetNames, String[] baseTypes, String[] extraTypes) {
-        // https://html.spec.whatwg.org/multipage/parsing.html#has-an-element-in-the-specific-scope
         int bottom = stack.size() -1;
         if (bottom > MaxScopeSearchDepth) {
             bottom = MaxScopeSearchDepth;
         }
+        // the above lines can be simplified as below
+        // int bottom = Math.min(stack.size() - 1, MaxScopeSearchDepth);
+        
         final int top = bottom > MaxScopeSearchDepth ? bottom - MaxScopeSearchDepth : 0;
-        // don't walk too far up the tree
-
         for (int pos = bottom; pos >= top; pos--) {
-            final String elName = stack.get(pos).nodeName();
+            final String elName = stack.get(pos);
             if (inSorted(elName, targetNames))
                 return true;
             if (inSorted(elName, baseTypes))
                 return false;
             if (extraTypes != null && inSorted(elName, extraTypes))
                 return false;
         }
-        //Validate.fail("Should not be reachable"); // would end up false because hitting 'html' at root (basetypes)
+        return false;
+    }
+
+    // assuming inSorted function looks like below
+    private boolean inSorted(String target, String[] list) {
+        for (String item : list) {
+            if (item.equals(target)) {
+                return true;
+            }
+        }
         return false;
     }
\ No newline at end of file
