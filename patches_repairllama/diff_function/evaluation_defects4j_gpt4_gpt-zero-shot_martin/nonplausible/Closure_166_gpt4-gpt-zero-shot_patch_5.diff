diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/6870fb53-06f0-48c0-a526-7cd322d91e45_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/a388dc56-68f1-4bf6-8438-0c1b986b08aa_fixed.java
index 70ac830..d41a5e4 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/6870fb53-06f0-48c0-a526-7cd322d91e45_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/a388dc56-68f1-4bf6-8438-0c1b986b08aa_fixed.java
@@ -1,19 +1,10 @@
 public void matchConstraint(JSType constraint) {
-    // We only want to match constraints on anonymous types.
   if (hasReferenceName()) {
     return;
   }
-
-    // Handle the case where the constraint object is a record type.
-    //
-    // param constraint {{prop: (number|undefined)}}
-    // function f(constraint) {}
-    // f({});
-    //
-    // We want to modify the object literal to match the constraint, by
-    // taking any each property on the record and trying to match
-    // properties on this object.
   if (constraint.isRecordType()) {
     matchRecordTypeConstraint(constraint.toObjectType());
+  } else {
+    matchNonRecordTypeConstraint(constraint);
   }
 }
\ No newline at end of file
