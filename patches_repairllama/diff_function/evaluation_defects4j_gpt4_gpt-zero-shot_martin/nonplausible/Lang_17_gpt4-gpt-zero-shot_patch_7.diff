diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/9c87c6a4-e535-4742-b928-e80f0d6ff84e_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/4abfce1a-a4cb-4a60-a207-e2be18e62e32_fixed.java
index 8cbef3b..a6bd5be 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/9c87c6a4-e535-4742-b928-e80f0d6ff84e_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/4abfce1a-a4cb-4a60-a207-e2be18e62e32_fixed.java
@@ -1,30 +1,21 @@
     public final void translate(CharSequence input, Writer out) throws IOException {
         if (out == null) {
             throw new IllegalArgumentException("The Writer must not be null");
         }
         if (input == null) {
             return;
         }
         int pos = 0;
-        int len = Character.codePointCount(input, 0, input.length());
+        int len = input.length();
         while (pos < len) {
             int consumed = translate(input, pos, out);
             if (consumed == 0) {
                 char[] c = Character.toChars(Character.codePointAt(input, pos));
                 out.write(c);
+                pos+= c.length;
             }
             else {
-//          // contract with translators is that they have to understand codepoints 
-//          // and they just took care of a surrogate pair
-            for (int pt = 0; pt < consumed; pt++) {
-                    if (pos < len - 2) {
-                pos += Character.charCount(Character.codePointAt(input, pos));
-                    } else {
-                        pos++;
+                pos+= consumed;
             }
         }
-                pos--;
-            }
-            pos++;
-        }
     }
\ No newline at end of file
