diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/6fd2cedd-86ef-4a56-9d86-4b3fc12a8fe7_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/58b9a8c5-54c3-4139-bf28-b37b2ab13864_fixed.java
index b7878af..46923fa 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/6fd2cedd-86ef-4a56-9d86-4b3fc12a8fe7_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/58b9a8c5-54c3-4139-bf28-b37b2ab13864_fixed.java
@@ -1,30 +1,26 @@
     protected RealPointValuePair getSolution() {
       int negativeVarColumn = columnLabels.indexOf(NEGATIVE_VAR_COLUMN_LABEL);
       Integer negativeVarBasicRow = negativeVarColumn > 0 ? getBasicRow(negativeVarColumn) : null;
       double mostNegative = negativeVarBasicRow == null ? 0 : getEntry(negativeVarBasicRow, getRhsOffset());
-
       Set<Integer> basicRows = new HashSet<Integer>();
       double[] coefficients = new double[getOriginalNumDecisionVariables()];
       for (int i = 0; i < coefficients.length; i++) {
           int colIndex = columnLabels.indexOf("x" + i);
           if (colIndex < 0) {
             coefficients[i] = 0;
             continue;
           }
           Integer basicRow = getBasicRow(colIndex);
-              // if the basic row is found to be the objective function row
-              // set the coefficient to 0 -> this case handles unconstrained 
-              // variables that are still part of the objective function
-          if (basicRows.contains(basicRow)) {
-              // if multiple variables can take a given value
-              // then we choose the first and set the rest equal to 0
+          if (basicRow != null && basicRows.contains(basicRow)) {
               coefficients[i] = 0 - (restrictToNonNegative ? 0 : mostNegative);
           } else {
+              if (basicRow != null) {
                   basicRows.add(basicRow);
+              }
               coefficients[i] =
                   (basicRow == null ? 0 : getEntry(basicRow, getRhsOffset())) -
                   (restrictToNonNegative ? 0 : mostNegative);
           }
       }
       return new RealPointValuePair(coefficients, f.getValue(coefficients));
     }
\ No newline at end of file
