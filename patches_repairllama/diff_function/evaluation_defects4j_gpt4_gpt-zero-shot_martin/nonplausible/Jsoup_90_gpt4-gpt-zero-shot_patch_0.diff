diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/f8bfac70-6b6d-48a3-a021-79863801575d_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/3f687de4-db9f-4358-8409-893ca606fa73_fixed.java
index 373b1e8..609d635 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/f8bfac70-6b6d-48a3-a021-79863801575d_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/3f687de4-db9f-4358-8409-893ca606fa73_fixed.java
@@ -1,37 +1,34 @@
 private static boolean looksLikeUtf8(byte[] input) {
     int i = 0;
-            // BOM:
     if (input.length >= 3 && (input[0] & 0xFF) == 0xEF
-                && (input[1] & 0xFF) == 0xBB & (input[2] & 0xFF) == 0xBF) {
+        && (input[1] & 0xFF) == 0xBB && (input[2] & 0xFF) == 0xBF) {
         i = 3;
     }
-
     int end;
     for (int j = input.length; i < j; ++i) {
         int o = input[i];
         if ((o & 0x80) == 0) {
-                    continue; // ASCII
+            continue; 
         }
-
-                // UTF-8 leading:
         if ((o & 0xE0) == 0xC0) {
             end = i + 1;
         } else if ((o & 0xF0) == 0xE0) {
             end = i + 2;
         } else if ((o & 0xF8) == 0xF0) {
             end = i + 3;
         } else {
             return false;
         }
-
-
+        if (end > input.length) {
+            return false;
+        }
         while (i < end) {
             i++;
             o = input[i];
             if ((o & 0xC0) != 0x80) {
                 return false;
             }
         }
     }
     return true;
 }
\ No newline at end of file
