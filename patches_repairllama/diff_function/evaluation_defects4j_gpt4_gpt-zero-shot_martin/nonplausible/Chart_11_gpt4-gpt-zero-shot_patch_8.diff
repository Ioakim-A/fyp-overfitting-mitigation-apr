diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/67867de7-c617-4d78-ae7b-ddf40b026fa5_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/94fa87a6-4437-4ab6-b7d9-5f3f617a3dbf_fixed.java
index 4ae5431..0d00842 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/67867de7-c617-4d78-ae7b-ddf40b026fa5_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/94fa87a6-4437-4ab6-b7d9-5f3f617a3dbf_fixed.java
@@ -1,33 +1,34 @@
 public static boolean equal(GeneralPath p1, GeneralPath p2) {
     if (p1 == null) {
         return (p2 == null);
     }
     if (p2 == null) {
         return false;
     }
     if (p1.getWindingRule() != p2.getWindingRule()) {
         return false;
     }
     PathIterator iterator1 = p1.getPathIterator(null);
-        PathIterator iterator2 = p1.getPathIterator(null);
+    // fixed code
+    PathIterator iterator2 = p2.getPathIterator(null);
     double[] d1 = new double[6];
     double[] d2 = new double[6];
     boolean done = iterator1.isDone() && iterator2.isDone();
     while (!done) {
         if (iterator1.isDone() != iterator2.isDone()) {
             return false;
         }
         int seg1 = iterator1.currentSegment(d1);
         int seg2 = iterator2.currentSegment(d2);
         if (seg1 != seg2) {
             return false;
         }
         if (!Arrays.equals(d1, d2)) {
             return false;
         }
         iterator1.next();
         iterator2.next();
         done = iterator1.isDone() && iterator2.isDone();
     }
     return true;
 }
\ No newline at end of file
