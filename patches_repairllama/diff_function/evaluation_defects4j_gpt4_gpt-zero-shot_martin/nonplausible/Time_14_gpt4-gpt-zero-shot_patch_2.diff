diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/56892904-f201-4686-8cb1-bf3e717de5d6_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/5e40c6fc-0cbd-4c69-b270-4c098a6a1d46_fixed.java
index 4864541..eb1f1f5 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/56892904-f201-4686-8cb1-bf3e717de5d6_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/5e40c6fc-0cbd-4c69-b270-4c098a6a1d46_fixed.java
@@ -1,18 +1,19 @@
 public int[] add(ReadablePartial partial, int fieldIndex, int[] values, int valueToAdd) {
-        // overridden as superclass algorithm can't handle
-        // 2004-02-29 + 48 months -> 2008-02-29 type dates
     if (valueToAdd == 0) {
         return values;
     }
-            // month is largest field and being added to, such as month-day
+    // fixed code
+    if (fieldIndex < 0 || fieldIndex >= values.length) {
+        throw new IndexOutOfBoundsException("Field index out of bounds");
+    }
     if (DateTimeUtils.isContiguous(partial)) {
         long instant = 0L;
         for (int i = 0, isize = partial.size(); i < isize; i++) {
             instant = partial.getFieldType(i).getField(iChronology).set(instant, values[i]);
         }
         instant = add(instant, valueToAdd);
         return iChronology.get(partial, instant);
     } else {
         return super.add(partial, fieldIndex, values, valueToAdd);
     }
 }
\ No newline at end of file
