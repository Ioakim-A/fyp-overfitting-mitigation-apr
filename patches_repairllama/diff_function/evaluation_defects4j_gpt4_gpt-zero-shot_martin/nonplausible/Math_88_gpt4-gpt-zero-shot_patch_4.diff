diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/167bf7c3-7213-4163-a718-d2377cc1f3af_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/4e080fe9-22a1-4a6d-b896-7985bd48be56_fixed.java
index 8733f51..51dd394 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/167bf7c3-7213-4163-a718-d2377cc1f3af_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/4e080fe9-22a1-4a6d-b896-7985bd48be56_fixed.java
@@ -1,22 +1,21 @@
     protected RealPointValuePair getSolution() {
         double[] coefficients = new double[getOriginalNumDecisionVariables()];
         Integer basicRow =
             getBasicRow(getNumObjectiveFunctions() + getOriginalNumDecisionVariables());
         double mostNegative = basicRow == null ? 0 : getEntry(basicRow, getRhsOffset());
+
         for (int i = 0; i < coefficients.length; i++) {
             basicRow = getBasicRow(getNumObjectiveFunctions() + i);
-                // if multiple variables can take a given value 
-                // then we choose the first and set the rest equal to 0
             coefficients[i] =
                 (basicRow == null ? 0 : getEntry(basicRow, getRhsOffset())) -
                 (restrictToNonNegative ? 0 : mostNegative);
             if (basicRow != null) {
-                for (int j = getNumObjectiveFunctions(); j < getNumObjectiveFunctions() + i; j++) {
-                    if (tableau.getEntry(basicRow, j) == 1) {
+                for (int j = getNumObjectiveFunctions(); j < getNumObjectiveFunctions() + coefficients.length; j++) {
+                    if (Math.abs(tableau.getEntry(basicRow, j) - 1) < 0.000001) {
                         coefficients[i] = 0;
                     }
                 }
             }
         }
         return new RealPointValuePair(coefficients, f.getValue(coefficients));
     }
\ No newline at end of file
