diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/6a59580c-917c-4f7c-a832-dd6dceb98e8f_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/c5f7c458-29d4-489d-9f56-1c9ca2fcbb07_fixed.java
index be053eb..048d2eb 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/6a59580c-917c-4f7c-a832-dd6dceb98e8f_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/c5f7c458-29d4-489d-9f56-1c9ca2fcbb07_fixed.java
@@ -1,39 +1,24 @@
     public void atan2(final double[] y, final int yOffset,
                       final double[] x, final int xOffset,
                       final double[] result, final int resultOffset) {
-
-        // compute r = sqrt(x^2+y^2)
         double[] tmp1 = new double[getSize()];
-        multiply(x, xOffset, x, xOffset, tmp1, 0);      // x^2
+        multiply(x, xOffset, x, xOffset, tmp1, 0);      
         double[] tmp2 = new double[getSize()];
-        multiply(y, yOffset, y, yOffset, tmp2, 0);      // y^2
-        add(tmp1, 0, tmp2, 0, tmp2, 0);                 // x^2 + y^2
-        rootN(tmp2, 0, 2, tmp1, 0);                     // r = sqrt(x^2 + y^2)
-
-        if (x[xOffset] >= 0) {
-
-            // compute atan2(y, x) = 2 atan(y / (r + x))
-            add(tmp1, 0, x, xOffset, tmp2, 0);          // r + x
-            divide(y, yOffset, tmp2, 0, tmp1, 0);       // y /(r + x)
-            atan(tmp1, 0, tmp2, 0);                     // atan(y / (r + x))
-            for (int i = 0; i < tmp2.length; ++i) {
-                result[resultOffset + i] = 2 * tmp2[i]; // 2 * atan(y / (r + x))
-            }
-
+        multiply(y, yOffset, y, yOffset, tmp2, 0);      
+        add(tmp1, 0, tmp2, 0, tmp2, 0);                 
+        rootN(tmp2, 0, 2, tmp1, 0);                     
+        for (int i = 0; i < tmp1.length; ++i) {
+            if (x[xOffset + i] >= 0) {
+                add(tmp1, i, x, xOffset + i, tmp2, i);          
+                divide(y, yOffset + i, tmp2, i, tmp1, i);       
+                atan(tmp1, i, tmp2, i);                     
+                result[resultOffset + i] = 2 * tmp2[i]; 
             } else {
-
-            // compute atan2(y, x) = +/- pi - 2 atan(y / (r - x))
-            subtract(tmp1, 0, x, xOffset, tmp2, 0);     // r - x
-            divide(y, yOffset, tmp2, 0, tmp1, 0);       // y /(r - x)
-            atan(tmp1, 0, tmp2, 0);                     // atan(y / (r - x))
-            result[resultOffset] =
-                    ((tmp2[0] <= 0) ? -FastMath.PI : FastMath.PI) - 2 * tmp2[0]; // +/-pi - 2 * atan(y / (r - x))
-            for (int i = 1; i < tmp2.length; ++i) {
-                result[resultOffset + i] = -2 * tmp2[i]; // +/-pi - 2 * atan(y / (r - x))
+                subtract(tmp1, i, x, xOffset + i, tmp2, i);     
+                divide(y, yOffset + i, tmp2, i, tmp1, i);       
+                atan(tmp1, i, tmp2, i);                     
+                result[resultOffset + i] =
+                        ((tmp2[i] <= 0) ? -FastMath.PI : FastMath.PI) - 2 * tmp2[i]; 
             }
-
         }
-
-        // fix value to take special cases (+0/+0, +0/-0, -0/+0, -0/-0, +/-infinity) correctly
-
     }
\ No newline at end of file
