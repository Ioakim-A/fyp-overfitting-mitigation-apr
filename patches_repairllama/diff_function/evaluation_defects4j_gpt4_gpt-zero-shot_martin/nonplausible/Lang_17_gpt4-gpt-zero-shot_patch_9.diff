diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/6fb958be-1f19-4751-a0c6-a686b7fd55d9_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/cb826eb1-40e7-44a8-91cc-49c4cbec03f6_fixed.java
index 8cbef3b..cfdfa24 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/6fb958be-1f19-4751-a0c6-a686b7fd55d9_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/cb826eb1-40e7-44a8-91cc-49c4cbec03f6_fixed.java
@@ -1,30 +1,27 @@
 public final void translate(CharSequence input, Writer out) throws IOException {
     if (out == null) {
         throw new IllegalArgumentException("The Writer must not be null");
     }
     if (input == null) {
         return;
     }
     int pos = 0;
     int len = Character.codePointCount(input, 0, input.length());
     while (pos < len) {
-            int consumed = translate(input, pos, out);
+        int consumed = translateCodepoint(input, pos, out);
         if (consumed == 0) {
             char[] c = Character.toChars(Character.codePointAt(input, pos));
             out.write(c);
+            pos += Character.charCount(Character.codePointAt(input, pos));
         }
         else {
-//          // contract with translators is that they have to understand codepoints 
-//          // and they just took care of a surrogate pair
             for (int pt = 0; pt < consumed; pt++) {
-                    if (pos < len - 2) {
+                if (pos < len - 1) {
                     pos += Character.charCount(Character.codePointAt(input, pos));
                 } else {
                     pos++;
                 }
             }
-                pos--;
         }
-            pos++;
     }
 }
\ No newline at end of file
