diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/c0c87984-ebbf-47f1-8d09-de197ff6799b_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/28211039-c2e2-4fc7-8377-62e3a6e89668_fixed.java
index b98f0a7..cb6ebb5 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/c0c87984-ebbf-47f1-8d09-de197ff6799b_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/28211039-c2e2-4fc7-8377-62e3a6e89668_fixed.java
@@ -1,29 +1,29 @@
   private FlowScope traverseNew(Node n, FlowScope scope) {
-
     Node constructor = n.getFirstChild();
     scope = traverse(constructor, scope);
     JSType constructorType = constructor.getJSType();
     JSType type = null;
     if (constructorType != null) {
       constructorType = constructorType.restrictByNotNullOrUndefined();
       if (constructorType.isUnknownType()) {
         type = getNativeType(UNKNOWN_TYPE);
+      } else {
+        if (constructorType instanceof FunctionType) {
+          FunctionType ct = (FunctionType) constructorType;
+          if (ct != null && ct.isConstructor()) {
+            type = ct.getInstanceType();
+          }
         } else {
           FunctionType ct = constructorType.toMaybeFunctionType();
-        if (ct == null && constructorType instanceof FunctionType) {
-          // If constructorType is a NoObjectType, then toMaybeFunctionType will
-          // return null. But NoObjectType implements the FunctionType
-          // interface, precisely because it can validly construct objects.
-          ct = (FunctionType) constructorType;
-        }
           if (ct != null && ct.isConstructor()) {
             type = ct.getInstanceType();
           }
         }
       }
+    }
     n.setJSType(type);
     for (Node arg = constructor.getNext(); arg != null; arg = arg.getNext()) {
       scope = traverse(arg, scope);
     }
     return scope;
   }
\ No newline at end of file
