diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/325babc8-2aa3-4767-96b1-79ea411caaae_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/6e3732dc-4313-4543-baf5-684ad3679071_fixed.java
index dc93be3..8c0c8e9 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/325babc8-2aa3-4767-96b1-79ea411caaae_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/6e3732dc-4313-4543-baf5-684ad3679071_fixed.java
@@ -1,14 +1,12 @@
     Element insert(Token.StartTag startTag) {
-        // handle empty unknown tags
-        // when the spec expects an empty tag, will directly hit insertEmpty, so won't generate this fake end tag.
         if (startTag.isSelfClosing()) {
             Element el = insertEmpty(startTag);
             stack.add(el);
-            tokeniser.emit(new Token.EndTag(el.tagName()));  // ensure we get out of whatever state we are in. emitted for yielded processing
+           tokeniser.transition(TokeniserState.Data);
+            tokeniser.emit(new Token.EndTag(el.tagName()));  
             return el;
         }
-        
         Element el = new Element(Tag.valueOf(startTag.name()), baseUri, startTag.attributes);
         insert(el);
         return el;
     }
