diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/a2fcc576-d6ae-4f08-b381-d77dd5680cf0_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/a5d05977-5fe2-4c8b-b507-ad3b0ba060f9_fixed.java
index e404855..b0a64d8 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/a2fcc576-d6ae-4f08-b381-d77dd5680cf0_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/a5d05977-5fe2-4c8b-b507-ad3b0ba060f9_fixed.java
@@ -1,15 +1,15 @@
   private void findCalledFunctions(
       Node node, Set<String> changed) {
     Preconditions.checkArgument(changed != null);
-    // For each referenced function, add a new reference
-    if (node.getType() == Token.CALL) {
+   if (node.getType() == Token.CALL || node.getType() == Token.NEW) {
       Node child = node.getFirstChild();
       if (child.getType() == Token.NAME) {
         changed.add(child.getString());
+      } else if (child.getType() == Token.GETPROP) {
+        changed.add(child.getFirstChild().getQualifiedName());
       }
     }
-
     for (Node c = node.getFirstChild(); c != null; c = c.getNext()) {
       findCalledFunctions(c, changed);
     }
   }
