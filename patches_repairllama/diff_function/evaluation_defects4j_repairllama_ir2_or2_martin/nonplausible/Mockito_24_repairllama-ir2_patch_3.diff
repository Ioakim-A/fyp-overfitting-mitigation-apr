diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/cf8ba998-6ee7-47f5-845d-be536a41e80f_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/2ad7b4ec-129b-4f6e-9a19-c1d2522a6c9a_fixed.java
index 654abbf..b1a45d1 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/cf8ba998-6ee7-47f5-845d-be536a41e80f_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/2ad7b4ec-129b-4f6e-9a19-c1d2522a6c9a_fixed.java
@@ -1,19 +1,15 @@
     public Object answer(InvocationOnMock invocation) {
         if (methodsGuru.isToString(invocation.getMethod())) {
             Object mock = invocation.getMock();
             MockName name = mockUtil.getMockName(mock);
             if (name.isDefault()) {
                 return "Mock for " + mockUtil.getMockSettings(mock).getTypeToMock().getSimpleName() + ", hashCode: " + mock.hashCode();
             } else {
                 return name.toString();
             }
         } else if (methodsGuru.isCompareToMethod(invocation.getMethod())) {
-            //see issue 184.
-            //mocks by default should return 0 if references are the same, otherwise some other value because they are not the same. Hence we return 1 (anything but 0 is good).
-            //Only for compareTo() method by the Comparable interface
-            return 1;
+           return Integer.MAX_VALUE;
         }
-        
         Class<?> returnType = invocation.getMethod().getReturnType();
         return returnValueFor(returnType);
     }
