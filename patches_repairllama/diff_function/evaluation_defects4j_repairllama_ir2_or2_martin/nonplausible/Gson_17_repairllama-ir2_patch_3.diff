diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/bd5ace27-0052-4e39-b10c-d6bfe5825c3e_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/40b882ef-c602-43c8-92c8-eb909cbcfb66_fixed.java
index 44d6cc6..665bcef 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/bd5ace27-0052-4e39-b10c-d6bfe5825c3e_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/40b882ef-c602-43c8-92c8-eb909cbcfb66_fixed.java
@@ -1,16 +1,15 @@
   public Date read(JsonReader in) throws IOException {
-    if (in.peek() != JsonToken.STRING) {
-      throw new JsonParseException("The date should be a string value");
+   if (in.peek() != JsonToken.STRING && in.peek() != JsonToken.NUMBER) {
+      throw new JsonParseException("The date should be a string or number value");
     }
     Date date = deserializeToDate(in.nextString());
     if (dateType == Date.class) {
       return date;
     } else if (dateType == Timestamp.class) {
       return new Timestamp(date.getTime());
     } else if (dateType == java.sql.Date.class) {
       return new java.sql.Date(date.getTime());
     } else {
-      // This must never happen: dateType is guarded in the primary constructor
       throw new AssertionError();
     }
   }
