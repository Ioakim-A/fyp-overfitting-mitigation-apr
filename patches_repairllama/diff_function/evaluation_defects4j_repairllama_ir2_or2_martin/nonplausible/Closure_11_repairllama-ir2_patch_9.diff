diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/40316770-5c56-4d01-b59c-5f46e2260ba9_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/36a00b59-4065-416f-9e5f-bf0a847682dc_fixed.java
index a4d475d..65596ef 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/40316770-5c56-4d01-b59c-5f46e2260ba9_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/36a00b59-4065-416f-9e5f-bf0a847682dc_fixed.java
@@ -1,19 +1,16 @@
   private void visitGetProp(NodeTraversal t, Node n, Node parent) {
-    // obj.prop or obj.method()
-    // Lots of types can appear on the left, a call to a void function can
-    // never be on the left. getPropertyType will decide what is acceptable
-    // and what isn't.
     Node property = n.getLastChild();
     Node objNode = n.getFirstChild();
     JSType childType = getJSType(objNode);
-
     if (childType.isDict()) {
       report(t, property, TypeValidator.ILLEGAL_PROPERTY_ACCESS, "'.'", "dict");
+   } else if (parent != null && parent.isAssign()) {
+      return;
     } else if (n.getJSType() != null && parent.isAssign()) {
       return;
     } else if (validator.expectNotNullOrUndefined(t, n, childType,
         "No properties on this expression", getNativeType(OBJECT_TYPE))) {
       checkPropertyAccess(childType, property.getString(), t, n);
     }
     ensureTyped(t, n);
   }
