diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/fef67701-e443-47fe-a6e0-e93b0f1c329f_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/b499920a-4403-46ab-a2a5-e82bc0bfcc63_fixed.java
index 44d6cc6..1336d8d 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/fef67701-e443-47fe-a6e0-e93b0f1c329f_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/b499920a-4403-46ab-a2a5-e82bc0bfcc63_fixed.java
@@ -1,16 +1,15 @@
   public Date read(JsonReader in) throws IOException {
-    if (in.peek() != JsonToken.STRING) {
-      throw new JsonParseException("The date should be a string value");
+   if (in.peek() != JsonToken.STRING && in.peek() != JsonToken.NULL) {
+      throw new JsonParseException("The date should be a string value or null");
     }
     Date date = deserializeToDate(in.nextString());
     if (dateType == Date.class) {
       return date;
     } else if (dateType == Timestamp.class) {
       return new Timestamp(date.getTime());
     } else if (dateType == java.sql.Date.class) {
       return new java.sql.Date(date.getTime());
     } else {
-      // This must never happen: dateType is guarded in the primary constructor
       throw new AssertionError();
     }
   }
