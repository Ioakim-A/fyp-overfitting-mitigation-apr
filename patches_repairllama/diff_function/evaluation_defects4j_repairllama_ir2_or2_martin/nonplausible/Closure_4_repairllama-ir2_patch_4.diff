diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/7c146137-fca4-4a4a-90b9-e10ef60e0259_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/316d4db9-2c15-40e8-98f6-22143d3487f5_fixed.java
index 3840a76..e729b41 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/7c146137-fca4-4a4a-90b9-e10ef60e0259_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/316d4db9-2c15-40e8-98f6-22143d3487f5_fixed.java
@@ -1,29 +1,18 @@
   JSType resolveInternal(ErrorReporter t, StaticScope<JSType> enclosing) {
-    // TODO(user): Investigate whether it is really necessary to keep two
-    // different mechanisms for resolving named types, and if so, which order
-    // makes more sense. Now, resolution via registry is first in order to
-    // avoid triggering the warnings built into the resolution via properties.
     boolean resolved = resolveViaRegistry(t, enclosing);
+   if (!resolved) {
       if (detectImplicitPrototypeCycle()) {
         handleTypeCycle(t);
       }
-
-    if (resolved) {
-      super.resolveInternal(t, enclosing);
-      finishPropertyContinuations();
-      return registry.isLastGeneration() ?
-          getReferencedType() : this;
-    }
-
       resolveViaProperties(t, enclosing);
+    }
     if (detectImplicitPrototypeCycle()) {
       handleTypeCycle(t);
     }
-
     super.resolveInternal(t, enclosing);
     if (isResolved()) {
       finishPropertyContinuations();
     }
     return registry.isLastGeneration() ?
         getReferencedType() : this;
   }
