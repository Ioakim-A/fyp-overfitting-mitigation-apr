diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/cc5847d9-bd76-4db3-a072-d6c803c8dad7_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/6c0a54a4-0d3f-492e-b2e1-15aeff9dce5b_fixed.java
index 8733f51..5d3d021 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/cc5847d9-bd76-4db3-a072-d6c803c8dad7_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/6c0a54a4-0d3f-492e-b2e1-15aeff9dce5b_fixed.java
@@ -1,22 +1,22 @@
     protected RealPointValuePair getSolution() {
         double[] coefficients = new double[getOriginalNumDecisionVariables()];
         Integer basicRow =
             getBasicRow(getNumObjectiveFunctions() + getOriginalNumDecisionVariables());
         double mostNegative = basicRow == null ? 0 : getEntry(basicRow, getRhsOffset());
+       if (restrictToNonNegative) {
+            mostNegative = 0;
+        }
         for (int i = 0; i < coefficients.length; i++) {
             basicRow = getBasicRow(getNumObjectiveFunctions() + i);
-                // if multiple variables can take a given value 
-                // then we choose the first and set the rest equal to 0
             coefficients[i] =
-                    (basicRow == null ? 0 : getEntry(basicRow, getRhsOffset())) -
-                    (restrictToNonNegative ? 0 : mostNegative);
+                (basicRow == null ? 0 : getEntry(basicRow, getRhsOffset())) - mostNegative;
             if (basicRow != null) {
                 for (int j = getNumObjectiveFunctions(); j < getNumObjectiveFunctions() + i; j++) {
                     if (tableau.getEntry(basicRow, j) == 1) {
                         coefficients[i] = 0;
                     }
                 }
             }
         }
         return new RealPointValuePair(coefficients, f.getValue(coefficients));
     }
