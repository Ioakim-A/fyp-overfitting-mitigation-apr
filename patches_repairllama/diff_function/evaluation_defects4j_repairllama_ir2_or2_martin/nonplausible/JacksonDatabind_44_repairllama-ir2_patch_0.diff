diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/85d1ac06-2d60-4268-8a3d-6428afd435de_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/d131e0b2-9523-4147-aab6-fd53a264d600_fixed.java
index 4e76e23..778e92c 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/85d1ac06-2d60-4268-8a3d-6428afd435de_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/d131e0b2-9523-4147-aab6-fd53a264d600_fixed.java
@@ -1,19 +1,8 @@
     protected JavaType _narrow(Class<?> subclass)
     {
         if (_class == subclass) {
             return this;
         }
-        // Should we check that there is a sub-class relationship?
-        // 15-Jan-2016, tatu: Almost yes, but there are some complications with
-        //    placeholder values (`Void`, `NoClass`), so can not quite do yet.
-        // TODO: fix in 2.8
-            /*
-            throw new IllegalArgumentException("Class "+subclass.getName()+" not sub-type of "
-                    +_class.getName());
-                    */
-            return new SimpleType(subclass, _bindings, this, _superInterfaces,
-                    _valueHandler, _typeHandler, _asStatic);
-        // Otherwise, stitch together the hierarchy. First, super-class
-        // if not found, try a super-interface
-        // should not get here but...
+           return new SimpleType(subclass, _bindings, this,
+                    _superInterfaces, _valueHandler, _typeHandler, _asStatic);
     }
