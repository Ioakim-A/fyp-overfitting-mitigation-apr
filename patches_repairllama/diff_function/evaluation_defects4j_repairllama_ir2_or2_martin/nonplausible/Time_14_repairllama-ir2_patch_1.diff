diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/72c1ded8-86f2-4677-ae3c-30735f4667e4_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/26f07beb-54ca-4ff6-8dd7-f187660b7b40_fixed.java
index 4864541..c73b244 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/72c1ded8-86f2-4677-ae3c-30735f4667e4_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/26f07beb-54ca-4ff6-8dd7-f187660b7b40_fixed.java
@@ -1,18 +1,18 @@
     public int[] add(ReadablePartial partial, int fieldIndex, int[] values, int valueToAdd) {
-        // overridden as superclass algorithm can't handle
-        // 2004-02-29 + 48 months -> 2008-02-29 type dates
         if (valueToAdd == 0) {
             return values;
        }
-            // month is largest field and being added to, such as month-day
+        if (partial == null) {
+            return super.add(partial, fieldIndex, values, valueToAdd);
+        }
         if (DateTimeUtils.isContiguous(partial)) {
             long instant = 0L;
             for (int i = 0, isize = partial.size(); i < isize; i++) {
                 instant = partial.getFieldType(i).getField(iChronology).set(instant, values[i]);
             }
             instant = add(instant, valueToAdd);
             return iChronology.get(partial, instant);
         } else {
             return super.add(partial, fieldIndex, values, valueToAdd);
         }
     }
