diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/22765f7a-1a4d-4547-9633-cbbc402f8a51_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/a75396f0-8587-4ad0-8845-6a0d0c2c4baa_fixed.java
index 50cbfb2..467210b 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/22765f7a-1a4d-4547-9633-cbbc402f8a51_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/a75396f0-8587-4ad0-8845-6a0d0c2c4baa_fixed.java
@@ -1,39 +1,23 @@
     protected void iterateSimplex(final Comparator<RealPointValuePair> comparator)
         throws FunctionEvaluationException, OptimizationException, IllegalArgumentException {
-
        while (true) {
-
             incrementIterationsCounter();
-
-            // save the original vertex
             final RealPointValuePair[] original = simplex;
             final RealPointValuePair best = original[0];
-
-            // perform a reflection step
             final RealPointValuePair reflected = evaluateNewSimplex(original, 1.0, comparator);
             if (comparator.compare(reflected, best) < 0) {
-
-                // compute the expanded simplex
                 final RealPointValuePair[] reflectedSimplex = simplex;
                 final RealPointValuePair expanded = evaluateNewSimplex(original, khi, comparator);
                 if (comparator.compare(reflected, expanded) <= 0) {
-                    // accept the reflected simplex
                     simplex = reflectedSimplex;
                 }
-
                 return;
-
             }
-
-            // compute the contracted simplex
             final RealPointValuePair contracted = evaluateNewSimplex(original, gamma, comparator);
             if (comparator.compare(contracted, best) < 0) {
-                // accept the contracted simplex
-
-            // check convergence
+                simplex = original;
                 return;
             }
-
+            simplex = original;
         }
-
     }
