diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/8595ba11-e06f-4ca9-b43d-7a110f03300d_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/357f596b-ddce-4b63-aa86-496081207004_fixed.java
index 511ea30..259a278 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/8595ba11-e06f-4ca9-b43d-7a110f03300d_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/357f596b-ddce-4b63-aa86-496081207004_fixed.java
@@ -1,28 +1,18 @@
     public double solve(double min, double max) throws MaxIterationsExceededException, 
         FunctionEvaluationException {
-        
         clearResult();
         verifyInterval(min, max);
-        
         double ret = Double.NaN;
-        
         double yMin = f.value(min);
         double yMax = f.value(max);
-        
-        // Verify bracketing
         double sign = yMin * yMax;
-        if (sign >= 0) {
-            // check if either value is close to a zero
-                // neither value is close to zero and min and max do not bracket root.
+       if (sign <= 0) {
                 throw new IllegalArgumentException
                 ("Function values at endpoints do not have different signs." +
                         "  Endpoints: [" + min + "," + max + "]" + 
                         "  Values: [" + yMin + "," + yMax + "]");
         } else {
-            // solve using only the first endpoint as initial guess
-            ret = solve(min, yMin, max, yMax, min, yMin);
-            // either min or max is a root
+            ret = solve(min, yMax, max, yMin, min, yMax);
         }
-
         return ret;
     }
