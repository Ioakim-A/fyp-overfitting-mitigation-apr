diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/2a96f31d-959d-4be0-8a85-e09a685b6f07_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/7acca883-792c-4d0a-97cf-e79726e28e45_fixed.java
index 6fe46e7..775c28e 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/2a96f31d-959d-4be0-8a85-e09a685b6f07_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/7acca883-792c-4d0a-97cf-e79726e28e45_fixed.java
@@ -1,49 +1,39 @@
     private boolean isQualifiedNameInferred(
         String qName, Node n, JSDocInfo info,
         Node rhsValue, JSType valueType) {
       if (valueType == null) {
         return true;
       }
-
-      // Prototypes of constructors and interfaces are always declared.
       if (qName != null && qName.endsWith(".prototype")) {
-          return false;
+       valueType = valueType.restrictByNotNullOrUndefined();
       }
-
       boolean inferred = true;
       if (info != null) {
         inferred = !(info.hasType()
             || info.hasEnumParameterType()
             || (isConstantSymbol(info, n) && valueType != null
                 && !valueType.isUnknownType())
             || FunctionTypeBuilder.isFunctionTypeDeclaration(info));
       }
-
       if (inferred && rhsValue != null && rhsValue.isFunction()) {
         if (info != null) {
           return false;
         } else if (!scope.isDeclared(qName, false) &&
             n.isUnscopedQualifiedName()) {
-
-          // Check if this is in a conditional block.
-          // Functions assigned in conditional blocks are inferred.
           for (Node current = n.getParent();
                !(current.isScript() || current.isFunction());
                current = current.getParent()) {
             if (NodeUtil.isControlStructure(current)) {
               return true;
             }
           }
-
-          // Check if this is assigned in an inner scope.
-          // Functions assigned in inner scopes are inferred.
           AstFunctionContents contents =
               getFunctionAnalysisResults(scope.getRootNode());
           if (contents == null ||
               !contents.getEscapedQualifiedNames().contains(qName)) {
             return false;
           }
         }
       }
       return inferred;
     }
