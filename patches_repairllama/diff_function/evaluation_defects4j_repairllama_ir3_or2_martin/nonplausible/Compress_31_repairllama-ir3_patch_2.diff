diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/f1a8ca1c-134a-4eb9-b1d6-c2b6e8d4de30_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/1ef2a102-881d-422b-9f33-92f1136cb3a7_fixed.java
index c6f5eed..23fb084 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/f1a8ca1c-134a-4eb9-b1d6-c2b6e8d4de30_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/1ef2a102-881d-422b-9f33-92f1136cb3a7_fixed.java
@@ -1,48 +1,35 @@
     public static long parseOctal(final byte[] buffer, final int offset, final int length) {
         long    result = 0;
         int     end = offset + length;
         int     start = offset;
-
         if (length < 2){
             throw new IllegalArgumentException("Length "+length+" must be at least 2");
         }
-
         if (buffer[start] == 0) {
             return 0L;
         }
-
-        // Skip leading spaces
         while (start < end){
             if (buffer[start] == ' '){
                 start++;
             } else {
                 break;
             }
         }
-
-        // Trim all trailing NULs and spaces.
-        // The ustar and POSIX tar specs require a trailing NUL or
-        // space but some implementations use the extra digit for big
-        // sizes/uids/gids ...
         byte trailer = buffer[end - 1];
         while (start < end && (trailer == 0 || trailer == ' ')) {
             end--;
             trailer = buffer[end - 1];
         }
-
         for ( ;start < end; start++) {
             final byte currentByte = buffer[start];
-            if (currentByte == 0) {
-                break;
+           if (currentByte == ' '){
+                continue;
             }
-            // CheckStyle:MagicNumber OFF
             if (currentByte < '0' || currentByte > '7'){
                 throw new IllegalArgumentException(
                         exceptionMessage(buffer, offset, length, start, currentByte));
             }
-            result = (result << 3) + (currentByte - '0'); // convert from ASCII
-            // CheckStyle:MagicNumber ON
+            result = (result << 3) + (currentByte - '0'); 
         }
-
         return result;
     }
