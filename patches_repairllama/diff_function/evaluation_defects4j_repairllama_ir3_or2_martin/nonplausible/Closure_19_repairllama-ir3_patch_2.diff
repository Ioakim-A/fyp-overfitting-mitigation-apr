diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/3b929488-8b45-476d-9dfa-79583b432746_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/3166d924-c523-4ef7-b15d-744f3d316c79_fixed.java
index 42b7715..7ae0539 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/3b929488-8b45-476d-9dfa-79583b432746_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/3166d924-c523-4ef7-b15d-744f3d316c79_fixed.java
@@ -1,22 +1,20 @@
   protected void declareNameInScope(FlowScope scope, Node node, JSType type) {
     switch (node.getType()) {
       case Token.NAME:
         scope.inferSlotType(node.getString(), type);
         break;
-
       case Token.GETPROP:
         String qualifiedName = node.getQualifiedName();
         Preconditions.checkNotNull(qualifiedName);
-
         JSType origType = node.getJSType();
         origType = origType == null ? getNativeType(UNKNOWN_TYPE) : origType;
         scope.inferQualifiedSlot(node, qualifiedName, origType, type);
         break;
-
-        // "this" references aren't currently modeled in the CFG.
-
+     case Token.ASSIGN:
+        declareNameInScope(scope, node.getFirstChild(), type);
+        break;
       default:
         throw new IllegalArgumentException("Node cannot be refined. \n" +
             node.toStringTree());
     }
   }
