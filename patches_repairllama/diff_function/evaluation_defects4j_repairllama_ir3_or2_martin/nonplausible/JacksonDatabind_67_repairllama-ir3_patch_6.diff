diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/74d79977-b79c-4d2b-86d7-71b5cbd52dad_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/6ebd8c32-7651-4843-b48f-3c51287e2f80_fixed.java
index a19c4db..c9348c5 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/74d79977-b79c-4d2b-86d7-71b5cbd52dad_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/6ebd8c32-7651-4843-b48f-3c51287e2f80_fixed.java
@@ -1,32 +1,33 @@
     public KeyDeserializer createKeyDeserializer(DeserializationContext ctxt,
             JavaType type)
         throws JsonMappingException
     {
         final DeserializationConfig config = ctxt.getConfig();
         KeyDeserializer deser = null;
         if (_factoryConfig.hasKeyDeserializers()) {
             BeanDescription beanDesc = config.introspectClassAnnotations(type.getRawClass());
             for (KeyDeserializers d  : _factoryConfig.keyDeserializers()) {
                 deser = d.findKeyDeserializer(type, config, beanDesc);
                 if (deser != null) {
                     break;
                 }
             }
         }
-        // the only non-standard thing is this:
         if (deser == null) {
             if (type.isEnumType()) {
-                return _createEnumKeyDeserializer(ctxt, type);
+               deser = new EnumKeyDeserializer(type.getRawClass());
+            } else if (type.isPrimitive()) {
+                deser = new PrimitiveKeyDeserializer(type.getRawClass());
+            } else {
+                deser = ctxt.findRootValueDeserializer(type);
             }
-            deser = StdKeyDeserializers.findStringBasedKeyDeserializer(config, type);
         }
-        // and then post-processing
         if (deser != null) {
             if (_factoryConfig.hasDeserializerModifiers()) {
                 for (BeanDeserializerModifier mod : _factoryConfig.deserializerModifiers()) {
                     deser = mod.modifyKeyDeserializer(config, type, deser);
                 }
             }
         }
         return deser;
     }
