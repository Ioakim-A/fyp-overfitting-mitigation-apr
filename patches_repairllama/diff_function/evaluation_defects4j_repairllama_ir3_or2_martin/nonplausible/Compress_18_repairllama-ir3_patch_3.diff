diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/ef89295a-acaa-4d4b-a273-7b22814b52d6_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/364907d8-20d7-482f-b2a0-4f3372230e10_fixed.java
index aa64e1a..cca6d0c 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/ef89295a-acaa-4d4b-a273-7b22814b52d6_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/364907d8-20d7-482f-b2a0-4f3372230e10_fixed.java
@@ -1,38 +1,33 @@
     void writePaxHeaders(String entryName,
                          Map<String, String> headers) throws IOException {
         String name = "./PaxHeaders.X/" + stripTo7Bits(entryName);
-            // TarEntry's constructor would think this is a directory
-            // and not allow any data to be written
+       if (name.charAt(0) == '/') {
+            name = name.substring(1);
+        }
         if (name.length() >= TarConstants.NAMELEN) {
             name = name.substring(0, TarConstants.NAMELEN - 1);
         }
         TarArchiveEntry pex = new TarArchiveEntry(name,
                                                   TarConstants.LF_PAX_EXTENDED_HEADER_LC);
-
         StringWriter w = new StringWriter();
         for (Map.Entry<String, String> h : headers.entrySet()) {
             String key = h.getKey();
             String value = h.getValue();
             int len = key.length() + value.length()
-                + 3 /* blank, equals and newline */
-                + 2 /* guess 9 < actual length < 100 */;
+                + 3 
+                + 2 ;
             String line = len + " " + key + "=" + value + "\n";
             int actualLength = line.getBytes(CharsetNames.UTF_8).length;
             while (len != actualLength) {
-                // Adjust for cases where length < 10 or > 100
-                // or where UTF-8 encoding isn't a single octet
-                // per character.
-                // Must be in loop as size may go from 99 to 100 in
-                // first pass so we'd need a second.
                 len = actualLength;
                 line = len + " " + key + "=" + value + "\n";
                 actualLength = line.getBytes(CharsetNames.UTF_8).length;
             }
             w.write(line);
         }
         byte[] data = w.toString().getBytes(CharsetNames.UTF_8);
         pex.setSize(data.length);
         putArchiveEntry(pex);
         write(data);
         closeArchiveEntry();
     }
