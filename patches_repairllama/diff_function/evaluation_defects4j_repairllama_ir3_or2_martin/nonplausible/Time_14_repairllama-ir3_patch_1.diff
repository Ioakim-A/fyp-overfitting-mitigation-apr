diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/14ed8335-61ae-4a35-9ff6-ec33c1c3b62a_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/a86728c7-1602-4a6e-83de-abfcee235d39_fixed.java
index 4864541..52729a2 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/14ed8335-61ae-4a35-9ff6-ec33c1c3b62a_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/a86728c7-1602-4a6e-83de-abfcee235d39_fixed.java
@@ -1,18 +1,17 @@
     public int[] add(ReadablePartial partial, int fieldIndex, int[] values, int valueToAdd) {
-        // overridden as superclass algorithm can't handle
-        // 2004-02-29 + 48 months -> 2008-02-29 type dates
         if (valueToAdd == 0) {
             return values;
+       } else if (valueToAdd == values[fieldIndex]) {
+            return values;
         }
-            // month is largest field and being added to, such as month-day
         if (DateTimeUtils.isContiguous(partial)) {
             long instant = 0L;
             for (int i = 0, isize = partial.size(); i < isize; i++) {
                 instant = partial.getFieldType(i).getField(iChronology).set(instant, values[i]);
             }
             instant = add(instant, valueToAdd);
             return iChronology.get(partial, instant);
         } else {
             return super.add(partial, fieldIndex, values, valueToAdd);
         }
     }
