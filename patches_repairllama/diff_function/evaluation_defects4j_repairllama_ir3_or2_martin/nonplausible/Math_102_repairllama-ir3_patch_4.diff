diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/5fd6681f-8aac-45a8-87b4-e599f303cad7_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/f02aa5a5-db2d-414b-ac6d-7a519a3876a4_fixed.java
index 9dbd4e4..31c6a9e 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/5fd6681f-8aac-45a8-87b4-e599f303cad7_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/f02aa5a5-db2d-414b-ac6d-7a519a3876a4_fixed.java
@@ -1,18 +1,17 @@
     public double chiSquare(double[] expected, long[] observed)
         throws IllegalArgumentException {
         if ((expected.length < 2) || (expected.length != observed.length)) {
             throw new IllegalArgumentException(
                     "observed, expected array lengths incorrect");
         }
         if (!isPositive(expected) || !isNonNegative(observed)) {
             throw new IllegalArgumentException(
                 "observed counts must be non-negative and expected counts must be postive");
         }
-        double sumSq = 0.0d;
-        double dev = 0.0d;
-        for (int i = 0; i < observed.length; i++) {
-                dev = ((double) observed[i] - expected[i]);
-                sumSq += dev * dev / expected[i];
+       double sumSq = 0;
+        for (int i = 0; i < expected.length; i++) {
+            sumSq += Math.pow(observed[i] - expected[i], 2)
+                    / expected[i];
         }
         return sumSq;
     }
