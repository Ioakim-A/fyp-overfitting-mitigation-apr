diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/14a1c637-83d1-4359-ba2f-08a5e14c1075_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/15178478-889a-452b-850e-3a8d96e7734c_fixed.java
index 53b8591..ab9d0f0 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/14a1c637-83d1-4359-ba2f-08a5e14c1075_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/15178478-889a-452b-850e-3a8d96e7734c_fixed.java
@@ -1,60 +1,43 @@
   protected CompilerOptions createOptions() {
     CompilerOptions options = new CompilerOptions();
     if (flags.processJqueryPrimitives) {
       options.setCodingConvention(new JqueryCodingConvention());
     } else {
       options.setCodingConvention(new ClosureCodingConvention());
     }
-
     options.setExtraAnnotationNames(flags.extraAnnotationName);
-
     CompilationLevel level = flags.compilationLevel;
     level.setOptionsForCompilationLevel(options);
-
     if (flags.debug) {
       level.setDebugOptionsForCompilationLevel(options);
     }
-
     if (flags.useTypesForOptimization) {
       level.setTypeBasedOptimizationOptions(options);
     }
-
     if (flags.generateExports) {
       options.setGenerateExports(flags.generateExports);
     }
-
     WarningLevel wLevel = flags.warningLevel;
     wLevel.setOptionsForWarningLevel(options);
     for (FormattingOption formattingOption : flags.formatting) {
       formattingOption.applyToOptions(options);
     }
-
     options.closurePass = flags.processClosurePrimitives;
-
     options.jqueryPass = CompilationLevel.ADVANCED_OPTIMIZATIONS == level &&
         flags.processJqueryPrimitives;
-
     options.angularPass = flags.angularPass;
-
     if (!flags.translationsFile.isEmpty()) {
       try {
         options.messageBundle = new XtbMessageBundle(
             new FileInputStream(flags.translationsFile),
             flags.translationsProject);
       } catch (IOException e) {
         throw new RuntimeException("Reading XTB file", e);
       }
     } else if (CompilationLevel.ADVANCED_OPTIMIZATIONS == level) {
-      // In SIMPLE or WHITESPACE mode, if the user hasn't specified a
-      // translations file, they might reasonably try to write their own
-      // implementation of goog.getMsg that makes the substitution at
-      // run-time.
-      //
-      // In ADVANCED mode, goog.getMsg is going to be renamed anyway,
-      // so we might as well inline it. But shut off the i18n warnings,
-      // because the user didn't really ask for i18n.
       options.messageBundle = new EmptyMessageBundle();
+   } else {
+      options.messageBundle = null; 
     }
-
     return options;
   }
