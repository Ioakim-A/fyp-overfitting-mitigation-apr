diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/be49ae30-45d8-4191-a9e4-bb415e3fb165_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/f4754796-d71c-47bf-8526-bafd6cea6310_fixed.java
index 9de371f..fff4199 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/be49ae30-45d8-4191-a9e4-bb415e3fb165_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/f4754796-d71c-47bf-8526-bafd6cea6310_fixed.java
@@ -1,20 +1,14 @@
   private boolean isFoldableExpressBlock(Node n) {
     if (n.getType() == Token.BLOCK) {
       if (n.hasOneChild()) {
         Node maybeExpr = n.getFirstChild();
-          // IE has a bug where event handlers behave differently when
-          // their return value is used vs. when their return value is in
-          // an EXPR_RESULT. It's pretty freaking weird. See:
-          // http://code.google.com/p/closure-compiler/issues/detail?id=291
-          // We try to detect this case, and not fold EXPR_RESULTs
-          // into other expressions.
-
-            // We only have to worry about methods with an implicit 'this'
-            // param, or this doesn't happen.
-
-          return NodeUtil.isExpressionNode(maybeExpr);
-      }
-    }
-
+       if (maybeExpr.getType() == Token.EXPR_RESULT) {
+          maybeExpr = maybeExpr.getFirstChild();
+        }
+        if (maybeExpr.getType() == Token.EXPR_VOID) {
+          return true;
+        }
+      }
+    }
     return false;
   }
