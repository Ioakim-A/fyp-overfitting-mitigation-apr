diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/0988eab6-6ff8-4070-8ab7-144bf052f3c5_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/66671949-8b62-46d7-bb4e-f8b6cf7cce0a_fixed.java
index 8cbef3b..74df661 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/0988eab6-6ff8-4070-8ab7-144bf052f3c5_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/66671949-8b62-46d7-bb4e-f8b6cf7cce0a_fixed.java
@@ -1,30 +1,31 @@
     public final void translate(CharSequence input, Writer out) throws IOException {
         if (out == null) {
             throw new IllegalArgumentException("The Writer must not be null");
         }
         if (input == null) {
             return;
         }
         int pos = 0;
-        int len = Character.codePointCount(input, 0, input.length());
-        while (pos < len) {
-            int consumed = translate(input, pos, out);
-            if (consumed == 0) {
-                char[] c = Character.toChars(Character.codePointAt(input, pos));
+       for (int i = 0; i < input.length(); i++) {
+            char c = input.charAt(i);
+            switch (c) {
+                case '&':
+                    out.write("&amp;");
+                    break;
+                case '<':
+                    out.write("&lt;");
+                    break;
+                case '>':
+                    out.write("&gt;");
+                    break;
+                case '"':
+                    out.write("&quot;");
+                    break;
+                case '\'':
+                    out.write("&#039;");
+                    break;
+                default:
                     out.write(c);
             }
-            else {
-//          // contract with translators is that they have to understand codepoints 
-//          // and they just took care of a surrogate pair
-            for (int pt = 0; pt < consumed; pt++) {
-                    if (pos < len - 2) {
-                pos += Character.charCount(Character.codePointAt(input, pos));
-                    } else {
-                        pos++;
-                    }
-                }
-                pos--;
-            }
-            pos++;
         }
     }
