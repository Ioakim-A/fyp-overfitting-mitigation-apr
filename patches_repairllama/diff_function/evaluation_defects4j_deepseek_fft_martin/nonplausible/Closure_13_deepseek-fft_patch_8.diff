diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/71456d58-a171-41a7-9bdd-502aa8d2be45_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/d99d57cf-e6a8-4077-b67d-a72f2472ffca_fixed.java
index b5d94e0..aae29ee 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/71456d58-a171-41a7-9bdd-502aa8d2be45_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/d99d57cf-e6a8-4077-b67d-a72f2472ffca_fixed.java
@@ -1,26 +1,27 @@
   private void traverse(Node node) {
     // The goal here is to avoid retraversing
     // the entire AST to catch newly created opportunities.
     // So we track whether a "unit of code" has changed,
     // and revisit immediately.
     if (!shouldVisit(node)) {
       return;
     }
-
     int visits = 0;
     do {
       Node c = node.getFirstChild();
       while(c != null) {
+// buggy code
+//        traverse(c);
+//        Node next = c.getNext();
         traverse(c);
         Node next = c.getNext();
+        if (next == null) break;
+
         c = next;
       }
-
       visit(node);
       visits++;
-
       Preconditions.checkState(visits < 10000, "too many interations");
     } while (shouldRetraverse(node));
-
     exitNode(node);
   }
