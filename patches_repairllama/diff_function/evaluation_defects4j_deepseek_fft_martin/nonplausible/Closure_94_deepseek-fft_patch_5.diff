diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/aba7b117-5b53-4b29-9861-94df472dd227_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/1a0bcd07-4db7-4e85-bdc4-394d51658a29_fixed.java
index 66e3d01..de50692 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/aba7b117-5b53-4b29-9861-94df472dd227_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/1a0bcd07-4db7-4e85-bdc4-394d51658a29_fixed.java
@@ -1,34 +1,40 @@
   /**
    * Determines whether the given value may be assigned to a define.
    *
    * @param val The value being assigned.
    * @param defines The list of names of existing defines.
    */
   static boolean isValidDefineValue(Node val, Set<String> defines) {
     switch (val.getType()) {
       case Token.STRING:
       case Token.NUMBER:
       case Token.TRUE:
       case Token.FALSE:
         return true;
-
       // Binary operators are only valid if both children are valid.
+// buggy code
+//      case Token.BITAND:
+//      case Token.BITNOT:
+//      case Token.BITOR:
+//      case Token.BITXOR:
+//      // Uniary operators are valid if the child is valid.
+//      case Token.NOT:
+//      case Token.NEG:
         case Token.BITAND:
         case Token.BITNOT:
         case Token.BITOR:
         case Token.BITXOR:
-
         // Uniary operators are valid if the child is valid.
         case Token.NOT:
         case Token.NEG:
+
         return isValidDefineValue(val.getFirstChild(), defines);
-
       // Names are valid if and only if they are defines themselves.
       case Token.NAME:
       case Token.GETPROP:
         if (val.isQualifiedName()) {
           return defines.contains(val.getQualifiedName());
         }
     }
     return false;
   }
