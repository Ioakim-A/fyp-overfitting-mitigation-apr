diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/5ec1e970-d4ed-43c5-90c7-dc423bc9a707_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/6b2a5987-121d-4862-8555-119bb96c3dac_fixed.java
index f35c371..4c4fdbb 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/5ec1e970-d4ed-43c5-90c7-dc423bc9a707_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/6b2a5987-121d-4862-8555-119bb96c3dac_fixed.java
@@ -1,30 +1,33 @@
     /**
      * Returns a matrix of p-values associated with the (two-sided) null
      * hypothesis that the corresponding correlation coefficient is zero.
      * <p><code>getCorrelationPValues().getEntry(i,j)</code> is the probability
      * that a random variable distributed as <code>t<sub>n-2</sub></code> takes
      * a value with absolute value greater than or equal to <br>
      * <code>|r|((n - 2) / (1 - r<sup>2</sup>))<sup>1/2</sup></code></p>
      * <p>The values in the matrix are sometimes referred to as the
      * <i>significance</i> of the corresponding correlation coefficients.</p>
      *
      * @return matrix of p-values
      * @throws MathException if an error occurs estimating probabilities
      */
     public RealMatrix getCorrelationPValues() throws MathException {
         TDistribution tDistribution = new TDistributionImpl(nObs - 2);
         int nVars = correlationMatrix.getColumnDimension();
         double[][] out = new double[nVars][nVars];
         for (int i = 0; i < nVars; i++) {
             for (int j = 0; j < nVars; j++) {
                 if (i == j) {
                     out[i][j] = 0d;
                 } else {
                     double r = correlationMatrix.getEntry(i, j);
                     double t = Math.abs(r * Math.sqrt((nObs - 2)/(1 - r * r)));
+// buggy code
+//                    out[i][j] = 2 * (1 - tDistribution.cumulativeProbability(t));
                     out[i][j] = 2 * (1 - tDistribution.cumulativeProbability(t));
+
                 }
             }
         }
         return new BlockRealMatrix(out);
     }
