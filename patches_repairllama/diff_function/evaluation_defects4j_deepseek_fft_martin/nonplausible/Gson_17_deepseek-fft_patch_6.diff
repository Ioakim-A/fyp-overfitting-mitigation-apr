diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/b9032c1c-da3f-4abd-beb0-92aa490263b5_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/d54b0282-bac6-42f8-8507-1df386be8179_fixed.java
index 85f5680..2136d8d 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/b9032c1c-da3f-4abd-beb0-92aa490263b5_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/d54b0282-bac6-42f8-8507-1df386be8179_fixed.java
@@ -1,17 +1,21 @@
   @Override
   public Date read(JsonReader in) throws IOException {
-    if (in.peek() != JsonToken.STRING) {
+// buggy code
+//    if (in.peek() != JsonToken.STRING) {
+//      throw new JsonParseException("The date should be a string value");
+    if (in.peek() != JsonToken.STRING && in.peek() != JsonToken.NUMBER) {
       throw new JsonParseException("The date should be a string value");
+
     }
     Date date = deserializeToDate(in.nextString());
     if (dateType == Date.class) {
       return date;
     } else if (dateType == Timestamp.class) {
       return new Timestamp(date.getTime());
     } else if (dateType == java.sql.Date.class) {
       return new java.sql.Date(date.getTime());
     } else {
       // This must never happen: dateType is guarded in the primary constructor
       throw new AssertionError();
     }
   }
