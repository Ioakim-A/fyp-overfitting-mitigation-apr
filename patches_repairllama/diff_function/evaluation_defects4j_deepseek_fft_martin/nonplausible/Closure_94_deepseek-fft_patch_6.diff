diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/ad9cc5cd-4fee-42ad-a8e1-ba03f609b7ed_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/80d19fc3-2e4d-44d0-ae36-bf3a1a343d09_fixed.java
index 66e3d01..4369000 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/ad9cc5cd-4fee-42ad-a8e1-ba03f609b7ed_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/80d19fc3-2e4d-44d0-ae36-bf3a1a343d09_fixed.java
@@ -1,34 +1,40 @@
   /**
    * Determines whether the given value may be assigned to a define.
    *
    * @param val The value being assigned.
    * @param defines The list of names of existing defines.
    */
   static boolean isValidDefineValue(Node val, Set<String> defines) {
     switch (val.getType()) {
       case Token.STRING:
       case Token.NUMBER:
       case Token.TRUE:
       case Token.FALSE:
         return true;
-
       // Binary operators are only valid if both children are valid.
-      case Token.BITAND:
-      case Token.BITNOT:
-      case Token.BITOR:
-      case Token.BITXOR:
-
+// buggy code
+//      case Token.BITAND:
+//      case Token.BITNOT:
+//      case Token.BITOR:
+//      case Token.BITXOR:
+//      // Uniary operators are valid if the child is valid.
+//      case Token.NOT:
+//      case Token.NEG:
+      case Token.BIT_AND:
+      case Token.BIT_NOT:
+      case Token.BIT_OR:
+      case Token.BIT_XOR:
       // Uniary operators are valid if the child is valid.
-      case Token.NOT:
+      case Token.LOGICAL_NOT:
       case Token.NEG:
+
         return isValidDefineValue(val.getFirstChild(), defines);
-
       // Names are valid if and only if they are defines themselves.
       case Token.NAME:
       case Token.GETPROP:
         if (val.isQualifiedName()) {
           return defines.contains(val.getQualifiedName());
         }
     }
     return false;
   }
