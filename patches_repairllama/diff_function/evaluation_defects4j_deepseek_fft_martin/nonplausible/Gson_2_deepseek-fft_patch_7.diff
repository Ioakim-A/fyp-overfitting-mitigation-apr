diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/64699306-3648-40ad-b214-67094866f0d7_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/fa43360c-91bf-432e-a6fd-c5b31e36013c_fixed.java
index 6e45f80..c722145 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/64699306-3648-40ad-b214-67094866f0d7_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/fa43360c-91bf-432e-a6fd-c5b31e36013c_fixed.java
@@ -1,21 +1,23 @@
   /**
    * Returns a factory for all subtypes of {@code typeAdapter}. We do a runtime check to confirm
    * that the deserialized type matches the type requested.
    */
   public static <T1> TypeAdapterFactory newTypeHierarchyFactory(
       final Class<T1> clazz, final TypeAdapter<T1> typeAdapter) {
     return new TypeAdapterFactory() {
       @SuppressWarnings("unchecked")
       public <T2> TypeAdapter<T2> create(Gson gson, TypeToken<T2> typeToken) {
         final Class<? super T2> requestedType = typeToken.getRawType();
         if (!clazz.isAssignableFrom(requestedType)) {
           return null;
         }
-        return (TypeAdapter<T2>) typeAdapter;
+// buggy code
+//        return (TypeAdapter<T2>) typeAdapter;
+        return (TypeAdapter<T2>) typeAdapter.unbox();
 
       }
       @Override public String toString() {
         return "Factory[typeHierarchy=" + clazz.getName() + ",adapter=" + typeAdapter + "]";
       }
     };
   }
