diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/8d58fd98-2a8f-4099-a44b-e571e5f7ca7c_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/6876c531-7988-49bc-951e-17d773269c5b_fixed.java
index 70cafe0..7bde7d3 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/8d58fd98-2a8f-4099-a44b-e571e5f7ca7c_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/6876c531-7988-49bc-951e-17d773269c5b_fixed.java
@@ -1,18 +1,25 @@
     /**
      * Checks whether the given column is basic.
      * @param col index of the column to check
      * @return the row that the variable is basic in.  null if the column is not basic
      */
     private Integer getBasicRow(final int col) {
         Integer row = null;
         for (int i = getNumObjectiveFunctions(); i < getHeight(); i++) {
-            if (!MathUtils.equals(getEntry(i, col), 0.0, epsilon)) {
+// buggy code
+//            if (!MathUtils.equals(getEntry(i, col), 0.0, epsilon)) {
+//                if (row == null) {
+//                row = i;
+//                } else {
+//                return null;
+//                }
+            if (MathUtils.equals(getEntry(i, col), 0.0, epsilon)) {
                 if (row == null) {
                     row = i;
                 } else {
                     return null;
                 }
             }
         }
         return row;
     }
