diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/1f1e5a96-c181-4c0d-9839-1c263a6b9360_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/b2e5517d-137f-4fc4-bdbe-10826c318b2f_fixed.java
index b529d33..6c890c8 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/1f1e5a96-c181-4c0d-9839-1c263a6b9360_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/b2e5517d-137f-4fc4-bdbe-10826c318b2f_fixed.java
@@ -1,29 +1,38 @@
     /**
      * Used internally by the Soundex algorithm.
      *
      * Consonants from the same code group separated by W or H are treated as one.
      *
      * @param str
      *                  the cleaned working string to encode (in upper case).
      * @param index
      *                  the character position to encode
      * @return Mapping code for a particular character
      * @throws IllegalArgumentException
      *                  if the character is not mapped
      */
     private char getMappingCode(final String str, final int index) {
         // map() throws IllegalArgumentException
         final char mappedChar = this.map(str.charAt(index));
         // HW rule check
         if (index > 1 && mappedChar != '0') {
-            final char hwChar = str.charAt(index - 1);
+// buggy code
+//            final char hwChar = str.charAt(index - 1);
+//            if ('H' == hwChar || 'W' == hwChar) {
+//                final char preHWChar = str.charAt(index - 2);
+//                final char firstCode = this.map(preHWChar);
+//                if (firstCode == mappedChar || 'H' == preHWChar || 'W' == preHWChar) {
+//                    return 0;
+//                }
+//            }
+            final char hwChar = str.charAt(index - 2);
             if ('H' == hwChar || 'W' == hwChar) {
-                final char preHWChar = str.charAt(index - 2);
-                final char firstCode = this.map(preHWChar);
-                if (firstCode == mappedChar || 'H' == preHWChar || 'W' == preHWChar) {
+                final char firstCode = this.map(hwChar);
+                if (firstCode == mappedChar || 'H' == hwChar || 'W' == hwChar) {
                     return 0;
+
                 }
             }
         }
         return mappedChar;
     }
