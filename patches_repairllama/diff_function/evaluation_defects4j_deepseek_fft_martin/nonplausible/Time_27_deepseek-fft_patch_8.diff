diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/cc690139-c7f8-4d65-bcb1-f4d07a3a8c45_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/c6250a51-204f-4d2a-a251-65d968fa319a_fixed.java
index ec6c9ee..358cc0d 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/cc690139-c7f8-4d65-bcb1-f4d07a3a8c45_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/c6250a51-204f-4d2a-a251-65d968fa319a_fixed.java
@@ -1,21 +1,24 @@
     //-----------------------------------------------------------------------
     private static PeriodFormatter toFormatter(List<Object> elementPairs, boolean notPrinter, boolean notParser) {
         if (notPrinter && notParser) {
             throw new IllegalStateException("Builder has created neither a printer nor a parser");
         }
         int size = elementPairs.size();
         if (size >= 2 && elementPairs.get(0) instanceof Separator) {
             Separator sep = (Separator) elementPairs.get(0);
-                PeriodFormatter f = toFormatter(elementPairs.subList(2, size), notPrinter, notParser);
-                sep = sep.finish(f.getPrinter(), f.getParser());
-                return new PeriodFormatter(sep, sep);
+// buggy code
+//                PeriodFormatter f = toFormatter(elementPairs.subList(2, size), notPrinter, notParser);
+//                sep = sep.finish(f.getPrinter(), f.getParser());
+//                return new PeriodFormatter(sep, sep);
+            return toFormatter(elementPairs.subList(2, size), notPrinter, notParser).with(sep);
+
         }
         Object[] comp = createComposite(elementPairs);
         if (notPrinter) {
             return new PeriodFormatter(null, (PeriodParser) comp[1]);
         } else if (notParser) {
             return new PeriodFormatter((PeriodPrinter) comp[0], null);
         } else {
             return new PeriodFormatter((PeriodPrinter) comp[0], (PeriodParser) comp[1]);
         }
     }
