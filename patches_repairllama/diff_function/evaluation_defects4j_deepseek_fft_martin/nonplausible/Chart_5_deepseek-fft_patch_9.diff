diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/90d2ad6b-6bfa-41dd-a129-268b1bd3afcf_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/dbcfc1eb-5f14-4516-85fc-41e1c0025829_fixed.java
index fd8eae5..dd06079 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/90d2ad6b-6bfa-41dd-a129-268b1bd3afcf_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/dbcfc1eb-5f14-4516-85fc-41e1c0025829_fixed.java
@@ -1,47 +1,53 @@
     /**
      * Adds or updates an item in the series and sends a
      * {@link SeriesChangeEvent} to all registered listeners.
      *
      * @param x  the x-value (<code>null</code> not permitted).
      * @param y  the y-value (<code>null</code> permitted).
      *
      * @return A copy of the overwritten data item, or <code>null</code> if no
      *         item was overwritten.
      */
     public XYDataItem addOrUpdate(Number x, Number y) {
         if (x == null) {
             throw new IllegalArgumentException("Null 'x' argument.");
         }
+// buggy code
+//        // if we get to here, we know that duplicate X values are not permitted
+//        XYDataItem overwritten = null;
+//        int index = indexOf(x);
+//        if (index >= 0 && !this.allowDuplicateXValues) {
+//        if (this.allowDuplicateXValues) {
+//            XYDataItem overwritten = null;
+//            int index = indexOf(x);
+//            if (index >= 0) {
+//                overwritten = (XYDataItem) this.data.get(index);
 
-        // if we get to here, we know that duplicate X values are not permitted
-        XYDataItem overwritten = null;
-        int index = indexOf(x);
-        if (index >= 0 && !this.allowDuplicateXValues) {
             XYDataItem existing = (XYDataItem) this.data.get(index);
             try {
                 overwritten = (XYDataItem) existing.clone();
             }
             catch (CloneNotSupportedException e) {
                 throw new SeriesException("Couldn't clone XYDataItem!");
             }
             existing.setY(y);
         }
         else {
             // if the series is sorted, the negative index is a result from
             // Collections.binarySearch() and tells us where to insert the
             // new item...otherwise it will be just -1 and we should just
             // append the value to the list...
             if (this.autoSort) {
                 this.data.add(-index - 1, new XYDataItem(x, y));
             }
             else {
                 this.data.add(new XYDataItem(x, y));
             }
             // check if this addition will exceed the maximum item count...
             if (getItemCount() > this.maximumItemCount) {
                 this.data.remove(0);
             }
         }
         fireSeriesChanged();
         return overwritten;
     }
