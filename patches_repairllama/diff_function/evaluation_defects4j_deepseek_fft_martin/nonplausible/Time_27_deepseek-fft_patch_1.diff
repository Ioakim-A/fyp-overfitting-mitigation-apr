diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/147edf62-fe2f-4d56-b56e-0e0098110029_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/44c61aec-a5dd-4da7-bfe9-75f9077aad7b_fixed.java
index ec6c9ee..0cc1191 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/147edf62-fe2f-4d56-b56e-0e0098110029_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/44c61aec-a5dd-4da7-bfe9-75f9077aad7b_fixed.java
@@ -1,21 +1,26 @@
     //-----------------------------------------------------------------------
     private static PeriodFormatter toFormatter(List<Object> elementPairs, boolean notPrinter, boolean notParser) {
         if (notPrinter && notParser) {
             throw new IllegalStateException("Builder has created neither a printer nor a parser");
         }
         int size = elementPairs.size();
         if (size >= 2 && elementPairs.get(0) instanceof Separator) {
             Separator sep = (Separator) elementPairs.get(0);
+// buggy code
+//                PeriodFormatter f = toFormatter(elementPairs.subList(2, size), notPrinter, notParser);
+//                sep = sep.finish(f.getPrinter(), f.getParser());
+//                return new PeriodFormatter(sep, sep);
             PeriodFormatter f = toFormatter(elementPairs.subList(2, size), notPrinter, notParser);
             sep = sep.finish(f.getPrinter(), f.getParser());
             return new PeriodFormatter(sep, sep);
+
         }
         Object[] comp = createComposite(elementPairs);
         if (notPrinter) {
             return new PeriodFormatter(null, (PeriodParser) comp[1]);
         } else if (notParser) {
             return new PeriodFormatter((PeriodPrinter) comp[0], null);
         } else {
             return new PeriodFormatter((PeriodPrinter) comp[0], (PeriodParser) comp[1]);
         }
     }
