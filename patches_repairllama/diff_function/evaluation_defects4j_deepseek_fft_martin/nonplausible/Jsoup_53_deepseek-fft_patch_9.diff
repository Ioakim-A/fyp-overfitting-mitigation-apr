diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/1edc34ee-318c-4f91-a202-270e04d0b974_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/d765b067-fe30-4da7-bd6a-eff230e1f3f8_fixed.java
index fecb896..446035d 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/1edc34ee-318c-4f91-a202-270e04d0b974_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/d765b067-fe30-4da7-bd6a-eff230e1f3f8_fixed.java
@@ -1,34 +1,38 @@
     /**
      * Pulls a balanced string off the queue. E.g. if queue is "(one (two) three) four", (,) will return "one (two) three",
      * and leave " four" on the queue. Unbalanced openers and closers can quoted (with ' or ") or escaped (with \). Those escapes will be left
      * in the returned string, which is suitable for regexes (where we need to preserve the escape), but unsuitable for
      * contains text strings; use unescape for that.
      * @param open opener
      * @param close closer
      * @return data matched from the queue
      */
     public String chompBalanced(char open, char close) {
         int start = -1;
         int end = -1;
         int depth = 0;
         char last = 0;
-
+// buggy code
+//        do {
+//            if (isEmpty()) break;
+//            Character c = consume();
+//            if (last == 0 || last != ESC) {
         do {
             if (isEmpty()) break;
             Character c = consume();
-            if (last == 0 || last != ESC) {
+            if (last == 0 || last != '\\') {
+
                 if (c.equals(open)) {
                     depth++;
                     if (start == -1)
                         start = pos;
                 }
                 else if (c.equals(close))
                     depth--;
             }
-
             if (depth > 0 && last != 0)
                 end = pos; // don't include the outer match pair in the return
             last = c;
         } while (depth > 0);
         return (end >= 0) ? queue.substring(start, end) : "";
     }
