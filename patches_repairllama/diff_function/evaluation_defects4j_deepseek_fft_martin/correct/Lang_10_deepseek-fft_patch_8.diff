diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/290f2117-717b-4cc0-ba7a-1dc5cdbb7f70_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/01035173-2f8f-4122-8397-479646f7210a_fixed.java
index c8ee48f..32dc2a6 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/290f2117-717b-4cc0-ba7a-1dc5cdbb7f70_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/01035173-2f8f-4122-8397-479646f7210a_fixed.java
@@ -1,48 +1,54 @@
     /**
      * Escape constant fields into regular expression
      * @param regex The destination regex
      * @param value The source field
      * @param unquote If true, replace two success quotes ('') with single quote (')
      * @return The <code>StringBuilder</code>
      */
     private static StringBuilder escapeRegex(StringBuilder regex, String value, boolean unquote) {
-        boolean wasWhite= false;
+// buggy code
+//        boolean wasWhite= false;
+//        for(int i= 0; i<value.length(); ++i) {
+//            char c= value.charAt(i);
+//            if(Character.isWhitespace(c)) {
+//                if(!wasWhite) {
+//                    wasWhite= true;
+//                    regex.append("\\s*+");
+//                }
+//                continue;
+//            }
+//            wasWhite= false;
+//            regex.append(c);
+//        }
         for(int i= 0; i<value.length(); ++i) {
             char c= value.charAt(i);
-            if(Character.isWhitespace(c)) {
-                if(!wasWhite) {
-                    wasWhite= true;
-                    regex.append("\\s*+");
-                }
-                continue;
-            }
-            wasWhite= false;
+
             switch(c) {
             case '\'':
                 if(unquote) {
                     if(++i==value.length()) {
                         return regex;
                     }
                     c= value.charAt(i);
                 }
                 break;
             case '?':
             case '[':
             case ']':
             case '(':
             case ')':
             case '{':
             case '}':
             case '\\':
             case '|':
             case '*':
             case '+':
             case '^':
             case '$':
             case '.':
                 regex.append('\\');
             }
             regex.append(c);
         }
         return regex;
     }
