diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/f9182d77-11e4-44f1-840e-e1b478fb27de_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/ca6ff52a-7f56-442d-89f0-1ca8e9fb9226_fixed.java
index a19c4db..4273b4d 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/f9182d77-11e4-44f1-840e-e1b478fb27de_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/ca6ff52a-7f56-442d-89f0-1ca8e9fb9226_fixed.java
@@ -1,32 +1,39 @@
     public KeyDeserializer createKeyDeserializer(DeserializationContext ctxt,
             JavaType type)
         throws JsonMappingException
     {
         final DeserializationConfig config = ctxt.getConfig();
         KeyDeserializer deser = null;
         if (_factoryConfig.hasKeyDeserializers()) {
             BeanDescription beanDesc = config.introspectClassAnnotations(type.getRawClass());
             for (KeyDeserializers d  : _factoryConfig.keyDeserializers()) {
                 deser = d.findKeyDeserializer(type, config, beanDesc);
                 if (deser != null) {
                     break;
                 }
             }
         }
-        // the only non-standard thing is this:
         if (deser == null) {
             if (type.isEnumType()) {
-                return _createEnumKeyDeserializer(ctxt, type);
-            }
+// buggy code
+//                return _createEnumKeyDeserializer(ctxt, type);
+//            }
+//            deser = StdKeyDeserializers.findStringBasedKeyDeserializer(config, type);
+               deser = StdKeyDeserializers.findEnumBasedKeyDeserializer(config, type);
+            } else {
                 deser = StdKeyDeserializers.findStringBasedKeyDeserializer(config, type);
             }
-        // and then post-processing
+        }
+        if (deser == null) {
+            deser = _createEnumKeyDeserializer(ctxt, type);
+
+        }
         if (deser != null) {
             if (_factoryConfig.hasDeserializerModifiers()) {
                 for (BeanDeserializerModifier mod : _factoryConfig.deserializerModifiers()) {
                     deser = mod.modifyKeyDeserializer(config, type, deser);
                 }
             }
         }
         return deser;
     }
