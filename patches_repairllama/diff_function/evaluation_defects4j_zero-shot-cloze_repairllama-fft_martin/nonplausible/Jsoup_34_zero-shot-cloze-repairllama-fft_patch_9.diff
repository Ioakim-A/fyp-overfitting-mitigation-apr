diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/0d771a77-e354-463c-ae19-dd95f7f1d4c7_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/385b2425-7a22-43d7-b335-ea3f6e5bff75_fixed.java
index 3ea5b43..a7f573f 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/0d771a77-e354-463c-ae19-dd95f7f1d4c7_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/385b2425-7a22-43d7-b335-ea3f6e5bff75_fixed.java
@@ -1,17 +1,22 @@
     int nextIndexOf(CharSequence seq) {
-        // doesn't handle scanning for surrogates
         char startChar = seq.charAt(0);
         for (int offset = pos; offset < length; offset++) {
-            // scan to first instance of startchar:
             if (startChar != input[offset])
                 while(++offset < length && startChar != input[offset]);
             int i = offset + 1;
             int last = i + seq.length()-1;
-            if (offset < length) {
+// buggy code
+//            if (offset < length) {
                for (int j = 1; i < last && seq.charAt(j) == input[i]; i++, j++);
-                if (i == last) // found full sequence
+                if (i == last) 
+                    return offset - pos;
+            }
+            else {
+
+                for (int j = 1; i < last && seq.charAt(j) == input[i]; i++, j++);
+                if (i == last) 
                     return offset - pos;
             }
         }
         return -1;
     }
