diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/bf330b63-85c8-4adf-97e0-bca268c17f02_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/7b9089ed-77af-4b59-8b76-9971af9b7260_fixed.java
index 88f63e7..90cc3f7 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/bf330b63-85c8-4adf-97e0-bca268c17f02_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/7b9089ed-77af-4b59-8b76-9971af9b7260_fixed.java
@@ -1,24 +1,39 @@
     @Override public void visit(NodeTraversal t, Node n, Node parent) {
       if (n == scope.getRootNode()) return;
-
       if (n.getType() == Token.LP && parent == scope.getRootNode()) {
         handleFunctionInputs(parent);
         return;
       }
-
-      attachLiteralTypes(n);
+// buggy code
+//      attachLiteralTypes(n);
+//      switch (n.getType()) {
+//        case Token.FUNCTION:
+//          if (parent.getType() == Token.NAME) {
+//            return;
+//          }
+//          defineDeclaredFunction(n, parent);
+//          break;
+//        case Token.CATCH:
+//          defineCatch(n, parent);
+//          break;
+//        case Token.VAR:
+//          defineVar(n, parent);
+//          break;
+//      }
      switch (n.getType()) {
+        case Token.VAR:
+          defineVar(n, parent);
+          break;
         case Token.FUNCTION:
           if (parent.getType() == Token.NAME) {
             return;
           }
           defineDeclaredFunction(n, parent);
           break;
         case Token.CATCH:
           defineCatch(n, parent);
           break;
-        case Token.VAR:
-          defineVar(n, parent);
-          break;
       }
+      attachLiteralTypes(n);
+
     }
