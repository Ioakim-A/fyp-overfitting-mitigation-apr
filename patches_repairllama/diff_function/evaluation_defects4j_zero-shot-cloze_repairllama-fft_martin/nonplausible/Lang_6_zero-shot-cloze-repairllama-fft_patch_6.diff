diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/f9679da7-411c-4f70-9c6e-9d676eda9eb7_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/dde0cb9a-8311-4349-8c6f-f0ef35ecd8c9_fixed.java
index f74e742..f23d73f 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/f9679da7-411c-4f70-9c6e-9d676eda9eb7_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/dde0cb9a-8311-4349-8c6f-f0ef35ecd8c9_fixed.java
@@ -1,24 +1,25 @@
     public final void translate(CharSequence input, Writer out) throws IOException {
         if (out == null) {
             throw new IllegalArgumentException("The Writer must not be null");
         }
         if (input == null) {
             return;
         }
         int pos = 0;
         int len = input.length();
         while (pos < len) {
             int consumed = translate(input, pos, out);
             if (consumed == 0) {
                 char[] c = Character.toChars(Character.codePointAt(input, pos));
                 out.write(c);
                 pos+= c.length;
                 continue;
             }
-//          // contract with translators is that they have to understand codepoints 
-//          // and they just took care of a surrogate pair
             for (int pt = 0; pt < consumed; pt++) {
-                pos += Character.charCount(Character.codePointAt(input, pos));
+// buggy code
+//                pos += Character.charCount(Character.codePointAt(input, pos));
+               pos += Character.charCount(Character.codePointAt(input, pos-1));
+
             }
         }
     }
