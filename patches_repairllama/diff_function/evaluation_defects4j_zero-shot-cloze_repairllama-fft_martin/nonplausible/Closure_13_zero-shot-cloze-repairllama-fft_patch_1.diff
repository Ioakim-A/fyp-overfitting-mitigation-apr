diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/90873fd8-77a6-49ed-82ff-f467cd835752_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/d97bcf47-3230-4202-8be7-c86e97042ec4_fixed.java
index b5d94e0..7d6e4fa 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/90873fd8-77a6-49ed-82ff-f467cd835752_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/d97bcf47-3230-4202-8be7-c86e97042ec4_fixed.java
@@ -1,26 +1,23 @@
   private void traverse(Node node) {
-    // The goal here is to avoid retraversing
-    // the entire AST to catch newly created opportunities.
-    // So we track whether a "unit of code" has changed,
-    // and revisit immediately.
     if (!shouldVisit(node)) {
       return;
     }
-
     int visits = 0;
     do {
       Node c = node.getFirstChild();
       while(c != null) {
-        traverse(c);
+// buggy code
+//        traverse(c);
+//        Node next = c.getNext();
+       visit(c);
         Node next = c.getNext();
+        traverse(next);
+
         c = next;
       }
-
       visit(node);
       visits++;
-
       Preconditions.checkState(visits < 10000, "too many interations");
     } while (shouldRetraverse(node));
-
     exitNode(node);
   }
