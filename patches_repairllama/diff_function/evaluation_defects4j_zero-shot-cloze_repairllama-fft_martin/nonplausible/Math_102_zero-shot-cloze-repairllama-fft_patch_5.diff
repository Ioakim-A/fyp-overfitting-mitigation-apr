diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/d335235e-7a4a-4b15-b86b-1bb72a1d8b04_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/873a49f9-a0da-4256-85b4-744131fe6946_fixed.java
index 9dbd4e4..069bddc 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/d335235e-7a4a-4b15-b86b-1bb72a1d8b04_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/873a49f9-a0da-4256-85b4-744131fe6946_fixed.java
@@ -1,18 +1,27 @@
     public double chiSquare(double[] expected, long[] observed)
         throws IllegalArgumentException {
         if ((expected.length < 2) || (expected.length != observed.length)) {
             throw new IllegalArgumentException(
                     "observed, expected array lengths incorrect");
         }
         if (!isPositive(expected) || !isNonNegative(observed)) {
             throw new IllegalArgumentException(
                 "observed counts must be non-negative and expected counts must be postive");
         }
+// buggy code
+//        double sumSq = 0.0d;
+//        double dev = 0.0d;
+//        for (int i = 0; i < observed.length; i++) {
+//                dev = ((double) observed[i] - expected[i]);
+//                sumSq += dev * dev / expected[i];
+//        }
+//        return sumSq;
+
         double sumSq = 0.0d;
-        double dev = 0.0d;
         for (int i = 0; i < observed.length; i++) {
-                dev = ((double) observed[i] - expected[i]);
+                double dev = ((double) observed[i] - expected[i]);
                 sumSq += dev * dev / expected[i];
+
         }
         return sumSq;
     }
