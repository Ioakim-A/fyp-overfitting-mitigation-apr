diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/d868cbfe-04f0-4a20-a5cc-73307bcf3a52_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/7cab6afe-2f94-4f08-b2d3-389db6d20e17_fixed.java
index 02afa2a..12023b4 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/d868cbfe-04f0-4a20-a5cc-73307bcf3a52_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/7cab6afe-2f94-4f08-b2d3-389db6d20e17_fixed.java
@@ -1,28 +1,40 @@
   static boolean isValidDefineValue(Node val, Set<String> defines) {
     switch (val.getType()) {
       case Token.STRING:
       case Token.NUMBER:
       case Token.TRUE:
       case Token.FALSE:
         return true;
-
-      // Binary operators are only valid if both children are valid.
+// buggy code
+//      case Token.BITAND:
+//      case Token.BITNOT:
+//      case Token.BITOR:
+//      case Token.BITXOR:
+//      case Token.NOT:
+//      case Token.NEG:
+//      case Token.ADD:
+//      case Token.SUB:
+//      case Token.MUL:
+//      case Token.DIV:
+//      case Token.MOD:
         case Token.BITAND:
         case Token.BITNOT:
         case Token.BITOR:
         case Token.BITXOR:
-
-      // Uniary operators are valid if the child is valid.
         case Token.NOT:
         case Token.NEG:
+        case Token.ADD:
+        case Token.SUB:
+        case Token.MUL:
+        case Token.DIV:
+        case Token.MOD:
+
         return isValidDefineValue(val.getFirstChild(), defines);
-
-      // Names are valid if and only if they are defines themselves.
       case Token.NAME:
       case Token.GETPROP:
         if (val.isQualifiedName()) {
           return defines.contains(val.getQualifiedName());
         }
     }
     return false;
   }
