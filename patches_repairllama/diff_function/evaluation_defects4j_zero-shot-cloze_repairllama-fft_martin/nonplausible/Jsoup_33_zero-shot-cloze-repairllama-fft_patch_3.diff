diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/3f711f53-9621-4e12-95f5-b663297b72a8_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/b7af5914-2624-4cc4-a75c-575c9a85082b_fixed.java
index dc93be3..4bb0e26 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/3f711f53-9621-4e12-95f5-b663297b72a8_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/b7af5914-2624-4cc4-a75c-575c9a85082b_fixed.java
@@ -1,14 +1,20 @@
     Element insert(Token.StartTag startTag) {
-        // handle empty unknown tags
-        // when the spec expects an empty tag, will directly hit insertEmpty, so won't generate this fake end tag.
         if (startTag.isSelfClosing()) {
             Element el = insertEmpty(startTag);
             stack.add(el);
-            tokeniser.emit(new Token.EndTag(el.tagName()));  // ensure we get out of whatever state we are in. emitted for yielded processing
+// buggy code
+           tokeniser.emit(new Token.EndTag(el.tagName()));  
             return el;
         }
+        Element el = new Element(Tag.valueOf(startTag.name()), baseUri, startTag.attributes);
+        insert(el);
+        if (startTag.isSelfClosing()) {
+            stack.add(el);
 
+            tokeniser.emit(new Token.EndTag(el.tagName()));  
+            return el;
+        }
         Element el = new Element(Tag.valueOf(startTag.name()), baseUri, startTag.attributes);
         insert(el);
         return el;
     }
