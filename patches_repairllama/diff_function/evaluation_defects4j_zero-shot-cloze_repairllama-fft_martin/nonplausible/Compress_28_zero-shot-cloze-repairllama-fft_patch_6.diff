diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/cf5e41af-3870-47d4-b840-3d66111c952e_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/ca1ef406-007b-413e-a8bd-d3212ab33323_fixed.java
index 661ff51..54aef8e 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/cf5e41af-3870-47d4-b840-3d66111c952e_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/ca1ef406-007b-413e-a8bd-d3212ab33323_fixed.java
@@ -1,24 +1,31 @@
     public int read(byte[] buf, int offset, int numToRead) throws IOException {
     	int totalRead = 0;
-
         if (hasHitEOF || entryOffset >= entrySize) {
             return -1;
         }
-
         if (currEntry == null) {
             throw new IllegalStateException("No current tar entry");
         }
-
         numToRead = Math.min(numToRead, available());
-        
         totalRead = is.read(buf, offset, numToRead);
+// buggy code
+//        count(totalRead);
+//        if (totalRead == -1) {
+//            hasHitEOF = true;
+//        } else {
+//            entryOffset += totalRead;
+//        }
+        if (totalRead > 0) {
             count(totalRead);
-        
             if (totalRead == -1) {
                 hasHitEOF = true;
+            }
         } else {
+            hasHitEOF = true;
+        }
+        if (!hasHitEOF) {
+
             entryOffset += totalRead;
         }
-
         return totalRead;
     }
