diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/6b28757b-76fd-455d-8dc1-54976ceaf0dd_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/271a9326-3b0e-4242-8ac2-3285aaa1d95a_fixed.java
index 284dc9c..691ccc1 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/6b28757b-76fd-455d-8dc1-54976ceaf0dd_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/271a9326-3b0e-4242-8ac2-3285aaa1d95a_fixed.java
@@ -1,29 +1,36 @@
     public int parseInto(ReadWritableInstant instant, String text, int position) {
         DateTimeParser parser = requireParser();
         if (instant == null) {
             throw new IllegalArgumentException("Instant must not be null");
         }
-        
         long instantMillis = instant.getMillis();
         Chronology chrono = instant.getChronology();
+// buggy code
+//        long instantLocal = instantMillis + chrono.getZone().getOffset(instantMillis);
+//        chrono = selectChronology(chrono);
+//        int defaultYear = chrono.year().get(instantLocal);
+//        int defaultMonth = chrono.monthOfYear().get(instantLocal);
+//        int defaultDay = chrono.dayOfMonth().get(instantLocal);
         long instantLocal = instantMillis + chrono.getZone().getOffset(instantMillis);
         chrono = selectChronology(chrono);
         int defaultYear = chrono.year().get(instantLocal);
+        int defaultMonth = chrono.monthOfYear().get(instantLocal);
+        int defaultDay = chrono.dayOfMonth().get(instantLocal);
 
         DateTimeParserBucket bucket = new DateTimeParserBucket(
             instantLocal, chrono, iLocale, iPivotYear, defaultYear);
         int newPos = parser.parseInto(bucket, text, position);
         instant.setMillis(bucket.computeMillis(false, text));
         if (iOffsetParsed && bucket.getOffsetInteger() != null) {
             int parsedOffset = bucket.getOffsetInteger();
             DateTimeZone parsedZone = DateTimeZone.forOffsetMillis(parsedOffset);
             chrono = chrono.withZone(parsedZone);
         } else if (bucket.getZone() != null) {
             chrono = chrono.withZone(bucket.getZone());
         }
         instant.setChronology(chrono);
         if (iZone != null) {
             instant.setZone(iZone);
         }
         return newPos;
     }
