diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/1d873fb7-fc90-4802-ba84-56b3a0a16fe0_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/495f935a-3111-4e0a-a88a-a41fb2e883b8_fixed.java
index 44d6cc6..e09edc4 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/1d873fb7-fc90-4802-ba84-56b3a0a16fe0_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/495f935a-3111-4e0a-a88a-a41fb2e883b8_fixed.java
@@ -1,16 +1,20 @@
   public Date read(JsonReader in) throws IOException {
-    if (in.peek() != JsonToken.STRING) {
-      throw new JsonParseException("The date should be a string value");
+// buggy code
+//    if (in.peek() != JsonToken.STRING) {
+//      throw new JsonParseException("The date should be a string value");
+//    }
+    if (in.peek() != JsonToken.NULL && in.peek() != JsonToken.STRING) {
+      throw new JsonParseException("The date should be a string or null value");
+
     }
     Date date = deserializeToDate(in.nextString());
     if (dateType == Date.class) {
       return date;
     } else if (dateType == Timestamp.class) {
       return new Timestamp(date.getTime());
     } else if (dateType == java.sql.Date.class) {
       return new java.sql.Date(date.getTime());
     } else {
-      // This must never happen: dateType is guarded in the primary constructor
       throw new AssertionError();
     }
   }
