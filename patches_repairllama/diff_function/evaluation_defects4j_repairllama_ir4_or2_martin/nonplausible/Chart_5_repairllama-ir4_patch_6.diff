diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/a4958751-c1d4-42aa-9905-df07f9c71ad6_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/772d0266-31f3-4721-875e-66ea28c606d3_fixed.java
index 0cc5123..8e323d1 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/a4958751-c1d4-42aa-9905-df07f9c71ad6_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/772d0266-31f3-4721-875e-66ea28c606d3_fixed.java
@@ -1,37 +1,35 @@
     public XYDataItem addOrUpdate(Number x, Number y) {
         if (x == null) {
             throw new IllegalArgumentException("Null 'x' argument.");
         }
-
-        // if we get to here, we know that duplicate X values are not permitted
-        XYDataItem overwritten = null;
+// buggy code
+//         XYDataItem overwritten = null;
+//         int index = indexOf(x);
+//         if (index >= 0 && !this.allowDuplicateXValues) {
        int index = indexOf(x);
         if (index >= 0 && !this.allowDuplicateXValues) {
+            XYDataItem overwritten = (XYDataItem) this.data.get(index);
+            overwritten.setY(y);
             XYDataItem existing = (XYDataItem) this.data.get(index);
             try {
                 overwritten = (XYDataItem) existing.clone();
             }
             catch (CloneNotSupportedException e) {
                 throw new SeriesException("Couldn't clone XYDataItem!");
             }
             existing.setY(y);
         }
         else {
-            // if the series is sorted, the negative index is a result from
-            // Collections.binarySearch() and tells us where to insert the
-            // new item...otherwise it will be just -1 and we should just
-            // append the value to the list...
             if (this.autoSort) {
                 this.data.add(-index - 1, new XYDataItem(x, y));
             }
             else {
                 this.data.add(new XYDataItem(x, y));
             }
-            // check if this addition will exceed the maximum item count...
             if (getItemCount() > this.maximumItemCount) {
                 this.data.remove(0);
             }
         }
         fireSeriesChanged();
         return overwritten;
     }
