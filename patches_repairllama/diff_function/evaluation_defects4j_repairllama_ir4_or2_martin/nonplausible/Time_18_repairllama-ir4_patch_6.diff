diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/59a411f5-0765-4671-94bf-696de216552c_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/6a7f0782-2eed-44a1-b10e-5027b2ff356b_fixed.java
index be2af16..45b19c5 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/59a411f5-0765-4671-94bf-696de216552c_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/6a7f0782-2eed-44a1-b10e-5027b2ff356b_fixed.java
@@ -1,29 +1,29 @@
     public long getDateTimeMillis(int year, int monthOfYear, int dayOfMonth,
                                   int hourOfDay, int minuteOfHour,
                                   int secondOfMinute, int millisOfSecond)
         throws IllegalArgumentException
     {
         Chronology base;
         if ((base = getBase()) != null) {
             return base.getDateTimeMillis
                 (year, monthOfYear, dayOfMonth,
                  hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
         }
-
-        // Assume date is Gregorian.
         long instant;
-            instant = iGregorianChronology.getDateTimeMillis
+// buggy code
+//             instant = iGregorianChronology.getDateTimeMillis
+//                 (year, monthOfYear, dayOfMonth,
+//                  hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
+       instant = getJulianChronology().getDateTimeMillis
             (year, monthOfYear, dayOfMonth,
              hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
         if (instant < iCutoverMillis) {
-            // Maybe it's Julian.
             instant = iJulianChronology.getDateTimeMillis
                 (year, monthOfYear, dayOfMonth,
                  hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
             if (instant >= iCutoverMillis) {
-                // Okay, it's in the illegal cutover gap.
                 throw new IllegalArgumentException("Specified date does not exist");
             }
         }
         return instant;
     }
