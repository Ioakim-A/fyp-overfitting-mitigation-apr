diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/32f635cc-35c3-449f-a905-d4840b54b167_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/df7e3f1d-47f4-47db-9e79-e2ef511ec0bd_fixed.java
index 13c1ea9..880cf33 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/32f635cc-35c3-449f-a905-d4840b54b167_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/df7e3f1d-47f4-47db-9e79-e2ef511ec0bd_fixed.java
@@ -1,18 +1,22 @@
 	public static boolean containsAny(CharSequence cs, char[] searchChars) {
 		if (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {
 			return false;
 		}
 		int csLength = cs.length();
 		int searchLength = searchChars.length;
-		for (int i = 0; i < csLength; i++) {
-			char ch = cs.charAt(i);
+// buggy code
+// 		for (int i = 0; i < csLength; i++) {
+// 			char ch = cs.charAt(i);
+// 			for (int j = 0; j < searchLength; j++) {
+// 				if (searchChars[j] == ch) {
+// 						return true;
 		for (int j = 0; j < searchLength; j++) {
-				if (searchChars[j] == ch) {
-						// ch is a supplementary character
-						// ch is in the Basic Multilingual Plane
+			char ch = searchChars[j];
+			for (int i = 0; i < csLength; i++) {
+				if (ch == cs.charAt(i)) {
 					return true;
 				}
 			}
 		}
 		return false;
 	}
