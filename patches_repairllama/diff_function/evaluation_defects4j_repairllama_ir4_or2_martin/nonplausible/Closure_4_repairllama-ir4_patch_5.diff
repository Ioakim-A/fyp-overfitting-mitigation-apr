diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/8ddff091-815c-44f4-b112-2491754f5765_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/d4a31a9a-0284-4427-8ac3-8cea617efd32_fixed.java
index 3840a76..7e356e7 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/8ddff091-815c-44f4-b112-2491754f5765_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/d4a31a9a-0284-4427-8ac3-8cea617efd32_fixed.java
@@ -1,29 +1,30 @@
   JSType resolveInternal(ErrorReporter t, StaticScope<JSType> enclosing) {
-    // TODO(user): Investigate whether it is really necessary to keep two
-    // different mechanisms for resolving named types, and if so, which order
-    // makes more sense. Now, resolution via registry is first in order to
-    // avoid triggering the warnings built into the resolution via properties.
     boolean resolved = resolveViaRegistry(t, enclosing);
-    if (detectImplicitPrototypeCycle()) {
-      handleTypeCycle(t);
-    }
-
+// buggy code
+//     if (detectImplicitPrototypeCycle()) {
+//       handleTypeCycle(t);
+//     }
+//     if (resolved) {
+//       super.resolveInternal(t, enclosing);
+//       finishPropertyContinuations();
+//       return registry.isLastGeneration() ?
+//           getReferencedType() : this;
+//     }
+//     resolveViaProperties(t, enclosing);
+//     if (detectImplicitPrototypeCycle()) {
    if (resolved) {
       super.resolveInternal(t, enclosing);
       finishPropertyContinuations();
       return registry.isLastGeneration() ?
           getReferencedType() : this;
     }
-
-    resolveViaProperties(t, enclosing);
     if (detectImplicitPrototypeCycle()) {
       handleTypeCycle(t);
     }
-
     super.resolveInternal(t, enclosing);
     if (isResolved()) {
       finishPropertyContinuations();
     }
     return registry.isLastGeneration() ?
         getReferencedType() : this;
   }
