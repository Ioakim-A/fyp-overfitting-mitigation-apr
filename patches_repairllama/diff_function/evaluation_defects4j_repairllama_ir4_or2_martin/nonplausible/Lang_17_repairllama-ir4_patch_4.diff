diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/fb4bcff6-0cae-4add-b472-cfdf785d61c5_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/992ca431-e892-43ad-8c28-c32672b2ffb4_fixed.java
index 8cbef3b..bbc5fcd 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/fb4bcff6-0cae-4add-b472-cfdf785d61c5_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/992ca431-e892-43ad-8c28-c32672b2ffb4_fixed.java
@@ -1,30 +1,42 @@
     public final void translate(CharSequence input, Writer out) throws IOException {
         if (out == null) {
             throw new IllegalArgumentException("The Writer must not be null");
         }
         if (input == null) {
             return;
         }
         int pos = 0;
-        int len = Character.codePointCount(input, 0, input.length());
+// buggy code
+//         int len = Character.codePointCount(input, 0, input.length());
+//         while (pos < len) {
+//             int consumed = translate(input, pos, out);
+//             if (consumed == 0) {
+//                 char[] c = Character.toChars(Character.codePointAt(input, pos));
+//                 out.write(c);
+//             }
+//             else {
+//             for (int pt = 0; pt < consumed; pt++) {
+//                     if (pos < len - 2) {
+//                 pos += Character.charCount(Character.codePointAt(input, pos));
+//                     } else {
+//                         pos++;
+//                     }
+//                 }
+//                 pos--;
+//             }
+//             pos++;
+       int len = input.length();
         while (pos < len) {
             int consumed = translate(input, pos, out);
             if (consumed == 0) {
                 char[] c = Character.toChars(Character.codePointAt(input, pos));
                 out.write(c);
             }
             else {
-//          // contract with translators is that they have to understand codepoints 
-//          // and they just took care of a surrogate pair
             for (int pt = 0; pt < consumed; pt++) {
-                    if (pos < len - 2) {
                     pos += Character.charCount(Character.codePointAt(input, pos));
-                    } else {
-                        pos++;
-                    }
                 }
-                pos--;
             }
             pos++;
         }
     }
