diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/80e7c3bf-b890-4f1d-a6c3-8877bdd3d1f2_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/683968ec-6b68-4ed0-a318-ae98c383fe67_fixed.java
index 3041bd5..615b4fe 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/80e7c3bf-b890-4f1d-a6c3-8877bdd3d1f2_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/683968ec-6b68-4ed0-a318-ae98c383fe67_fixed.java
@@ -1,28 +1,26 @@
     public void remove(SettableBeanProperty propToRm)
     {
         ArrayList<SettableBeanProperty> props = new ArrayList<SettableBeanProperty>(_size);
         String key = getPropertyName(propToRm);
         boolean found = false;
-
         for (int i = 1, end = _hashArea.length; i < end; i += 2) {
             SettableBeanProperty prop = (SettableBeanProperty) _hashArea[i];
             if (prop == null) {
                 continue;
             }
             if (!found) {
-                // 09-Jan-2017, tatu: Important: must check name slot and NOT property name,
-                //   as only former is lower-case in case-insensitive case
-                found = key.equals(prop.getName());
+// buggy code
+//                 found = key.equals(prop.getName());
+               found = prop.getName().equals(key);
                 if (found) {
-                    // need to leave a hole here
                     _propsInOrder[_findFromOrdered(prop)] = null;
                     continue;
                 }
             }
             props.add(prop);
         }
         if (!found) {
             throw new NoSuchElementException("No entry '"+propToRm.getName()+"' found, can't remove");
         }
         init(props);
     }
