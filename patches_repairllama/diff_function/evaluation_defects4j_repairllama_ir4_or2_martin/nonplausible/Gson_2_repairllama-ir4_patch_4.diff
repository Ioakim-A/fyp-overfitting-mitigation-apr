diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/5e7dcd20-ddff-48c9-92b5-6b9db36ac66f_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/029a8fe7-c761-4737-8bab-c2e4301477a0_fixed.java
index 3563e3c..e7f4658 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/5e7dcd20-ddff-48c9-92b5-6b9db36ac66f_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/029a8fe7-c761-4737-8bab-c2e4301477a0_fixed.java
@@ -1,17 +1,18 @@
   public static <T1> TypeAdapterFactory newTypeHierarchyFactory(
       final Class<T1> clazz, final TypeAdapter<T1> typeAdapter) {
     return new TypeAdapterFactory() {
       @SuppressWarnings("unchecked")
       public <T2> TypeAdapter<T2> create(Gson gson, TypeToken<T2> typeToken) {
         final Class<? super T2> requestedType = typeToken.getRawType();
         if (!clazz.isAssignableFrom(requestedType)) {
           return null;
         }
-        return (TypeAdapter<T2>) typeAdapter;
-
+// buggy code
+//         return (TypeAdapter<T2>) typeAdapter;
+       return (TypeAdapter<T2>) (TypeAdapter<Object>) typeAdapter;
       }
       @Override public String toString() {
         return "Factory[typeHierarchy=" + clazz.getName() + ",adapter=" + typeAdapter + "]";
       }
     };
   }
