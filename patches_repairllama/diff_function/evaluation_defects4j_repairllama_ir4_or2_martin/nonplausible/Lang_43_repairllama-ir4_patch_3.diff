diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/273ca839-cbe4-461e-9017-04a01ea2b1ff_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/b1203def-24ca-491b-90b9-4f8c74910d78_fixed.java
index 7a3ebc1..e1dd96f 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/273ca839-cbe4-461e-9017-04a01ea2b1ff_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/b1203def-24ca-491b-90b9-4f8c74910d78_fixed.java
@@ -1,28 +1,30 @@
     private StringBuffer appendQuotedString(String pattern, ParsePosition pos,
             StringBuffer appendTo, boolean escapingOn) {
         int start = pos.getIndex();
         char[] c = pattern.toCharArray();
         if (escapingOn && c[start] == QUOTE) {
+// buggy code
+// 
             return appendTo == null ? null : appendTo.append(QUOTE);
         }
         int lastHold = start;
         for (int i = pos.getIndex(); i < pattern.length(); i++) {
             if (escapingOn && pattern.substring(i).startsWith(ESCAPED_QUOTE)) {
                 appendTo.append(c, lastHold, pos.getIndex() - lastHold).append(
                         QUOTE);
                 pos.setIndex(i + ESCAPED_QUOTE.length());
                 lastHold = pos.getIndex();
                 continue;
             }
             switch (c[pos.getIndex()]) {
             case QUOTE:
                 next(pos);
                 return appendTo == null ? null : appendTo.append(c, lastHold,
                         pos.getIndex() - lastHold);
             default:
                 next(pos);
             }
         }
         throw new IllegalArgumentException(
                 "Unterminated quoted string at position " + start);
     }
