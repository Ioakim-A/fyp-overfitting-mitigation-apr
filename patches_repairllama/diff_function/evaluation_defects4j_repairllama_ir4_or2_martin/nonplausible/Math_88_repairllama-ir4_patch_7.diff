diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/ddce04c0-ed5a-4cd7-b94f-09291bff2578_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/0be5299e-cd03-4e95-8cbd-1f65d8f28555_fixed.java
index 8733f51..f6f0afa 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/ddce04c0-ed5a-4cd7-b94f-09291bff2578_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/0be5299e-cd03-4e95-8cbd-1f65d8f28555_fixed.java
@@ -1,22 +1,34 @@
     protected RealPointValuePair getSolution() {
         double[] coefficients = new double[getOriginalNumDecisionVariables()];
         Integer basicRow =
             getBasicRow(getNumObjectiveFunctions() + getOriginalNumDecisionVariables());
         double mostNegative = basicRow == null ? 0 : getEntry(basicRow, getRhsOffset());
+// buggy code
+//         for (int i = 0; i < coefficients.length; i++) {
+//             basicRow = getBasicRow(getNumObjectiveFunctions() + i);
+//                 coefficients[i] =
+//                     (basicRow == null ? 0 : getEntry(basicRow, getRhsOffset())) -
+//                     (restrictToNonNegative ? 0 : mostNegative);
+//             if (basicRow != null) {
+//                 for (int j = getNumObjectiveFunctions(); j < getNumObjectiveFunctions() + i; j++) {
+//                     if (tableau.getEntry(basicRow, j) == 1) {
+//                          coefficients[i] = 0;
+//                     }
+//                 }
        for (int i = 0; i < coefficients.length; i++) {
             basicRow = getBasicRow(getNumObjectiveFunctions() + i);
-                // if multiple variables can take a given value 
-                // then we choose the first and set the rest equal to 0
             coefficients[i] =
                 (basicRow == null ? 0 : getEntry(basicRow, getRhsOffset())) -
                 (restrictToNonNegative ? 0 : mostNegative);
             if (basicRow != null) {
                 for (int j = getNumObjectiveFunctions(); j < getNumObjectiveFunctions() + i; j++) {
                     if (tableau.getEntry(basicRow, j) == 1) {
                         coefficients[i] = 0;
                     }
                 }
+            } else {
+                coefficients[i] = 0;
             }
         }
         return new RealPointValuePair(coefficients, f.getValue(coefficients));
     }
