diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/b6a06cce-28bd-47f0-aa13-d78b14c5ecd6_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/1d9556b8-d06d-48e1-9a24-e082d3877f4b_fixed.java
index 88f63e7..794ebe5 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/b6a06cce-28bd-47f0-aa13-d78b14c5ecd6_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/1d9556b8-d06d-48e1-9a24-e082d3877f4b_fixed.java
@@ -1,24 +1,23 @@
     @Override public void visit(NodeTraversal t, Node n, Node parent) {
       if (n == scope.getRootNode()) return;
-
       if (n.getType() == Token.LP && parent == scope.getRootNode()) {
         handleFunctionInputs(parent);
         return;
       }
-
-      attachLiteralTypes(n);
-      switch (n.getType()) {
-        case Token.FUNCTION:
-          if (parent.getType() == Token.NAME) {
-            return;
-          }
-          defineDeclaredFunction(n, parent);
-          break;
-        case Token.CATCH:
-          defineCatch(n, parent);
-          break;
-        case Token.VAR:
-          defineVar(n, parent);
-          break;
-      }
+// buggy code
+//       attachLiteralTypes(n);
+//       switch (n.getType()) {
+//         case Token.FUNCTION:
+//           if (parent.getType() == Token.NAME) {
+//             return;
+//           }
+//           defineDeclaredFunction(n, parent);
+//           break;
+//         case Token.CATCH:
+//           defineCatch(n, parent);
+//           break;
+//         case Token.VAR:
+//           defineVar(n, parent);
+//           break;
+//       }
     }
