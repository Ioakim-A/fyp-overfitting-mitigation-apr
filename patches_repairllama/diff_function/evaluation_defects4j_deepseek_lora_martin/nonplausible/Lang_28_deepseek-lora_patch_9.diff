diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/8580a6f1-145c-4aca-a61b-011bdc5e5476_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/80aace25-b1a3-4889-acec-de04d0250851_fixed.java
index 4bbd561..be0ae26 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/8580a6f1-145c-4aca-a61b-011bdc5e5476_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/80aace25-b1a3-4889-acec-de04d0250851_fixed.java
@@ -1,37 +1,36 @@
     /**
      * {@inheritDoc}
      */
     @Override
     public int translate(CharSequence input, int index, Writer out) throws IOException {
         // TODO: Protect from ArrayIndexOutOfBounds
         if(input.charAt(index) == '&' && input.charAt(index + 1) == '#') {
             int start = index + 2;
             boolean isHex = false;
-
             char firstChar = input.charAt(start);
             if(firstChar == 'x' || firstChar == 'X') {
                 start++;
                 isHex = true;
             }
-
             int end = start;
             while(input.charAt(end) != ';') {
                 end++;
             }
-
             int entityValue;
             try {
                 if(isHex) {
                     entityValue = Integer.parseInt(input.subSequence(start, end).toString(), 16);
                 } else {
                     entityValue = Integer.parseInt(input.subSequence(start, end).toString(), 10);
                 }
             } catch(NumberFormatException nfe) {
                 return 0;
             }
+// buggy code
+//                out.write(entityValue);
+            out.write(Integer.toString(entityValue));
 
-                out.write(entityValue);
             return 2 + (end - start) + (isHex ? 1 : 0) + 1;
         }
         return 0;
     }
