diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/4d4fc620-a370-49c5-b806-2cbe0ee03c4c_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/3b899884-80b7-4030-aa7a-24bd69993035_fixed.java
index 40f74f7..17e9724 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/4d4fc620-a370-49c5-b806-2cbe0ee03c4c_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/3b899884-80b7-4030-aa7a-24bd69993035_fixed.java
@@ -1,50 +1,58 @@
     public static boolean testNode(Node node, NodeTest test) {
         if (test == null) {
             return true;
         }
         if (test instanceof NodeNameTest) {
             if (node.getNodeType() != Node.ELEMENT_NODE) {
                 return false;
             }
-
             NodeNameTest nodeNameTest = (NodeNameTest) test;
             QName testName = nodeNameTest.getNodeName();
             String namespaceURI = nodeNameTest.getNamespaceURI();
             boolean wildcard = nodeNameTest.isWildcard();
             String testPrefix = testName.getPrefix();
             if (wildcard && testPrefix == null) {
                 return true;
             }
             if (wildcard
                 || testName.getName()
                         .equals(DOMNodePointer.getLocalName(node))) {
                 String nodeNS = DOMNodePointer.getNamespaceURI(node);
+// buggy code
+//                return equalStrings(namespaceURI, nodeNS);
+                if (namespaceURI == null) {
+                    if (nodeNS == null) {
+                        return true;
+                    }
+                } else {
                     return equalStrings(namespaceURI, nodeNS);
                 }
+
+            }
             return false;
         }
         if (test instanceof NodeTypeTest) {
             int nodeType = node.getNodeType();
             switch (((NodeTypeTest) test).getNodeType()) {
                 case Compiler.NODE_TYPE_NODE :
                     return nodeType == Node.ELEMENT_NODE
                             || nodeType == Node.DOCUMENT_NODE;
                 case Compiler.NODE_TYPE_TEXT :
                     return nodeType == Node.CDATA_SECTION_NODE
                         || nodeType == Node.TEXT_NODE;
                 case Compiler.NODE_TYPE_COMMENT :
                     return nodeType == Node.COMMENT_NODE;
                 case Compiler.NODE_TYPE_PI :
                     return nodeType == Node.PROCESSING_INSTRUCTION_NODE;
             }
             return false;
         }
         if (test instanceof ProcessingInstructionTest) {
             if (node.getNodeType() == Node.PROCESSING_INSTRUCTION_NODE) {
                 String testPI = ((ProcessingInstructionTest) test).getTarget();
                 String nodePI = ((ProcessingInstruction) node).getTarget();
                 return testPI.equals(nodePI);
             }
         }
         return false;
     }
