diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/a0a0bfcd-9feb-4b65-868b-3a8b9f4376ba_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/f1c2e251-037b-4e74-851a-6cc46be5f76f_fixed.java
index b529d33..f159f04 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/a0a0bfcd-9feb-4b65-868b-3a8b9f4376ba_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/f1c2e251-037b-4e74-851a-6cc46be5f76f_fixed.java
@@ -1,29 +1,36 @@
     /**
      * Used internally by the Soundex algorithm.
      *
      * Consonants from the same code group separated by W or H are treated as one.
      *
      * @param str
      *                  the cleaned working string to encode (in upper case).
      * @param index
      *                  the character position to encode
      * @return Mapping code for a particular character
      * @throws IllegalArgumentException
      *                  if the character is not mapped
      */
     private char getMappingCode(final String str, final int index) {
         // map() throws IllegalArgumentException
         final char mappedChar = this.map(str.charAt(index));
         // HW rule check
         if (index > 1 && mappedChar != '0') {
-            final char hwChar = str.charAt(index - 1);
-            if ('H' == hwChar || 'W' == hwChar) {
+// buggy code
+//            final char hwChar = str.charAt(index - 1);
+//            if ('H' == hwChar || 'W' == hwChar) {
+//                final char preHWChar = str.charAt(index - 2);
+//                final char firstCode = this.map(preHWChar);
+//                if (firstCode == mappedChar || 'H' == preHWChar || 'W' == preHWChar) {
+//                    return 0;
+            if ('H' == str.charAt(index - 1) || 'W' == str.charAt(index - 1)) {
                 final char preHWChar = str.charAt(index - 2);
                 final char firstCode = this.map(preHWChar);
                 if (firstCode == mappedChar || 'H' == preHWChar || 'W' == preHWChar) {
                     return 0;
+
                 }
             }
         }
         return mappedChar;
     }
