diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/b538f0eb-2db6-4c09-9f56-4e47e0a3578a_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/3de8566a-80c8-49d3-89ca-1d0483d65b46_fixed.java
index 1a63a66..3db3170 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/b538f0eb-2db6-4c09-9f56-4e47e0a3578a_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/3de8566a-80c8-49d3-89ca-1d0483d65b46_fixed.java
@@ -1,21 +1,28 @@
     @Override
     @Deprecated
     protected JavaType _narrow(Class<?> subclass)
     {
         if (_class == subclass) {
             return this;
         }
         // Should we check that there is a sub-class relationship?
         // 15-Jan-2016, tatu: Almost yes, but there are some complications with
         //    placeholder values (`Void`, `NoClass`), so can not quite do yet.
         // TODO: fix in 2.8
-            /*
+// buggy code
+//            /*
+//            throw new IllegalArgumentException("Class "+subclass.getName()+" not sub-type of "
+//                    +_class.getName());
+//                    */
+//            return new SimpleType(subclass, _bindings, this, _superInterfaces,
+//                    _valueHandler, _typeHandler, _asStatic);
+//        // Otherwise, stitch together the hierarchy. First, super-class
+//        // if not found, try a super-interface
+//        // should not get here but...
         throw new IllegalArgumentException("Class "+subclass.getName()+" not sub-type of "
                 +_class.getName());
-                    */
         return new SimpleType(subclass, _bindings, this, _superInterfaces,
                 _valueHandler, _typeHandler, _asStatic);
     // Otherwise, stitch together the hierarchy. First, super-class
-        // if not found, try a super-interface
-        // should not get here but...
+   
     }
