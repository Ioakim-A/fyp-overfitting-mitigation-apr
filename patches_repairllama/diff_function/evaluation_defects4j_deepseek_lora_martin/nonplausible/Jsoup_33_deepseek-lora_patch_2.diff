diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/6bea6775-a7f1-4c8c-b8b7-8bd9e4b1a3de_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/3a66ce7f-efe9-401a-814b-f729819d4dd4_fixed.java
index dc93be3..c0047c0 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/6bea6775-a7f1-4c8c-b8b7-8bd9e4b1a3de_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/3a66ce7f-efe9-401a-814b-f729819d4dd4_fixed.java
@@ -1,14 +1,16 @@
     Element insert(Token.StartTag startTag) {
         // handle empty unknown tags
         // when the spec expects an empty tag, will directly hit insertEmpty, so won't generate this fake end tag.
         if (startTag.isSelfClosing()) {
             Element el = insertEmpty(startTag);
             stack.add(el);
-            tokeniser.emit(new Token.EndTag(el.tagName()));  // ensure we get out of whatever state we are in. emitted for yielded processing
-            return el;
-        }
+// buggy code
+            stack.remove(stack.size() - 1);
 
+            tokeniser.emit(new Token.EndTag(el.tagName()));  // ensure we get out of whatever state we are in. emitted for yielded processing
+            return el;
+        }
         Element el = new Element(Tag.valueOf(startTag.name()), baseUri, startTag.attributes);
         insert(el);
         return el;
     }
