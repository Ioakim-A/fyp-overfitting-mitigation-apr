diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/0a18abcb-02ff-4ed6-b4cc-6f5b0ca39bea_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/b9e5f27b-3ada-48d5-a3dc-d6d4a6e2a2b9_fixed.java
index 70cafe0..8e86c76 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/0a18abcb-02ff-4ed6-b4cc-6f5b0ca39bea_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/b9e5f27b-3ada-48d5-a3dc-d6d4a6e2a2b9_fixed.java
@@ -1,18 +1,26 @@
     /**
      * Checks whether the given column is basic.
      * @param col index of the column to check
      * @return the row that the variable is basic in.  null if the column is not basic
      */
     private Integer getBasicRow(final int col) {
         Integer row = null;
         for (int i = getNumObjectiveFunctions(); i < getHeight(); i++) {
-            if (!MathUtils.equals(getEntry(i, col), 0.0, epsilon)) {
+// buggy code
+//            if (!MathUtils.equals(getEntry(i, col), 0.0, epsilon)) {
+//                if (row == null) {
+//                row = i;
+//                } else {
+//                return null;
+//                }
+            if (MathUtils.equals(getEntry(i, col), 0.0, epsilon)) {
                 if (row == null) {
                     row = i;
                 } else {
                     return null;
                 }
+
             }
         }
         return row;
     }
