diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/c0192b68-defa-41d0-87ac-f8dc16183576_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/4eaeb6a9-354f-41c4-887a-07560fe6ce03_fixed.java
index 8afddc6..209036f 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/c0192b68-defa-41d0-87ac-f8dc16183576_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/4eaeb6a9-354f-41c4-887a-07560fe6ce03_fixed.java
@@ -1,22 +1,25 @@
   @Override
   protected CompilerOptions createOptions() {
     CompilerOptions options = new CompilerOptions();
     options.setCodingConvention(new ClosureCodingConvention());
     CompilationLevel level = flags.compilation_level;
     level.setOptionsForCompilationLevel(options);
     if (flags.debug) {
       level.setDebugOptionsForCompilationLevel(options);
     }
-
     WarningLevel wLevel = flags.warning_level;
     wLevel.setOptionsForWarningLevel(options);
     for (FormattingOption formattingOption : flags.formatting) {
       formattingOption.applyToOptions(options);
     }
-    if (flags.process_closure_primitives) {
+// buggy code
+//    if (flags.process_closure_primitives) {
+//      options.closurePass = true;
+//    }
+    if (flags.closure_primitives) {
       options.closurePass = true;
     }
 
     initOptionsFromFlags(options);
     return options;
   }
