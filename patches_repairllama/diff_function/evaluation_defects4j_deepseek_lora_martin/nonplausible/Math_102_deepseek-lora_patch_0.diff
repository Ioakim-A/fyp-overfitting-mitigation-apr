diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/adb87964-bd6c-4d8a-99c2-1f56a034e1fc_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/216c6bfd-f953-47d0-b5a4-179007f21e58_fixed.java
index 8b0cd97..70afd88 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/adb87964-bd6c-4d8a-99c2-1f56a034e1fc_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/216c6bfd-f953-47d0-b5a4-179007f21e58_fixed.java
@@ -1,30 +1,37 @@
      /**
      * {@inheritDoc}
      * <p><strong>Note: </strong>This implementation rescales the 
      * <code>expected</code> array if necessary to ensure that the sum of the
      * expected and observed counts are equal.</p>
      * 
      * @param observed array of observed frequency counts
      * @param expected array of expected frequency counts
      * @return chi-square test statistic
      * @throws IllegalArgumentException if preconditions are not met
      * or length is less than 2
      */
     public double chiSquare(double[] expected, long[] observed)
         throws IllegalArgumentException {
         if ((expected.length < 2) || (expected.length != observed.length)) {
             throw new IllegalArgumentException(
                     "observed, expected array lengths incorrect");
         }
         if (!isPositive(expected) || !isNonNegative(observed)) {
             throw new IllegalArgumentException(
                 "observed counts must be non-negative and expected counts must be postive");
         }
-        double sumSq = 0.0d;
-        double dev = 0.0d;
+// buggy code
+//        double sumSq = 0.0d;
+//        double dev = 0.0d;
+//        for (int i = 0; i < observed.length; i++) {
+//                dev = ((double) observed[i] - expected[i]);
+//                sumSq += dev * dev / expected[i];
+        double sumSq = 0.0;
+        double dev = 0.0;
         for (int i = 0; i < observed.length; i++) {
                 dev = ((double) observed[i] - expected[i]);
                 sumSq += dev * dev / expected[i];
+
         }
         return sumSq;
     }
