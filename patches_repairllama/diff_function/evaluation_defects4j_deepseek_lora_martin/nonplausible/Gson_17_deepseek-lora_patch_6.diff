diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/17599a40-7446-45ff-9142-8b07873accf3_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/9f74847a-c324-4aa3-b163-0da4479a9535_fixed.java
index 85f5680..81c37b6 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/17599a40-7446-45ff-9142-8b07873accf3_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/9f74847a-c324-4aa3-b163-0da4479a9535_fixed.java
@@ -1,17 +1,21 @@
   @Override
   public Date read(JsonReader in) throws IOException {
-    if (in.peek() != JsonToken.STRING) {
-      throw new JsonParseException("The date should be a string value");
+// buggy code
+//    if (in.peek() != JsonToken.STRING) {
+//      throw new JsonParseException("The date should be a string value");
+    if (in.peek() != JsonToken.STRING && in.peek() != JsonToken.NULL) {
+      throw new JsonParseException("The date should be a string value or null");
+
     }
     Date date = deserializeToDate(in.nextString());
     if (dateType == Date.class) {
       return date;
     } else if (dateType == Timestamp.class) {
       return new Timestamp(date.getTime());
     } else if (dateType == java.sql.Date.class) {
       return new java.sql.Date(date.getTime());
     } else {
       // This must never happen: dateType is guarded in the primary constructor
       throw new AssertionError();
     }
   }
