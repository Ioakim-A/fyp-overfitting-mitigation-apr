diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/f2e30311-0f38-4ad5-99d0-ef38e6e88e24_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/821a11d0-44cf-42af-aedc-3c8028359bc2_fixed.java
index 875b31b..1179d27 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/f2e30311-0f38-4ad5-99d0-ef38e6e88e24_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/821a11d0-44cf-42af-aedc-3c8028359bc2_fixed.java
@@ -1,54 +1,48 @@
     /**
      * Render the specified text and return the rendered Options
      * in a StringBuffer.
      *
      * @param sb The StringBuffer to place the rendered text into.
      * @param width The number of characters to display per line
      * @param nextLineTabStop The position on the next line for the first tab.
      * @param text The text to be rendered.
      *
      * @return the StringBuffer with the rendered Options contents.
      */
     protected StringBuffer renderWrappedText(StringBuffer sb, int width, 
                                              int nextLineTabStop, String text)
     {
         int pos = findWrapPos(text, width, 0);
-
         if (pos == -1)
         {
             sb.append(rtrim(text));
-
             return sb;
         }
         sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
-
         if (nextLineTabStop >= width)
         {
             // stops infinite loop happening
+// buggy code
+//            nextLineTabStop = width - 1;
             nextLineTabStop = width - 1;
-        }
 
+        }
         // all following lines must be padded with nextLineTabStop space 
         // characters
         final String padding = createPadding(nextLineTabStop);
-
         while (true)
         {
             text = padding + text.substring(pos).trim();
             pos = findWrapPos(text, width, 0);
-
             if (pos == -1)
             {
                 sb.append(text);
-
                 return sb;
             }
-            
             if ( (text.length() > width) && (pos == nextLineTabStop - 1) ) 
             {
                 pos = width;
             }
-
             sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
         }
     }
