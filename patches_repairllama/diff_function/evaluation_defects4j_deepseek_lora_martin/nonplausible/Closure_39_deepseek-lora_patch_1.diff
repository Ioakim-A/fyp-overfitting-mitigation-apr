diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/71ab3047-2681-45b9-9c84-615a695e7acb_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/e4fbd388-d10e-4314-ab1f-db36f204d57b_fixed.java
index e4d90e7..ff6e86c 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/71ab3047-2681-45b9-9c84-615a695e7acb_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/e4fbd388-d10e-4314-ab1f-db36f204d57b_fixed.java
@@ -1,45 +1,52 @@
   @Override
   String toStringHelper(boolean forAnnotations) {
     if (hasReferenceName()) {
       return getReferenceName();
     } else if (prettyPrint) {
       // Don't pretty print recursively.
       prettyPrint = false;
-
       // Use a tree set so that the properties are sorted.
       Set<String> propertyNames = Sets.newTreeSet();
       for (ObjectType current = this;
            current != null && !current.isNativeObjectType() &&
                propertyNames.size() <= MAX_PRETTY_PRINTED_PROPERTIES;
            current = current.getImplicitPrototype()) {
         propertyNames.addAll(current.getOwnPropertyNames());
       }
-
       StringBuilder sb = new StringBuilder();
       sb.append("{");
-
       int i = 0;
       for (String property : propertyNames) {
         if (i > 0) {
           sb.append(", ");
         }
-
         sb.append(property);
         sb.append(": ");
-        sb.append(getPropertyType(property).toString());
-
+// buggy code
+//        sb.append(getPropertyType(property).toString());
+//        ++i;
+//        if (i == MAX_PRETTY_PRINTED_PROPERTIES) {
+//          sb.append(", ...");
+//          break;
+//        }
+//      }
+//      sb.append("}");
+//      prettyPrint = true;
+//      return sb.toString();
+//    } else {
+//      return "{...}";
+        sb.append(getPropertyType(property).toString(forAnnotations));
         ++i;
         if (i == MAX_PRETTY_PRINTED_PROPERTIES) {
           sb.append(", ...");
           break;
         }
       }
-
       sb.append("}");
-
       prettyPrint = true;
       return sb.toString();
     } else {
       return "{...}";
+
     }
   }
