diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/c7c19b7c-473a-4198-b7d4-03adeadb8c94_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/049498bb-c14f-413b-9499-d1609f2cb865_fixed.java
index 2608424..59a62c3 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/c7c19b7c-473a-4198-b7d4-03adeadb8c94_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/049498bb-c14f-413b-9499-d1609f2cb865_fixed.java
@@ -1,39 +1,43 @@
     /**
      * Convert to multidimensional counter.
      *
      * @param index Index in unidimensional counter.
      * @return the multidimensional counts.
      * @throws OutOfRangeException if {@code index} is not between
      * {@code 0} and the value returned by {@link #getSize()} (excluded).
      */
     public int[] getCounts(int index) {
         if (index < 0 ||
             index >= totalSize) {
             throw new OutOfRangeException(index, 0, totalSize);
         }
-
         final int[] indices = new int[dimension];
-
         int count = 0;
         for (int i = 0; i < last; i++) {
             int idx = 0;
             final int offset = uniCounterOffset[i];
             while (count <= index) {
                 count += offset;
                 ++idx;
             }
             --idx;
             count -= offset;
             indices[i] = idx;
         }
-
+// buggy code
+//        int idx = 1;
+//        while (count < index) {
+//            count += idx;
+//            ++idx;
+//        }
+//        --idx;
+//        indices[last] = idx;
         int idx = 1;
         while (count < index) {
             count += idx;
             ++idx;
         }
-        --idx;
-        indices[last] = idx;
+        indices[last] = idx - 1;
 
         return indices;
     }
