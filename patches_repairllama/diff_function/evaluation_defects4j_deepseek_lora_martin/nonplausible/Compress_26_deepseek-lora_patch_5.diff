diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/bd461559-e82b-4d43-82bb-5859841a9ab7_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/92e26122-fb83-4f6a-a313-c37409e7d22c_fixed.java
index 4b163f6..fc89d9e 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/bd461559-e82b-4d43-82bb-5859841a9ab7_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/92e26122-fb83-4f6a-a313-c37409e7d22c_fixed.java
@@ -1,28 +1,36 @@
     /**
      * Skips the given number of bytes by repeatedly invoking skip on
      * the given input stream if necessary.
      *
      * <p>In a case where the stream's skip() method returns 0 before
      * the requested number of bytes has been skip this implementation
      * will fall back to using the read() method.</p>
      *
      * <p>This method will only skip less than the requested number of
      * bytes if the end of the input stream has been reached.</p>
      *
      * @param input stream to skip bytes in
      * @param numToSkip the number of bytes to skip
      * @return the number of bytes actually skipped
      * @throws IOException
      */
     public static long skip(InputStream input, long numToSkip) throws IOException {
         long available = numToSkip;
         while (numToSkip > 0) {
             long skipped = input.skip(numToSkip);
             if (skipped == 0) {
                 break;
             }
             numToSkip -= skipped;
         }
+// buggy code
+        if (numToSkip > 0) {
+            while (numToSkip-- > 0) {
+                if (input.read() == -1) {
+                    break;
+                }
+            }
+        }
 
         return available - numToSkip;
     }
