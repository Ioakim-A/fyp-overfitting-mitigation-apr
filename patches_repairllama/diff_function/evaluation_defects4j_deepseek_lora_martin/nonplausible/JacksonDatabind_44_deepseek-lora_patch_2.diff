diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/22da4ee5-4ff3-43f5-875a-c79c325fa813_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/f3f026e5-b308-447e-a4dc-df0e780f2475_fixed.java
index 1a63a66..5ab793d 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/22da4ee5-4ff3-43f5-875a-c79c325fa813_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/f3f026e5-b308-447e-a4dc-df0e780f2475_fixed.java
@@ -1,21 +1,28 @@
     @Override
     @Deprecated
     protected JavaType _narrow(Class<?> subclass)
     {
         if (_class == subclass) {
             return this;
         }
         // Should we check that there is a sub-class relationship?
         // 15-Jan-2016, tatu: Almost yes, but there are some complications with
         //    placeholder values (`Void`, `NoClass`), so can not quite do yet.
         // TODO: fix in 2.8
-            /*
-            throw new IllegalArgumentException("Class "+subclass.getName()+" not sub-type of "
-                    +_class.getName());
-                    */
+// buggy code
+//            /*
+//            throw new IllegalArgumentException("Class "+subclass.getName()+" not sub-type of "
+//                    +_class.getName());
+//                    */
+//            return new SimpleType(subclass, _bindings, this, _superInterfaces,
+//                    _valueHandler, _typeHandler, _asStatic);
+//        // Otherwise, stitch together the hierarchy. First, super-class
+//        // if not found, try a super-interface
+//        // should not get here but...
         return new SimpleType(subclass, _bindings, this, _superInterfaces,
                 _valueHandler, _typeHandler, _asStatic);
     // Otherwise, stitch together the hierarchy. First, super-class
     // if not found, try a super-interface
     // should not get here but...
+
     }
