diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/d69d40fa-f20a-4a5a-a83b-0a278b6c99bd_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/787b5537-d894-477e-be8c-5f2fbaebd975_fixed.java
index e0ecec8..eec7ce8 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/d69d40fa-f20a-4a5a-a83b-0a278b6c99bd_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/787b5537-d894-477e-be8c-5f2fbaebd975_fixed.java
@@ -1,35 +1,36 @@
   /**
    * Visits the parameters of a CALL or a NEW node.
    */
   private void visitParameterList(NodeTraversal t, Node call,
       FunctionType functionType) {
     Iterator<Node> arguments = call.children().iterator();
     arguments.next(); // skip the function name
-
     Iterator<Node> parameters = functionType.getParameters().iterator();
     int ordinal = 0;
     Node parameter = null;
     Node argument = null;
     while (arguments.hasNext() &&
+// buggy code
+//           parameters.hasNext()) {
+//      // If there are no parameters left in the list, then the while loop
+//      // above implies that this must be a var_args function.
+//        parameter = parameters.next();
            parameters.hasNext()) {
-      // If there are no parameters left in the list, then the while loop
-      // above implies that this must be a var_args function.
       parameter = parameters.next();
+
       argument = arguments.next();
       ordinal++;
-
       validator.expectArgumentMatchesParameter(t, argument,
           getJSType(argument), getJSType(parameter), call, ordinal);
     }
-
     int numArgs = call.getChildCount() - 1;
     int minArgs = functionType.getMinArguments();
     int maxArgs = functionType.getMaxArguments();
     if (minArgs > numArgs || maxArgs < numArgs) {
       report(t, call, WRONG_ARGUMENT_COUNT,
               validator.getReadableJSTypeName(call.getFirstChild(), false),
               String.valueOf(numArgs), String.valueOf(minArgs),
               maxArgs != Integer.MAX_VALUE ?
               " and no more than " + maxArgs + " argument(s)" : "");
     }
   }
