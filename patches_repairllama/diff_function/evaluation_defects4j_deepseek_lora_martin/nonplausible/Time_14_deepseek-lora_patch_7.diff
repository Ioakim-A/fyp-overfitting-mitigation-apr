diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/e42d3385-3ec7-4116-95ac-29446ba2a11e_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/b24c1a41-1c91-407e-ace3-0bf344b45af7_fixed.java
index 10616db..5e5add0 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/e42d3385-3ec7-4116-95ac-29446ba2a11e_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/b24c1a41-1c91-407e-ace3-0bf344b45af7_fixed.java
@@ -1,19 +1,22 @@
     //-----------------------------------------------------------------------
     public int[] add(ReadablePartial partial, int fieldIndex, int[] values, int valueToAdd) {
         // overridden as superclass algorithm can't handle
         // 2004-02-29 + 48 months -> 2008-02-29 type dates
         if (valueToAdd == 0) {
             return values;
         }
-            // month is largest field and being added to, such as month-day
+// buggy code
+//            // month is largest field and being added to, such as month-day
+//            if (fieldIndex == partial.size()) {
+
         if (DateTimeUtils.isContiguous(partial)) {
             long instant = 0L;
             for (int i = 0, isize = partial.size(); i < isize; i++) {
                 instant = partial.getFieldType(i).getField(iChronology).set(instant, values[i]);
             }
             instant = add(instant, valueToAdd);
             return iChronology.get(partial, instant);
         } else {
             return super.add(partial, fieldIndex, values, valueToAdd);
         }
     }
