diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/24be899f-5a5e-4e38-8745-13f56685124a_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/11fba04f-bc4f-4296-9998-7535f6d1fdd1_fixed.java
index c18eb8b..cde4c7b 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/24be899f-5a5e-4e38-8745-13f56685124a_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/11fba04f-bc4f-4296-9998-7535f6d1fdd1_fixed.java
@@ -1,30 +1,33 @@
     /**
      * <p>Compares two CharSequences, returning {@code true} if they represent
      * equal sequences of characters.</p>
      *
      * <p>{@code null}s are handled without exceptions. Two {@code null}
      * references are considered to be equal. The comparison is case sensitive.</p>
      *
      * <pre>
      * StringUtils.equals(null, null)   = true
      * StringUtils.equals(null, "abc")  = false
      * StringUtils.equals("abc", null)  = false
      * StringUtils.equals("abc", "abc") = true
      * StringUtils.equals("abc", "ABC") = false
      * </pre>
      *
      * @see java.lang.CharSequence#equals(Object)
      * @param cs1  the first CharSequence, may be {@code null}
      * @param cs2  the second CharSequence, may be {@code null}
      * @return {@code true} if the CharSequences are equal (case-sensitive), or both {@code null}
      * @since 3.0 Changed signature from equals(String, String) to equals(CharSequence, CharSequence)
      */
     public static boolean equals(CharSequence cs1, CharSequence cs2) {
         if (cs1 == cs2) {
             return true;
         }
         if (cs1 == null || cs2 == null) {
             return false;
         }
-            return cs1.equals(cs2);
+// buggy code
+//            return cs1.equals(cs2);
+        return cs1.length() == cs2.length() && cs1.toString().equals(cs2.toString());
+
     }
