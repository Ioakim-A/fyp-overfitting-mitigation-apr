diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/dbd5fefc-85e7-4c11-9772-99f9129da7d8_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/7b51ebe4-8ab7-451f-b700-3e4e84ac17f1_fixed.java
index 8e93a5e..96b6587 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/dbd5fefc-85e7-4c11-9772-99f9129da7d8_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/7b51ebe4-8ab7-451f-b700-3e4e84ac17f1_fixed.java
@@ -1,43 +1,39 @@
     /**
      * <p>Render the specified text and return the rendered Options
      * in a StringBuffer.</p>
      *
      * @param sb The StringBuffer to place the rendered text into.
      * @param width The number of characters to display per line
      * @param nextLineTabStop The position on the next line for the first tab.
      * @param text The text to be rendered.
      *
      * @return the StringBuffer with the rendered Options contents.
      */
     protected StringBuffer renderWrappedText(StringBuffer sb, int width, 
                                              int nextLineTabStop, String text)
     {
         int pos = findWrapPos(text, width, 0);
-
         if (pos == -1)
         {
             sb.append(rtrim(text));
-
             return sb;
         }
         sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
-
         // all following lines must be padded with nextLineTabStop space 
         // characters
         final String padding = createPadding(nextLineTabStop);
-
         while (true)
         {
             text = padding + text.substring(pos).trim();
-            pos = findWrapPos(text, width, nextLineTabStop);
+// buggy code
+//            pos = findWrapPos(text, width, nextLineTabStop);
+            pos = findWrapPos(text, width, 0);
 
             if (pos == -1)
             {
                 sb.append(text);
-
                 return sb;
             }
-
             sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
         }
     }
