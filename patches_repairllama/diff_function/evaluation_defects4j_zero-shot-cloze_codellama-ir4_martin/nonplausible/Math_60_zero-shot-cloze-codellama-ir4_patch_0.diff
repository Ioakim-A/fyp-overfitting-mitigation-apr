diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/47ffcb40-e686-4bc8-b01c-11c53e4b9e5f_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/afd60eb3-cd28-4b4f-987b-116399f1819a_fixed.java
index c9b29e3..7277a72 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/47ffcb40-e686-4bc8-b01c-11c53e4b9e5f_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/afd60eb3-cd28-4b4f-987b-116399f1819a_fixed.java
@@ -1,15 +1,17 @@
     public double cumulativeProbability(double x) throws MathException {
         final double dev = x - mean;
-        try {
-        return 0.5 * (1.0 + Erf.erf((dev) /
-                    (standardDeviation * FastMath.sqrt(2.0))));
-        } catch (MaxIterationsExceededException ex) {
-            if (x < (mean - 20 * standardDeviation)) { // JDK 1.5 blows at 38
-                return 0;
-            } else if (x > (mean + 20 * standardDeviation)) {
-                return 1;
-            } else {
-                throw ex;
-            }
-        }
+// buggy code
+//        try {
+//        return 0.5 * (1.0 + Erf.erf((dev) /
+//                    (standardDeviation * FastMath.sqrt(2.0))));
+//        } catch (MaxIterationsExceededException ex) {
+//            if (x < (mean - 20 * standardDeviation)) { 
+//                return 0;
+//            } else if (x > (mean + 20 * standardDeviation)) {
+//                return 1;
+//            } else {
+//                throw ex;
+//            }
+//        }
+//
     }
