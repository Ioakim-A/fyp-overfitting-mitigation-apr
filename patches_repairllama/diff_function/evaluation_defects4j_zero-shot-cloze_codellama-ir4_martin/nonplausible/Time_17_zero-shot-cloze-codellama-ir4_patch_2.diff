diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/89d46b52-b343-4398-b983-db153a2d8e80_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/ae6f839e-1e2c-4ea2-8a1c-03dca33a71b6_fixed.java
index 810d6e1..75cf60d 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/89d46b52-b343-4398-b983-db153a2d8e80_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/ae6f839e-1e2c-4ea2-8a1c-03dca33a71b6_fixed.java
@@ -1,18 +1,11 @@
     public long adjustOffset(long instant, boolean earlierOrLater) {
-        // a bit messy, but will work in all non-pathological cases
-        
-        // evaluate 3 hours before and after to work out if anything is happening
-        long instantBefore = convertUTCToLocal(instant - 3 * DateTimeConstants.MILLIS_PER_HOUR);
-        long instantAfter = convertUTCToLocal(instant + 3 * DateTimeConstants.MILLIS_PER_HOUR);
-        if (instantBefore == instantAfter) {
-            return instant;  // not an overlap (less than is a gap, equal is normal case)
-        }
-        
-        // work out range of instants that have duplicate local times
-        long local = convertUTCToLocal(instant);
-        return convertLocalToUTC(local, false, earlierOrLater ? instantAfter : instantBefore);
-        
-        // calculate result
-          // currently in later offset
-          // currently in earlier offset
+// buggy code
+//        long instantBefore = convertUTCToLocal(instant - 3 * DateTimeConstants.MILLIS_PER_HOUR);
+//        long instantAfter = convertUTCToLocal(instant + 3 * DateTimeConstants.MILLIS_PER_HOUR);
+//        if (instantBefore == instantAfter) {
+//            return instant;  
+//        }
+//        long local = convertUTCToLocal(instant);
+//        return convertLocalToUTC(local, false, earlierOrLater ? instantAfter : instantBefore);
+// buggy code
     }
