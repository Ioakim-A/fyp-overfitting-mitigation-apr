diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/14092053-1498-4f33-864d-9915bc88c5b6_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/74ac84d3-f991-45d6-b757-28c1e5c42b5d_fixed.java
index 44d6cc6..98737f9 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/14092053-1498-4f33-864d-9915bc88c5b6_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/74ac84d3-f991-45d6-b757-28c1e5c42b5d_fixed.java
@@ -1,16 +1,27 @@
+  public Date read(JsonReader in) throws IOException {
+// buggy code
+//    if (in.peek() != JsonToken.STRING) {
+//      throw new JsonParseException("The date should be a string value");
+//    }
+//    try {
+//      return deserializeToDate(in.nextString());
+//    } catch (ParseException e) {
+//      throw new JsonParseException(e);
+//    }
+//  }
+
   public Date read(JsonReader in) throws IOException {
     if (in.peek() != JsonToken.STRING) {
       throw new JsonParseException("The date should be a string value");
     }
     Date date = deserializeToDate(in.nextString());
     if (dateType == Date.class) {
       return date;
     } else if (dateType == Timestamp.class) {
       return new Timestamp(date.getTime());
     } else if (dateType == java.sql.Date.class) {
       return new java.sql.Date(date.getTime());
     } else {
-      // This must never happen: dateType is guarded in the primary constructor
       throw new AssertionError();
     }
   }
