diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/e7a9e851-c772-4768-9aa1-d31d1b9dac14_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/10344a46-179b-42e4-8603-f77ae43d2d95_fixed.java
index 602226b..868f853 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/e7a9e851-c772-4768-9aa1-d31d1b9dac14_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/10344a46-179b-42e4-8603-f77ae43d2d95_fixed.java
@@ -1,26 +1,29 @@
     private void findAliases(NodeTraversal t) {
       Scope scope = t.getScope();
       for (Var v : scope.getVarIterable()) {
         Node n = v.getNode();
         int type = n.getType();
         Node parent = n.getParent();
-        if (parent.isVar()) {
-          if (n.hasChildren() && n.getFirstChild().isQualifiedName()) {
+// buggy code
+//        if (parent.isVar()) {
+//          if (n.hasChildren() && n.getFirstChild().isQualifiedName()) {
+//          String name = n.getString();
+//          Var aliasVar = scope.getVar(name);
+//          aliases.put(name, aliasVar);
+//          String qualifiedName =
+//              aliasVar.getInitialValue().getQualifiedName();
+//          transformation.addAlias(name, qualifiedName);
+//        } else {
+//          report(t, n, GOOG_SCOPE_NON_ALIAS_LOCAL, n.getString());
+//        }
+//        }
+       if (parent.isVar() && n.hasChildren() && n.getFirstChild().isQualifiedName()) {
           String name = n.getString();
           Var aliasVar = scope.getVar(name);
           aliases.put(name, aliasVar);
-
           String qualifiedName =
               aliasVar.getInitialValue().getQualifiedName();
           transformation.addAlias(name, qualifiedName);
-          // Bleeding functions already get a BAD_PARAMETERS error, so just
-          // do nothing.
-          // Parameters of the scope function also get a BAD_PARAMETERS
-          // error.
-        } else {
-          // TODO(robbyw): Support using locals for private variables.
-          report(t, n, GOOG_SCOPE_NON_ALIAS_LOCAL, n.getString());
-        }
         }
       }
     }
