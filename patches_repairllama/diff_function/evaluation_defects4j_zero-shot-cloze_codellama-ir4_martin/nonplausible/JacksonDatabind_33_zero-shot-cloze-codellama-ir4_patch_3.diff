diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/b2fcc81c-78ab-4794-9f41-0f3bc38dddb5_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/8d0061c2-f61d-4d50-a965-e52f9b587b93_fixed.java
index 36033fa..c981684 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/b2fcc81c-78ab-4794-9f41-0f3bc38dddb5_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/8d0061c2-f61d-4d50-a965-e52f9b587b93_fixed.java
@@ -1,25 +1,22 @@
     public PropertyName findNameForSerialization(Annotated a)
     {
         String name = null;
-
         JsonGetter jg = _findAnnotation(a, JsonGetter.class);
         if (jg != null) {
             name = jg.value();
         } else {
             JsonProperty pann = _findAnnotation(a, JsonProperty.class);
             if (pann != null) {
                 name = pann.value();
-                /* 22-Apr-2014, tatu: Should figure out a better way to do this, but
-                 *   it's actually bit tricky to do it more efficiently (meta-annotations
-                 *   add more lookups; AnnotationMap costs etc)
-                 */
             } else if (_hasAnnotation(a, JsonSerialize.class)
                     || _hasAnnotation(a, JsonView.class)
-                    || _hasAnnotation(a, JsonRawValue.class)) {
+// buggy code
+//                    || _hasAnnotation(a, JsonRawValue.class)) {
+                   || _hasAnnotation(a, JsonValue.class)) {
                 name = "";
             } else {
                 return null;
             }
         }
         return PropertyName.construct(name);
     }
