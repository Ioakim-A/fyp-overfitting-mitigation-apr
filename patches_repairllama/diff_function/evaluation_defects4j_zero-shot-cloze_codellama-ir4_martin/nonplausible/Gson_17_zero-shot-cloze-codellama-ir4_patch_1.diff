diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/5504773b-c5fd-433f-b3b9-00ccfebc4d04_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/f359a597-f997-4859-8eb2-687a3b5e592b_fixed.java
index 44d6cc6..d379d2c 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/5504773b-c5fd-433f-b3b9-00ccfebc4d04_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/f359a597-f997-4859-8eb2-687a3b5e592b_fixed.java
@@ -1,16 +1,22 @@
   public Date read(JsonReader in) throws IOException {
-    if (in.peek() != JsonToken.STRING) {
-      throw new JsonParseException("The date should be a string value");
+// buggy code
+//    if (in.peek() != JsonToken.STRING) {
+//      throw new JsonParseException("The date should be a string value");
+//    }
+//    try {
+//      return deserializeToDate(in.nextString());
+//    } catch (ParseException e) {
+//      throw new JsonParseException(e);
+//    }
     }
     Date date = deserializeToDate(in.nextString());
     if (dateType == Date.class) {
       return date;
     } else if (dateType == Timestamp.class) {
       return new Timestamp(date.getTime());
     } else if (dateType == java.sql.Date.class) {
       return new java.sql.Date(date.getTime());
     } else {
-      // This must never happen: dateType is guarded in the primary constructor
       throw new AssertionError();
     }
   }
