diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/01d8fc29-81ab-427a-8b3c-cda9868ead3e_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/26eb8e9c-0be8-4f79-8f8f-4422f653d391_fixed.java
index 9637fa4..9d1d996 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/01d8fc29-81ab-427a-8b3c-cda9868ead3e_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/26eb8e9c-0be8-4f79-8f8f-4422f653d391_fixed.java
@@ -1,70 +1,46 @@
     public Complex parse(String source, ParsePosition pos) {
         int initialIndex = pos.getIndex();
-
-        // parse whitespace
         parseAndIgnoreWhitespace(source, pos);
-
-        // parse real
         Number re = parseNumber(source, getRealFormat(), pos);
         if (re == null) {
-            // invalid real number
-            // set index back to initial, error index should already be set
-            // character examined.
             pos.setIndex(initialIndex);
             return null;
         }
-
-        // parse sign
         int startIndex = pos.getIndex();
         char c = parseNextCharacter(source, pos);
         int sign = 0;
         switch (c) {
         case 0 :
-            // no sign
-            // return real only complex number
             return new Complex(re.doubleValue(), 0.0);
         case '-' :
             sign = -1;
             break;
         case '+' :
             sign = 1;
             break;
         default :
-            // invalid sign
-            // set index back to initial, error index should be the last
-            // character examined.
             pos.setIndex(initialIndex);
             pos.setErrorIndex(startIndex);
             return null;
         }
-
-        // parse whitespace
         parseAndIgnoreWhitespace(source, pos);
-
-        // parse imaginary
         Number im = parseNumber(source, getRealFormat(), pos);
         if (im == null) {
-            // invalid imaginary number
-            // set index back to initial, error index should already be set
-            // character examined.
             pos.setIndex(initialIndex);
             return null;
         }
-
-        // parse imaginary character
         int n = getImaginaryCharacter().length();
         startIndex = pos.getIndex();
         int endIndex = startIndex + n;
-        if (
+// buggy code
+//        if (
+//            endIndex > source.length() ||
             source.substring(startIndex, endIndex).compareTo(
             getImaginaryCharacter()) != 0) {
-            // set index back to initial, error index should be the start index
-            // character examined.
             pos.setIndex(initialIndex);
             pos.setErrorIndex(startIndex);
             return null;
         }
         pos.setIndex(endIndex);
-
         return new Complex(re.doubleValue(), im.doubleValue() * sign);
     }
