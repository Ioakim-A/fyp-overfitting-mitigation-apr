diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/e952d00f-746f-4abb-9804-72f7a0898fc1_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/4f762cef-d8e6-4249-b010-59646b1453fb_fixed.java
index a1e21c4..d5ae6c9 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/e952d00f-746f-4abb-9804-72f7a0898fc1_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/4f762cef-d8e6-4249-b010-59646b1453fb_fixed.java
@@ -1,21 +1,26 @@
   protected CompilerOptions createOptions() {
     CompilerOptions options = new CompilerOptions();
     options.setCodingConvention(new ClosureCodingConvention());
     CompilationLevel level = flags.compilation_level;
     level.setOptionsForCompilationLevel(options);
     if (flags.debug) {
       level.setDebugOptionsForCompilationLevel(options);
     }
-
     WarningLevel wLevel = flags.warning_level;
     wLevel.setOptionsForWarningLevel(options);
     for (FormattingOption formattingOption : flags.formatting) {
       formattingOption.applyToOptions(options);
     }
-    if (flags.process_closure_primitives) {
-      options.closurePass = true;
-    }
-
+// buggy code
+//    if (flags.process_closure_primitives) {
+//      options.closurePass = true;
+//    }
+//    if (flags.manage_closure_dependencies) {
+//      options.manageClosureDependencies = true;
+//    }
+//    if (flags.only_closure_dependencies) {
+//      options.onlyClosureDependencies = true;
+//    }
     initOptionsFromFlags(options);
     return options;
   }
