diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/10bda483-f4c3-428b-a343-892742a7077d_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/e14dd655-814f-463b-bb29-21a7cd619dbc_fixed.java
index be3dcc8..7668fa6 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/10bda483-f4c3-428b-a343-892742a7077d_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/e14dd655-814f-463b-bb29-21a7cd619dbc_fixed.java
@@ -1,41 +1,73 @@
     private static StringBuilder escapeRegex(StringBuilder regex, String value, boolean unquote) {
+// buggy code
+//        boolean wasWhite= false;
+//        for(int i= 0; i<value.length(); ++i) {
+//            char c= value.charAt(i);
+//            if(Character.isWhitespace(c)) {
+//                if(!wasWhite) {
+//                    wasWhite= true;
+//                    regex.append("\\s*+");
+//                }
+//                continue;
+//            }
+//            wasWhite= false;
+//            switch(c) {
+//            case '?':
+//            case '[':
+//            case ']':
+//            case '(':
+//            case ')':
+//            case '{':
+//            case '}':
+//            case '\\':
+//            case '|':
+//            case '*':
+//            case '+':
+//            case '^':
+//            case '$':
+//            case '.':
+//                regex.append('\\');
+//            }
+//            regex.append(c);
+//        }
+//        return regex;
         boolean wasWhite= false;
         for(int i= 0; i<value.length(); ++i) {
             char c= value.charAt(i);
             if(Character.isWhitespace(c)) {
                 if(!wasWhite) {
                     wasWhite= true;
                     regex.append("\\s*+");
                 }
                 continue;
             }
             wasWhite= false;
             switch(c) {
             case '\'':
                 if(unquote) {
                     if(++i==value.length()) {
                         return regex;
                     }
                     c= value.charAt(i);
                 }
                 break;
             case '?':
             case '[':
             case ']':
             case '(':
             case ')':
             case '{':
             case '}':
             case '\\':
             case '|':
             case '*':
             case '+':
             case '^':
             case '$':
             case '.':
                 regex.append('\\');
             }
             regex.append(c);
         }
         return regex;
     }
