diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/f54548bd-15b7-4e5e-b931-e08f76bee114_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/757a3f50-0f03-4108-b988-ca1466bcbc5f_fixed.java
index a4d475d..bc0348a 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/f54548bd-15b7-4e5e-b931-e08f76bee114_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/757a3f50-0f03-4108-b988-ca1466bcbc5f_fixed.java
@@ -1,19 +1,16 @@
   private void visitGetProp(NodeTraversal t, Node n, Node parent) {
-    // obj.prop or obj.method()
-    // Lots of types can appear on the left, a call to a void function can
-    // never be on the left. getPropertyType will decide what is acceptable
-    // and what isn't.
     Node property = n.getLastChild();
     Node objNode = n.getFirstChild();
     JSType childType = getJSType(objNode);
-
     if (childType.isDict()) {
       report(t, property, TypeValidator.ILLEGAL_PROPERTY_ACCESS, "'.'", "dict");
-    } else if (n.getJSType() != null && parent.isAssign()) {
-      return;
+// buggy code
+//    } else if (n.getJSType() != null && parent.isAssign()) {
+//      return;
+//    } else if (n.getJSType() != null && n.getJSType().isUnknownType()) {
     } else if (validator.expectNotNullOrUndefined(t, n, childType,
         "No properties on this expression", getNativeType(OBJECT_TYPE))) {
       checkPropertyAccess(childType, property.getString(), t, n);
     }
     ensureTyped(t, n);
   }
