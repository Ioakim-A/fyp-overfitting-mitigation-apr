diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/201b4e55-6680-43a6-bf58-45afd7ffb6eb_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/33cb6435-b7fc-4281-9450-8be666eb638a_fixed.java
index 6ba6dcc..afb1fb9 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/201b4e55-6680-43a6-bf58-45afd7ffb6eb_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/33cb6435-b7fc-4281-9450-8be666eb638a_fixed.java
@@ -1,17 +1,19 @@
     public RealMatrix getCorrelationPValues() throws MathException {
         TDistribution tDistribution = new TDistributionImpl(nObs - 2);
         int nVars = correlationMatrix.getColumnDimension();
         double[][] out = new double[nVars][nVars];
         for (int i = 0; i < nVars; i++) {
             for (int j = 0; j < nVars; j++) {
                 if (i == j) {
                     out[i][j] = 0d;
                 } else {
                     double r = correlationMatrix.getEntry(i, j);
                     double t = Math.abs(r * Math.sqrt((nObs - 2)/(1 - r * r)));
-                    out[i][j] = 2 * (1 - tDistribution.cumulativeProbability(t));
+// buggy code
+//                     out[i][j] = 2 * (1 - tDistribution.cumulativeProbability(t));
+                   out[i][j] = 2 * (tDistribution.cumulativeProbability(t));
                 }
             }
         }
         return new BlockRealMatrix(out);
     }
