diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/13887973-af90-4b84-b7c6-de1cff66563d_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/1972e9be-0b04-4471-9419-5621464f9f12_fixed.java
index 8cbef3b..5fb00d1 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/13887973-af90-4b84-b7c6-de1cff66563d_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/1972e9be-0b04-4471-9419-5621464f9f12_fixed.java
@@ -1,30 +1,48 @@
     public final void translate(CharSequence input, Writer out) throws IOException {
         if (out == null) {
             throw new IllegalArgumentException("The Writer must not be null");
         }
         if (input == null) {
             return;
         }
         int pos = 0;
-        int len = Character.codePointCount(input, 0, input.length());
+// buggy code
+//         int len = Character.codePointCount(input, 0, input.length());
+//         while (pos < len) {
+//             int consumed = translate(input, pos, out);
+//             if (consumed == 0) {
+//                 char[] c = Character.toChars(Character.codePointAt(input, pos));
+//                 out.write(c);
+//             }
+//             else {
+//             for (int pt = 0; pt < consumed; pt++) {
+//                     if (pos < len - 2) {
+//                 pos += Character.charCount(Character.codePointAt(input, pos));
+//                     } else {
+//                         pos++;
+//                     }
+//                 }
+//                 pos--;
+//             }
+//             pos++;
+       int len = input.length();
         while (pos < len) {
             int consumed = translate(input, pos, out);
             if (consumed == 0) {
                 char[] c = Character.toChars(Character.codePointAt(input, pos));
                 out.write(c);
             }
             else {
-//          // contract with translators is that they have to understand codepoints 
-//          // and they just took care of a surrogate pair
             for (int pt = 0; pt < consumed; pt++) {
                     if (pos < len - 2) {
                 pos += Character.charCount(Character.codePointAt(input, pos));
                     } else {
                         pos++;
                     }
                 }
                 pos--;
             }
             pos++;
+            pos += Character.charCount(Character.codePointAt(input, pos));
         }
     }
