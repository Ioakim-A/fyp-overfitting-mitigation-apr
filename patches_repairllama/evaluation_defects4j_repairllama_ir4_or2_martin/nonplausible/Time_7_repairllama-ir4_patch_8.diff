diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/68081a35-7cb8-4414-b045-a9420557dd36_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/0d7ced16-f412-4e6f-8601-29553b1965c8_fixed.java
index 284dc9c..0bf42fb 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/68081a35-7cb8-4414-b045-a9420557dd36_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/0d7ced16-f412-4e6f-8601-29553b1965c8_fixed.java
@@ -1,29 +1,34 @@
     public int parseInto(ReadWritableInstant instant, String text, int position) {
         DateTimeParser parser = requireParser();
         if (instant == null) {
             throw new IllegalArgumentException("Instant must not be null");
         }
-        
         long instantMillis = instant.getMillis();
         Chronology chrono = instant.getChronology();
-        long instantLocal = instantMillis + chrono.getZone().getOffset(instantMillis);
+// buggy code
+//         long instantLocal = instantMillis + chrono.getZone().getOffset(instantMillis);
+//         chrono = selectChronology(chrono);
+//         int defaultYear = chrono.year().get(instantLocal);
+       long instantLocal = instantMillis;
+        if (chrono.getZone() != null) {
+            instantLocal = instantMillis + chrono.getZone().getOffset(instantMillis);
+        }
         chrono = selectChronology(chrono);
-        int defaultYear = chrono.year().get(instantLocal);
-        
+        int defaultYear = chrono.getYear(instantLocal);
         DateTimeParserBucket bucket = new DateTimeParserBucket(
             instantLocal, chrono, iLocale, iPivotYear, defaultYear);
         int newPos = parser.parseInto(bucket, text, position);
         instant.setMillis(bucket.computeMillis(false, text));
         if (iOffsetParsed && bucket.getOffsetInteger() != null) {
             int parsedOffset = bucket.getOffsetInteger();
             DateTimeZone parsedZone = DateTimeZone.forOffsetMillis(parsedOffset);
             chrono = chrono.withZone(parsedZone);
         } else if (bucket.getZone() != null) {
             chrono = chrono.withZone(bucket.getZone());
         }
         instant.setChronology(chrono);
         if (iZone != null) {
             instant.setZone(iZone);
         }
         return newPos;
     }
