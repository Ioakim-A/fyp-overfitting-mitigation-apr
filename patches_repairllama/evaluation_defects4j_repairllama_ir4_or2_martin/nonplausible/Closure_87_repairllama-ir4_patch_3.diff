diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/c39d28a8-575c-408d-9abe-17a384bd2fb8_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/6d3894ef-185b-4ae3-93f6-0cbb33e0c012_fixed.java
index 9de371f..ac7424b 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/c39d28a8-575c-408d-9abe-17a384bd2fb8_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/6d3894ef-185b-4ae3-93f6-0cbb33e0c012_fixed.java
@@ -1,20 +1,13 @@
   private boolean isFoldableExpressBlock(Node n) {
     if (n.getType() == Token.BLOCK) {
       if (n.hasOneChild()) {
         Node maybeExpr = n.getFirstChild();
-          // IE has a bug where event handlers behave differently when
-          // their return value is used vs. when their return value is in
-          // an EXPR_RESULT. It's pretty freaking weird. See:
-          // http://code.google.com/p/closure-compiler/issues/detail?id=291
-          // We try to detect this case, and not fold EXPR_RESULTs
-          // into other expressions.
-
-            // We only have to worry about methods with an implicit 'this'
-            // param, or this doesn't happen.
-
-          return NodeUtil.isExpressionNode(maybeExpr);
+// buggy code
+//           return NodeUtil.isExpressionNode(maybeExpr);
+       if (NodeUtil.isExpressionNode(maybeExpr)) {
+          return true;
+        }
       }
     }
-
     return false;
   }
