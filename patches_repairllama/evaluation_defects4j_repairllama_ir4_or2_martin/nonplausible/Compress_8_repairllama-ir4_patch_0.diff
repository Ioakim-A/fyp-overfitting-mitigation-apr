diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/3b026712-d65d-4dd2-b39a-d0d94228ade5_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/c3d52af0-e4a9-4fd0-b3d7-bd2ac4b3eb23_fixed.java
index 3534eda..0e6139b 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/3b026712-d65d-4dd2-b39a-d0d94228ade5_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/c3d52af0-e4a9-4fd0-b3d7-bd2ac4b3eb23_fixed.java
@@ -1,37 +1,38 @@
     public static long parseOctal(final byte[] buffer, final int offset, final int length) {
         long    result = 0;
-        boolean stillPadding = true;
+// buggy code
+//         boolean stillPadding = true;
+//         int     end = offset + length;
+//         int     start = offset;
+//         for (int i = start; i < end; i++){
+//             final byte currentByte = buffer[i];
+//             if (currentByte == 0) {
+//                 break;
+//             }
+//             if (currentByte == (byte) ' ' || currentByte == '0') {
+//                 if (stillPadding) {
+//                    continue;
+//             }
+//                 if (currentByte == (byte) ' ') {
+//                 break;
+//                 }
+//             }
+//             stillPadding = false;
        int     end = offset + length;
         int     start = offset;
-
         for (int i = start; i < end; i++){
             final byte currentByte = buffer[i];
             if (currentByte == 0) {
                 break;
             }
-
-        // Skip leading spaces
             if (currentByte == (byte) ' ' || currentByte == '0') {
-                if (stillPadding) {
                 continue;
             }
-                if (currentByte == (byte) ' ') {
-                break;
-                }
-            }
-
-        // Must have trailing NUL or space
-        // May have additional NUL or space
-
-            stillPadding = false;
-            // CheckStyle:MagicNumber OFF
             if (currentByte < '0' || currentByte > '7'){
                 throw new IllegalArgumentException(
                         exceptionMessage(buffer, offset, length, start, currentByte));
             }
-            result = (result << 3) + (currentByte - '0'); // convert from ASCII
-            // CheckStyle:MagicNumber ON
+            result = (result << 3) + (currentByte - '0'); 
         }
-
         return result;
     }
