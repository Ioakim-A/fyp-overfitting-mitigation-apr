diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/b3e90f66-892e-4bb1-a1af-b2f90c8f5cc4_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/8efd23b7-ff74-4970-92d9-103a7bed6b49_fixed.java
index 4cc2d2f..eaee009 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/b3e90f66-892e-4bb1-a1af-b2f90c8f5cc4_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/8efd23b7-ff74-4970-92d9-103a7bed6b49_fixed.java
@@ -1,33 +1,28 @@
 public int translate(CharSequence input, int index, Writer out) throws IOException {
-        // TODO: Protect from ArrayIndexOutOfBounds
     if(input.charAt(index) == '&' && input.charAt(index + 1) == '#') {
         int start = index + 2;
         boolean isHex = false;
-
         char firstChar = input.charAt(start);
         if(firstChar == 'x' || firstChar == 'X') {
             start++;
             isHex = true;
         }
-
         int end = start;
         while(input.charAt(end) != ';') {
             end++;
         }
-
         int entityValue;
         try {
             if(isHex) {
                 entityValue = Integer.parseInt(input.subSequence(start, end).toString(), 16);
             } else {
                 entityValue = Integer.parseInt(input.subSequence(start, end).toString(), 10);
             }
         } catch(NumberFormatException nfe) {
             return 0;
         }
-
-                out.write(entityValue);
+        out.write(Character.toChars(entityValue));
         return 2 + (end - start) + (isHex ? 1 : 0) + 1;
     }
     return 0;
 }
\ No newline at end of file
