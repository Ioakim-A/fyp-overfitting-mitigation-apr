diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/47c4e1b4-4c00-42b8-a1a6-588da0e350e7_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/1f939999-c7bd-4fa5-98c6-12d59d1377c8_fixed.java
index 20d45d1..9fbf588 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/47c4e1b4-4c00-42b8-a1a6-588da0e350e7_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/1f939999-c7bd-4fa5-98c6-12d59d1377c8_fixed.java
@@ -1,27 +1,14 @@
-    public int read(final byte[] dest, final int offs, final int len)
-        throws IOException {
-        if (offs < 0) {
-            throw new IndexOutOfBoundsException("offs(" + offs + ") < 0.");
-        }
-        if (len < 0) {
-            throw new IndexOutOfBoundsException("len(" + len + ") < 0.");
-        }
-        if (offs + len > dest.length) {
-            throw new IndexOutOfBoundsException("offs(" + offs + ") + len("
-                                                + len + ") > dest.length(" + dest.length + ").");
-        }
-        if (this.in == null) {
-            throw new IOException("stream closed");
-        }
-
-        final int hi = offs + len;
+// Fix for the bug
+int remaining = len;
 int destOffs = offs;
-        int b;
-        while (destOffs < hi && ((b = read0()) >= 0)) {
-            dest[destOffs++] = (byte) b;
+while (remaining > 0) {
+    int bytesRead = read0();
+    if (bytesRead == -1) {
+        break;
+    }
+    dest[destOffs++] = (byte) bytesRead;
+    remaining--;
     count(1);
 }
-
-        int c = (destOffs == offs) ? -1 : (destOffs - offs);
-        return c;
-    }
+int bytesRead = destOffs - offs;
+return bytesRead == 0 ? -1 : bytesRead;
\ No newline at end of file
