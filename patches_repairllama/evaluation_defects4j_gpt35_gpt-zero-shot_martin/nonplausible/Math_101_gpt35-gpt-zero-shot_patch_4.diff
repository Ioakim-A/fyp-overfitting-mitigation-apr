diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/09874c9c-e01e-4e3a-adc1-5c823596ef4f_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/d7a84b1c-f386-49f5-b7cb-afc86c7f7a00_fixed.java
index 9637fa4..5e9d49a 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/09874c9c-e01e-4e3a-adc1-5c823596ef4f_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/d7a84b1c-f386-49f5-b7cb-afc86c7f7a00_fixed.java
@@ -1,70 +1,42 @@
 public Complex parse(String source, ParsePosition pos) {
     int initialIndex = pos.getIndex();
-
-        // parse whitespace
     parseAndIgnoreWhitespace(source, pos);
-
-        // parse real
     Number re = parseNumber(source, getRealFormat(), pos);
     if (re == null) {
-            // invalid real number
-            // set index back to initial, error index should already be set
-            // character examined.
         pos.setIndex(initialIndex);
         return null;
     }
-
-        // parse sign
     int startIndex = pos.getIndex();
     char c = parseNextCharacter(source, pos);
     int sign = 0;
     switch (c) {
     case 0 :
-            // no sign
-            // return real only complex number
         return new Complex(re.doubleValue(), 0.0);
     case '-' :
         sign = -1;
         break;
     case '+' :
         sign = 1;
         break;
     default :
-            // invalid sign
-            // set index back to initial, error index should be the last
-            // character examined.
         pos.setIndex(initialIndex);
         pos.setErrorIndex(startIndex);
         return null;
     }
-
-        // parse whitespace
     parseAndIgnoreWhitespace(source, pos);
-
-        // parse imaginary
     Number im = parseNumber(source, getRealFormat(), pos);
     if (im == null) {
-            // invalid imaginary number
-            // set index back to initial, error index should already be set
-            // character examined.
         pos.setIndex(initialIndex);
         return null;
     }
-
-        // parse imaginary character
     int n = getImaginaryCharacter().length();
     startIndex = pos.getIndex();
     int endIndex = startIndex + n;
-        if (
-            source.substring(startIndex, endIndex).compareTo(
-            getImaginaryCharacter()) != 0) {
-            // set index back to initial, error index should be the start index
-            // character examined.
+    if (!source.substring(startIndex, endIndex).equals(getImaginaryCharacter())) {
         pos.setIndex(initialIndex);
         pos.setErrorIndex(startIndex);
         return null;
     }
     pos.setIndex(endIndex);
-
     return new Complex(re.doubleValue(), im.doubleValue() * sign);
 }
\ No newline at end of file
