diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/5b0ccc81-6a9a-43e1-97ac-e332e0acf45f_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/5ddb339a-db9e-469d-a02a-285321223e33_fixed.java
index 6656ad6..c706e0a 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/5b0ccc81-6a9a-43e1-97ac-e332e0acf45f_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/5ddb339a-db9e-469d-a02a-285321223e33_fixed.java
@@ -1,36 +1,32 @@
-    private void init() {
 thisYear= Calendar.getInstance(timeZone, locale).get(Calendar.YEAR);
-
 nameValues= new ConcurrentHashMap<Integer, KeyValue[]>();
-
 StringBuilder regex= new StringBuilder();
 List<Strategy> collector = new ArrayList<Strategy>();
-
 Matcher patternMatcher= formatPattern.matcher(pattern);
 if(!patternMatcher.lookingAt()) {
     throw new IllegalArgumentException("Invalid pattern");
 }
-
 currentFormatField= patternMatcher.group();
 Strategy currentStrategy= getStrategy(currentFormatField);
 for(;;) {
     patternMatcher.region(patternMatcher.end(), patternMatcher.regionEnd());
     if(!patternMatcher.lookingAt()) {
         nextStrategy = null;
         break;
     }
     String nextFormatField= patternMatcher.group();
     nextStrategy = getStrategy(nextFormatField);
     if(currentStrategy.addRegex(this, regex)) {
         collector.add(currentStrategy);
     }
     currentFormatField= nextFormatField;
     currentStrategy= nextStrategy;
 }
-        if(currentStrategy.addRegex(this, regex)) {
+// buggy code
+// 
+if(currentStrategy != null && currentStrategy.addRegex(this, regex)) {
     collector.add(currentStrategy);
 }
 currentFormatField= null;
 strategies= collector.toArray(new Strategy[collector.size()]);
 parsePattern= Pattern.compile(regex.toString());
\ No newline at end of file
-    }
