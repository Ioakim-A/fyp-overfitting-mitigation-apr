diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/834c7c66-e9af-4a15-8d47-ee5cadcb1bcd_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/4d2c3373-88c5-4fcf-91d9-c2724ba8ec43_fixed.java
index 70ac830..e4f3714 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/834c7c66-e9af-4a15-8d47-ee5cadcb1bcd_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/4d2c3373-88c5-4fcf-91d9-c2724ba8ec43_fixed.java
@@ -1,19 +1,3 @@
-  public void matchConstraint(JSType constraint) {
-    // We only want to match constraints on anonymous types.
-    if (hasReferenceName()) {
-      return;
-    }
-
-    // Handle the case where the constraint object is a record type.
-    //
-    // param constraint {{prop: (number|undefined)}}
-    // function f(constraint) {}
-    // f({});
-    //
-    // We want to modify the object literal to match the constraint, by
-    // taking any each property on the record and trying to match
-    // properties on this object.
-    if (constraint.isRecordType()) {
-      matchRecordTypeConstraint(constraint.toObjectType());
-    }
+else if (constraint.isFunctionType()) {
+  matchFunctionTypeConstraint(constraint.toMaybeFunctionType());
 }
\ No newline at end of file
