diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/9caf0e24-3c7f-41a3-b2ab-c8ec1cea6dd1_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/75cf997e-14ad-4ffd-835d-f9b9d3e25355_fixed.java
index 6dd46bd..cadea76 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/9caf0e24-3c7f-41a3-b2ab-c8ec1cea6dd1_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/75cf997e-14ad-4ffd-835d-f9b9d3e25355_fixed.java
@@ -1,19 +1,14 @@
 public static int formatLongOctalOrBinaryBytes(
     final long value, final byte[] buf, final int offset, final int length) {
-
-        // Check whether we are dealing with UID/GID or SIZE field
     final long maxAsOctalChar = length == TarConstants.UIDLEN ? TarConstants.MAXID : TarConstants.MAXSIZE;
-
     final boolean negative = value < 0;
-        if (!negative && value <= maxAsOctalChar) { // OK to store as octal chars
+    if (!negative && value <= maxAsOctalChar) { 
         return formatLongOctalBytes(value, buf, offset, length);
     }
-
     if (length < 9) {
         formatLongBinary(value, buf, offset, length, negative);
     }
     formatBigIntegerBinary(value, buf, offset, length, negative);
-
     buf[offset] = (byte) (negative ? 0xff : 0x80);
     return offset + length;
 }
\ No newline at end of file
