diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/d0a4ecca-284c-4103-9176-b9c5da7ea70a_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/aa4b71cd-c24c-40f2-a3fc-96974521d808_fixed.java
index d7b8fbd..ae24d39 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/d0a4ecca-284c-4103-9176-b9c5da7ea70a_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/aa4b71cd-c24c-40f2-a3fc-96974521d808_fixed.java
@@ -1,59 +1,6 @@
-    protected String[] flatten(Options options, String[] arguments, boolean stopAtNonOption)
-    {
-        List tokens = new ArrayList();
-
-        boolean eatTheRest = false;
-
-        for (int i = 0; i < arguments.length; i++)
-        {
-            String arg = arguments[i];
-
-            if ("--".equals(arg))
-            {
-                eatTheRest = true;
-                tokens.add("--");
-            }
-            else if ("-".equals(arg))
-            {
-                tokens.add("-");
-            }
-            else if (arg.startsWith("-"))
-            {
-                String opt = Util.stripLeadingHyphens(arg);
-
-                if (options.hasOption(opt))
-                {
+if (options.hasOption(arg.substring(0, 2))) {
+    tokens.add(arg.substring(0, 2));
+    tokens.add(arg.substring(2));
+} else if (options.hasOption(arg)) {
     tokens.add(arg);
 }
\ No newline at end of file
-                else
-                {
-                    if (options.hasOption(arg.substring(0, 2)))
-                    {
-                        // the format is --foo=value or -foo=value
-                        // the format is a special properties option (-Dproperty=value)
-                        tokens.add(arg.substring(0, 2)); // -D
-                        tokens.add(arg.substring(2)); // property=value
-                    }
-                    else
-                    {
-                        eatTheRest = stopAtNonOption;
-                        tokens.add(arg);
-                    }
-                }
-            }
-            else
-            {
-                tokens.add(arg);
-            }
-
-            if (eatTheRest)
-            {
-                for (i++; i < arguments.length; i++)
-                {
-                    tokens.add(arguments[i]);
-                }
-            }
-        }
-
-        return (String[]) tokens.toArray(new String[tokens.size()]);
-    }
