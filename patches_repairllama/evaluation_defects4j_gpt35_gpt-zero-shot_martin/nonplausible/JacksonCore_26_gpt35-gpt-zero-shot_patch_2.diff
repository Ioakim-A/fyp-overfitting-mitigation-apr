diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/da151d65-a23f-4565-9161-f0268e7bc09f_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/6d11c054-5609-480c-911c-3bfe6aa8ad9a_fixed.java
index 7af3068..e37f3e3 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/da151d65-a23f-4565-9161-f0268e7bc09f_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/6d11c054-5609-480c-911c-3bfe6aa8ad9a_fixed.java
@@ -1,25 +1,3 @@
-    public void feedInput(byte[] buf, int start, int end) throws IOException
-    {
-        // Must not have remaining input
-        if (_inputPtr < _inputEnd) {
-            _reportError("Still have %d undecoded bytes, should not call 'feedInput'", _inputEnd - _inputPtr);
-        }
-        if (end < start) {
-            _reportError("Input end (%d) may not be before start (%d)", end, start);
-        }
-        // and shouldn't have been marked as end-of-input
-        if (_endOfInput) {
-            _reportError("Already closed, can not feed more input");
-        }
-        // Time to update pointers first
-        _currInputProcessed += _origBufferLen;
-
-        // Also need to adjust row start, to work as if it extended into the past wrt new buffer
-        _currInputRowStart = start - (_inputEnd - _currInputRowStart);
-
-        // And then update buffer settings
-        _inputBuffer = buf;
-        _inputPtr = start;
-        _inputEnd = end;
-        _origBufferLen = end - start;
+if (_inputEnd - _inputPtr > 0) {
+    System.arraycopy(_inputBuffer, _inputPtr, buf, start, _inputEnd - _inputPtr);
 }
\ No newline at end of file
