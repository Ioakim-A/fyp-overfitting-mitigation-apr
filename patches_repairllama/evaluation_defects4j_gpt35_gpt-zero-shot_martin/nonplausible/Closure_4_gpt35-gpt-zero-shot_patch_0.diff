diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/5070cc59-7936-4883-804d-851aecfba3f6_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/1cd6c324-0918-4945-96df-4aac2a4106ca_fixed.java
index 3840a76..cd309dd 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/5070cc59-7936-4883-804d-851aecfba3f6_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/1cd6c324-0918-4945-96df-4aac2a4106ca_fixed.java
@@ -1,29 +1,21 @@
 JSType resolveInternal(ErrorReporter t, StaticScope<JSType> enclosing) {
-    // TODO(user): Investigate whether it is really necessary to keep two
-    // different mechanisms for resolving named types, and if so, which order
-    // makes more sense. Now, resolution via registry is first in order to
-    // avoid triggering the warnings built into the resolution via properties.
     boolean resolved = resolveViaRegistry(t, enclosing);
     if (detectImplicitPrototypeCycle()) {
         handleTypeCycle(t);
     }
-
     if (resolved) {
         super.resolveInternal(t, enclosing);
         finishPropertyContinuations();
         return registry.isLastGeneration() ?
             getReferencedType() : this;
     }
-
     resolveViaProperties(t, enclosing);
     if (detectImplicitPrototypeCycle()) {
-      handleTypeCycle(t);
-    }
-
         super.resolveInternal(t, enclosing);
         if (isResolved()) {
             finishPropertyContinuations();
         }
         return registry.isLastGeneration() ?
             getReferencedType() : this;
     }
+}
\ No newline at end of file
