diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/c5e59398-4567-4212-a882-c41e5879687d_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/c87a43a0-1f42-4e30-9441-e4aa108897cd_fixed.java
index 9f14d90..238fcaa 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/c5e59398-4567-4212-a882-c41e5879687d_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/c87a43a0-1f42-4e30-9441-e4aa108897cd_fixed.java
@@ -1,20 +1,5 @@
-    private void annotateCalls(Node n) {
-      Preconditions.checkState(n.isCall());
-
-      // Keep track of of the "this" context of a call.  A call without an
-      // explicit "this" is a free call.
-      Node first = n.getFirstChild();
-
-      // ignore cast nodes.
-
-      if (!NodeUtil.isGet(first)) {
+      if (first.isGetProp() || first.isGetElem()) {
+        annotateCalls(first);
+      } else {
         n.putBooleanProp(Node.FREE_CALL, true);
       }
\ No newline at end of file
-
-      // Keep track of the context in which eval is called. It is important
-      // to distinguish between "(0, eval)()" and "eval()".
-      if (first.isName() &&
-          "eval".equals(first.getString())) {
-        first.putBooleanProp(Node.DIRECT_EVAL, true);
-      }
-    }
