diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/1ea9d904-f1de-42db-9d58-41ef310bb6f9_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/1466fbbd-8fdb-46c0-af80-ce016af61272_fixed.java
index d7b8fbd..ae83f68 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/1ea9d904-f1de-42db-9d58-41ef310bb6f9_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/1466fbbd-8fdb-46c0-af80-ce016af61272_fixed.java
@@ -1,59 +1,34 @@
-    protected String[] flatten(Options options, String[] arguments, boolean stopAtNonOption)
-    {
-        List tokens = new ArrayList();
-
+protected String[] flatten(Options options, String[] arguments, boolean stopAtNonOption) {
+    List<String> tokens = new ArrayList<>();
     boolean eatTheRest = false;
-
-        for (int i = 0; i < arguments.length; i++)
-        {
+    for (int i = 0; i < arguments.length; i++) {
         String arg = arguments[i];
-
-            if ("--".equals(arg))
-            {
+        if ("--".equals(arg)) {
             eatTheRest = true;
             tokens.add("--");
-            }
-            else if ("-".equals(arg))
-            {
+        } else if ("-".equals(arg)) {
             tokens.add("-");
-            }
-            else if (arg.startsWith("-"))
-            {
+        } else if (arg.startsWith("-")) {
             String opt = Util.stripLeadingHyphens(arg);
-
-                if (options.hasOption(opt))
-                {
+            if (options.hasOption(opt)) {
                 tokens.add(arg);
-                }
-                else
-                {
-                    if (options.hasOption(arg.substring(0, 2)))
-                    {
-                        // the format is --foo=value or -foo=value
-                        // the format is a special properties option (-Dproperty=value)
-                        tokens.add(arg.substring(0, 2)); // -D
-                        tokens.add(arg.substring(2)); // property=value
-                    }
-                    else
-                    {
+            } else {
+                if (options.hasOption(arg.substring(0, 2))) {
+                    tokens.add(arg.substring(0, 2));
+                    tokens.add(arg.substring(2));
+                } else {
                     eatTheRest = stopAtNonOption;
                     tokens.add(arg);
                 }
             }
-            }
-            else
-            {
+        } else {
             tokens.add(arg);
         }
-
-            if (eatTheRest)
-            {
-                for (i++; i < arguments.length; i++)
-                {
+    }
+    if (eatTheRest) {
+        for (int i = i+1; i < arguments.length; i++) {
             tokens.add(arguments[i]);
         }
     }
-        }
-
-        return (String[]) tokens.toArray(new String[tokens.size()]);
+    return tokens.toArray(new String[0]);
 }
\ No newline at end of file
