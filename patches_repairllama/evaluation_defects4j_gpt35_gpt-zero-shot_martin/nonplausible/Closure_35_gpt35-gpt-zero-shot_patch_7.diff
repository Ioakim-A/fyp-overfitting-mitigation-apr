diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/166cd7c4-9cae-4bb2-9274-48289dd3bc15_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/10633450-0b8f-42de-9634-6bcf8a63316f_fixed.java
index b108107..0496a9e 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/166cd7c4-9cae-4bb2-9274-48289dd3bc15_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/10633450-0b8f-42de-9634-6bcf8a63316f_fixed.java
@@ -1,25 +1,16 @@
-  private void inferPropertyTypesToMatchConstraint(
-      JSType type, JSType constraint) {
-    if (type == null || constraint == null) {
-      return;
-    }
-
-    ObjectType constraintObj =
-        ObjectType.cast(constraint.restrictByNotNullOrUndefined());
     if (constraintObj != null && constraintObj.isRecordType()) {
       ObjectType objType = ObjectType.cast(type.restrictByNotNullOrUndefined());
       if (objType != null) {
         for (String prop : constraintObj.getOwnPropertyNames()) {
           JSType propType = constraintObj.getPropertyType(prop);
           if (!objType.isPropertyTypeDeclared(prop)) {
             JSType typeToInfer = propType;
             if (!objType.hasProperty(prop)) {
               typeToInfer =
                   getNativeType(VOID_TYPE).getLeastSupertype(propType);
             }
             objType.defineInferredProperty(prop, typeToInfer, null);
           }
         }
       }
     }
\ No newline at end of file
-  }
