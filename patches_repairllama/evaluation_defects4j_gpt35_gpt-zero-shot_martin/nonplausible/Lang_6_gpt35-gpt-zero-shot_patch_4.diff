diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/6be8d9b1-a00e-4f9e-9ab6-c09a41836887_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/05c15d63-f64d-483f-a349-042cbfebb1a8_fixed.java
index f74e742..eaa2e27 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/6be8d9b1-a00e-4f9e-9ab6-c09a41836887_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/05c15d63-f64d-483f-a349-042cbfebb1a8_fixed.java
@@ -1,24 +1 @@
-    public final void translate(CharSequence input, Writer out) throws IOException {
-        if (out == null) {
-            throw new IllegalArgumentException("The Writer must not be null");
-        }
-        if (input == null) {
-            return;
-        }
-        int pos = 0;
-        int len = input.length();
-        while (pos < len) {
-            int consumed = translate(input, pos, out);
-            if (consumed == 0) {
-                char[] c = Character.toChars(Character.codePointAt(input, pos));
-                out.write(c);
-                pos+= c.length;
-                continue;
-            }
-//          // contract with translators is that they have to understand codepoints 
-//          // and they just took care of a surrogate pair
-            for (int pt = 0; pt < consumed; pt++) {
-                pos += Character.charCount(Character.codePointAt(input, pos));
-            }
-        }
-    }
+pos += consumed;
\ No newline at end of file
