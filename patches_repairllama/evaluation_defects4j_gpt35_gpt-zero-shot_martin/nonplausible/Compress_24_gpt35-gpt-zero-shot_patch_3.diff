diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/d0791df3-f295-4b9f-a6ed-74065a12e276_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/cffc6409-1394-460a-90e5-b503bc82b8a7_fixed.java
index 1e258fa..fbbdcf1 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/d0791df3-f295-4b9f-a6ed-74065a12e276_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/cffc6409-1394-460a-90e5-b503bc82b8a7_fixed.java
@@ -1,52 +1,11 @@
-    public static long parseOctal(final byte[] buffer, final int offset, final int length) {
-        long    result = 0;
-        int     end = offset + length;
-        int     start = offset;
-
-        if (length < 2){
-            throw new IllegalArgumentException("Length "+length+" must be at least 2");
-        }
-
-        if (buffer[start] == 0) {
-            return 0L;
-        }
-
-        // Skip leading spaces
-        while (start < end){
-            if (buffer[start] == ' '){
-                start++;
-            } else {
-                break;
-            }
-        }
-
-        // Trim all trailing NULs and spaces.
-        // The ustar and POSIX tar specs require a trailing NUL or
-        // space but some implementations use the extra digit for big
-        // sizes/uids/gids ...
-        byte trailer = buffer[end - 1];
         if (trailer == 0 || trailer == ' '){
             end--;
-        } else {
-            throw new IllegalArgumentException(
-                    exceptionMessage(buffer, offset, length, end-1, trailer));
-        }
             trailer = buffer[end - 1];
             while (start < end - 1 && (trailer == 0 || trailer == ' ')) {
                 end--;
                 trailer = buffer[end - 1];
             }
-
-        for ( ;start < end; start++) {
-            final byte currentByte = buffer[start];
-            // CheckStyle:MagicNumber OFF
-            if (currentByte < '0' || currentByte > '7'){
+        } else {
             throw new IllegalArgumentException(
-                        exceptionMessage(buffer, offset, length, start, currentByte));
-            }
-            result = (result << 3) + (currentByte - '0'); // convert from ASCII
-            // CheckStyle:MagicNumber ON
-        }
-
-        return result;
+                    exceptionMessage(buffer, offset, length, end-1, trailer));
         }
\ No newline at end of file
