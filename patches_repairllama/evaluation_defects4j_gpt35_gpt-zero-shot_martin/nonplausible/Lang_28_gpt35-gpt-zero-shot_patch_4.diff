diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/9dc836bb-29d2-499a-b814-6a4491cb3386_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/ce6fa2b8-e1c7-4301-a257-54478a118699_fixed.java
index 4cc2d2f..6323c27 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/9dc836bb-29d2-499a-b814-6a4491cb3386_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/ce6fa2b8-e1c7-4301-a257-54478a118699_fixed.java
@@ -1,33 +1,3 @@
-    public int translate(CharSequence input, int index, Writer out) throws IOException {
-        // TODO: Protect from ArrayIndexOutOfBounds
-        if(input.charAt(index) == '&' && input.charAt(index + 1) == '#') {
-            int start = index + 2;
-            boolean isHex = false;
+// if the bug is that out.write(entityValue) is not working, we can fix it by converting the entityValue to a string before writing it to the writer.
 
-            char firstChar = input.charAt(start);
-            if(firstChar == 'x' || firstChar == 'X') {
-                start++;
-                isHex = true;
-            }
-
-            int end = start;
-            while(input.charAt(end) != ';') {
-                end++;
-            }
-
-            int entityValue;
-            try {
-                if(isHex) {
-                    entityValue = Integer.parseInt(input.subSequence(start, end).toString(), 16);
-                } else {
-                    entityValue = Integer.parseInt(input.subSequence(start, end).toString(), 10);
-                }
-            } catch(NumberFormatException nfe) {
-                return 0;
-            }
-
-                out.write(entityValue);
-            return 2 + (end - start) + (isHex ? 1 : 0) + 1;
-        }
-        return 0;
-    }
+out.write(String.valueOf(entityValue));
\ No newline at end of file
