diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/669e80a5-add1-470f-86c0-0f4fbeb13eba_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/3c8aa6f4-adb7-49e1-bdcf-e87084189814_fixed.java
index dcea789..042576f 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/669e80a5-add1-470f-86c0-0f4fbeb13eba_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/3c8aa6f4-adb7-49e1-bdcf-e87084189814_fixed.java
@@ -1,16 +1,14 @@
     public static byte[] encodeBase64(byte[] binaryData, boolean isChunked, boolean urlSafe, int maxResultSize) {
         if (binaryData == null || binaryData.length == 0) {
             return binaryData;
         }
-
-        long len = getEncodeLength(binaryData, MIME_CHUNK_SIZE, CHUNK_SEPARATOR);
+        long len = Base64.getEncoder().encodedLength(binaryData.length);
         if (len > maxResultSize) {
             throw new IllegalArgumentException("Input array too big, the output array would be bigger (" +
                 len +
-                ") than the specified maxium size of " +
+                ") than the specified maximum size of " +
                 maxResultSize);
         }
-                
-        Base64 b64 = isChunked ? new Base64(urlSafe) : new Base64(0, CHUNK_SEPARATOR, urlSafe);
-        return b64.encode(binaryData);
+        Base64.Encoder encoder = isChunked ? Base64.getEncoder().withChunkSize(MIME_CHUNK_SIZE).withSeparator(CHUNK_SEPARATOR, CHUNK_SEPARATOR.length) : Base64.getEncoder();
+        return encoder.encode(binaryData);
     }
\ No newline at end of file
