diff --git a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/0cb93ebf-bbcc-4f9a-aa78-f6b848ff8875_buggy.java b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/5b1dbd9c-fb4e-4c7a-a196-eb4f24ea8db2_fixed.java
index 68a2cad..660d7a9 100644
--- a/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/0cb93ebf-bbcc-4f9a-aa78-f6b848ff8875_buggy.java
+++ b/var/folders/0t/lbz9bxg17r10xznln_x5mpj00000gn/T/5b1dbd9c-fb4e-4c7a-a196-eb4f24ea8db2_fixed.java
@@ -1,35 +1,30 @@
 public JsonDeserializer<?> createContextual(DeserializationContext ctxt,
         BeanProperty property) throws JsonMappingException
 {
-        // May need to resolve types for delegate-based creators:
     JsonDeserializer<Object> delegate = null;
     if (_valueInstantiator != null) {
-            // [databind#2324]: check both array-delegating and delegating
         AnnotatedWithParams delegateCreator = _valueInstantiator.getDelegateCreator();
         if (delegateCreator != null) {
+            delegate = ctxt.handlePrimaryContextualization(delegateCreator, property);
+        }
         JavaType delegateType = _valueInstantiator.getDelegateType(ctxt.getConfig());
         delegate = findDeserializer(ctxt, delegateType, property);
     }
-        }
     JsonDeserializer<?> valueDeser = _valueDeserializer;
     final JavaType valueType = _containerType.getContentType();
     if (valueDeser == null) {
-            // [databind#125]: May have a content converter
         valueDeser = findConvertingContentDeserializer(ctxt, property, valueDeser);
         if (valueDeser == null) {
-            // And we may also need to get deserializer for String
             valueDeser = ctxt.findContextualValueDeserializer(valueType, property);
         }
-        } else { // if directly assigned, probably not yet contextual, so:
+    } else { 
         valueDeser = ctxt.handleSecondaryContextualization(valueDeser, property, valueType);
     }
-        // 11-Dec-2015, tatu: Should we pass basic `Collection.class`, or more refined? Mostly
-        //   comes down to "List vs Collection" I suppose... for now, pass Collection
     Boolean unwrapSingle = findFormatFeature(ctxt, property, Collection.class,
             JsonFormat.Feature.ACCEPT_SINGLE_VALUE_AS_ARRAY);
     NullValueProvider nuller = findContentNullProvider(ctxt, property, valueDeser);
     if (isDefaultDeserializer(valueDeser)) {
         valueDeser = null;
     }
     return withResolved(delegate, valueDeser, nuller, unwrapSingle);
 }
\ No newline at end of file
