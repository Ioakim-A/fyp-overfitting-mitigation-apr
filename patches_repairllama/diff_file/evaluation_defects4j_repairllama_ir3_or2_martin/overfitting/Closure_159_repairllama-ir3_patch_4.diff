diff --git src/com/google/javascript/jscomp/InlineFunctions.java src/com/google/javascript/jscomp/InlineFunctions.java
index 814a07f..121cd1d 100644
--- src/com/google/javascript/jscomp/InlineFunctions.java
+++ src/com/google/javascript/jscomp/InlineFunctions.java
@@ -773,14 +773,15 @@ class InlineFunctions implements SpecializationAwareCompilerPass {
   private void findCalledFunctions(
       Node node, Set<String> changed) {
     Preconditions.checkArgument(changed != null);
-    // For each referenced function, add a new reference
    if (node.getType() == Token.CALL) {
-      Node child = node.getFirstChild();
-      if (child.getType() == Token.NAME) {
-        changed.add(child.getString());
+      Node callee = node.getFirstChild();
+      if (callee.getType() == Token.GETPROP) {
+        callee = callee.getFirstChild();
+      }
+      if (callee.getType() == Token.NAME) {
+        changed.add(callee.getString());
       }
     }
-
     for (Node c = node.getFirstChild(); c != null; c = c.getNext()) {
       findCalledFunctions(c, changed);
     }
