diff --git src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java
index 40e7871..9273eb4 100644
--- src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java
+++ src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java
@@ -102,15 +102,12 @@ public class TarUtils {
         long    result = 0;
         int     end = offset + length;
         int     start = offset;
-
         if (length < 2){
             throw new IllegalArgumentException("Length "+length+" must be at least 2");
         }
-
         if (buffer[start] == 0) {
             return 0L;
         }
-
         // Skip leading spaces
         while (start < end){
             if (buffer[start] == ' '){
@@ -119,7 +116,6 @@ public class TarUtils {
                 break;
             }
         }
-
         // Trim all trailing NULs and spaces.
         // The ustar and POSIX tar specs require a trailing NUL or
         // space but some implementations use the extra digit for big
@@ -129,12 +125,13 @@ public class TarUtils {
             end--;
             trailer = buffer[end - 1];
         }
-
         for ( ;start < end; start++) {
             final byte currentByte = buffer[start];
-            if (currentByte == 0) {
-                break;
-            }
+// buggy code
+//            if (currentByte == 0) {
+//                break;
+//            }
+//
             // CheckStyle:MagicNumber OFF
             if (currentByte < '0' || currentByte > '7'){
                 throw new IllegalArgumentException(
@@ -143,7 +140,6 @@ public class TarUtils {
             result = (result << 3) + (currentByte - '0'); // convert from ASCII
             // CheckStyle:MagicNumber ON
         }
-
         return result;
     }
 
