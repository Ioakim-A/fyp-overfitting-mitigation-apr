diff --git gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java
index a326f76..826e6bc 100644
--- gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java
+++ gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java
@@ -124,19 +124,16 @@ public class ISO8601Utils
         Exception fail = null;
         try {
             int offset = pos.getIndex();
-
             // extract year
             int year = parseInt(date, offset, offset += 4);
             if (checkOffset(date, offset, '-')) {
                 offset += 1;
             }
-
             // extract month
             int month = parseInt(date, offset, offset += 2);
             if (checkOffset(date, offset, '-')) {
                 offset += 1;
             }
-
             // extract day
             int day = parseInt(date, offset, offset += 2);
             // default time value
@@ -144,25 +141,19 @@ public class ISO8601Utils
             int minutes = 0;
             int seconds = 0;
             int milliseconds = 0; // always use 0 otherwise returned date will include millis of current time
-
             // if the value has no time component (and no time zone), we are done
             boolean hasT = checkOffset(date, offset, 'T');
-            
             if (!hasT && (date.length() <= offset)) {
                 Calendar calendar = new GregorianCalendar(year, month - 1, day);
-
                 pos.setIndex(offset);
                 return calendar.getTime();
             }
-
             if (hasT) {
-
                 // extract hours, minutes, seconds and milliseconds
                 hour = parseInt(date, offset += 1, offset += 2);
                 if (checkOffset(date, offset, ':')) {
                     offset += 1;
                 }
-
                 minutes = parseInt(date, offset, offset += 2);
                 if (checkOffset(date, offset, ':')) {
                     offset += 1;
@@ -195,22 +186,23 @@ public class ISO8601Utils
                     }
                 }
             }
-
             // extract timezone
             if (date.length() <= offset) {
                 throw new IllegalArgumentException("No time zone indicator");
             }
-
             TimeZone timezone = null;
             char timezoneIndicator = date.charAt(offset);
-
             if (timezoneIndicator == 'Z') {
                 timezone = TIMEZONE_UTC;
                 offset += 1;
             } else if (timezoneIndicator == '+' || timezoneIndicator == '-') {
                 String timezoneOffset = date.substring(offset);
-
                 // When timezone has no minutes, we should append it, valid timezones are, for example: +00:00, +0000 and +00
+// buggy code
+//                if (timezoneOffset.length() < 6) {
+                if (timezoneOffset.length() < 5) {
+                    timezoneOffset += "00";
+                }
 
                 offset += timezoneOffset.length();
                 // 18-Jun-2015, tatu: Minor simplification, skip offset of "+0000"/"+00:00"
@@ -223,9 +215,7 @@ public class ISO8601Utils
                     //    custom timezones... odd.
                     String timezoneId = "GMT" + timezoneOffset;
 //                    String timezoneId = "UTC" + timezoneOffset;
-
                     timezone = TimeZone.getTimeZone(timezoneId);
-
                     String act = timezone.getID();
                     if (!act.equals(timezoneId)) {
                         /* 22-Jan-2015, tatu: Looks like canonical version has colons, but we may be given
@@ -243,7 +233,6 @@ public class ISO8601Utils
             } else {
                 throw new IndexOutOfBoundsException("Invalid time zone indicator '" + timezoneIndicator+"'");
             }
-
             Calendar calendar = new GregorianCalendar(timezone);
             calendar.setLenient(false);
             calendar.set(Calendar.YEAR, year);
@@ -253,7 +242,6 @@ public class ISO8601Utils
             calendar.set(Calendar.MINUTE, minutes);
             calendar.set(Calendar.SECOND, seconds);
             calendar.set(Calendar.MILLISECOND, milliseconds);
-
             pos.setIndex(offset);
             return calendar.getTime();
             // If we get a ParseException it'll already have the right message/offset.
