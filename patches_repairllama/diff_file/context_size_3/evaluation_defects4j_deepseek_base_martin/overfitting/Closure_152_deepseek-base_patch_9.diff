diff --git src/com/google/javascript/rhino/jstype/FunctionType.java src/com/google/javascript/rhino/jstype/FunctionType.java
index fc2578d..e867644 100644
--- src/com/google/javascript/rhino/jstype/FunctionType.java
+++ src/com/google/javascript/rhino/jstype/FunctionType.java
@@ -861,14 +861,11 @@ public class FunctionType extends PrototypeObjectType {
   @Override
   JSType resolveInternal(ErrorReporter t, StaticScope<JSType> scope) {
     setResolvedTypeInternal(this);
-
     call = (ArrowType) safeResolve(call, t, scope);
     prototype = (FunctionPrototypeType) safeResolve(prototype, t, scope);
-
     // Warning about typeOfThis if it doesn't resolve to an ObjectType
     // is handled further upstream.
     // TODO(nicksantos): Handle this correctly if we have a UnionType.
-    typeOfThis = (ObjectType) safeResolve(typeOfThis, t, scope);
 
     boolean changed = false;
     ImmutableList.Builder<ObjectType> resolvedInterfaces =
@@ -881,13 +878,11 @@ public class FunctionType extends PrototypeObjectType {
     if (changed) {
       implementedInterfaces = resolvedInterfaces.build();
     }
-
     if (subTypes != null) {
       for (int i = 0; i < subTypes.size(); i++) {
         subTypes.set(i, (FunctionType) subTypes.get(i).resolve(t, scope));
       }
     }
-
     return super.resolveInternal(t, scope);
   }
 
