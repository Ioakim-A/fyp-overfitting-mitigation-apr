diff --git src/main/java/org/apache/commons/csv/CSVFormat.java src/main/java/org/apache/commons/csv/CSVFormat.java
index 35ee86a..f06e17d 100644
--- src/main/java/org/apache/commons/csv/CSVFormat.java
+++ src/main/java/org/apache/commons/csv/CSVFormat.java
@@ -1004,10 +1004,8 @@ public final class CSVFormat implements Serializable {
         int start = offset;
         int pos = offset;
         final int end = offset + len;
-
         final char delimChar = getDelimiter();
         final char quoteChar = getQuoteCharacter().charValue();
-
         QuoteMode quoteModePolicy = getQuoteMode();
         if (quoteModePolicy == null) {
             quoteModePolicy = QuoteMode.MINIMAL;
@@ -1034,9 +1032,8 @@ public final class CSVFormat implements Serializable {
                 }
             } else {
                 char c = value.charAt(pos);
-
                 // RFC4180 (https://tools.ietf.org/html/rfc4180) TEXTDATA =  %x20-21 / %x23-2B / %x2D-7E
-                if (newRecord && (c < '0' || c > '9' && c < 'A' || c > 'Z' && c < 'a' || c > 'z')) {
+                if (c == LF || c == CR) {
                     quote = true;
                 } else if (c <= COMMENT) {
                     // Some other chars at the start of a value caused the parser to fail, so for now
@@ -1052,7 +1049,6 @@ public final class CSVFormat implements Serializable {
                         }
                         pos++;
                     }
-
                     if (!quote) {
                         pos = end - 1;
                         c = value.charAt(pos);
@@ -1064,7 +1060,6 @@ public final class CSVFormat implements Serializable {
                     }
                 }
             }
-
             if (!quote) {
                 // no encapsulation needed - write out the original value
                 out.append(value, start, end);
@@ -1074,23 +1069,19 @@ public final class CSVFormat implements Serializable {
         default:
             throw new IllegalStateException("Unexpected Quote value: " + quoteModePolicy);
         }
-
         if (!quote) {
             // no encapsulation needed - write out the original value
             out.append(value, start, end);
             return;
         }
-
         // we hit something that needed encapsulation
         out.append(quoteChar);
-
         // Pick up where we left off: pos should be positioned on the first character that caused
         // the need for encapsulation.
         while (pos < end) {
             final char c = value.charAt(pos);
             if (c == quoteChar) {
                 // write out the chunk up until this point
-
                 // add 1 to the length to write out the encapsulator also
                 out.append(value, start, pos + 1);
                 // put the next starting position on the encapsulator so we will
@@ -1099,7 +1090,6 @@ public final class CSVFormat implements Serializable {
             }
             pos++;
         }
-
         // write the last segment
         out.append(value, start, pos);
         out.append(quoteChar);
