diff --git src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java
index 4cf32d6..b77b104 100644
--- src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java
+++ src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java
@@ -103,15 +103,12 @@ public class TarUtils {
         long    result = 0;
         int     end = offset + length;
         int     start = offset;
-
         if (length < 2){
             throw new IllegalArgumentException("Length "+length+" must be at least 2");
         }
-
         if (buffer[start] == 0) {
             return 0L;
         }
-
         // Skip leading spaces
         while (start < end){
             if (buffer[start] == ' '){
@@ -120,7 +117,6 @@ public class TarUtils {
                 break;
             }
         }
-
         // Trim all trailing NULs and spaces.
         // The ustar and POSIX tar specs require a trailing NUL or
         // space but some implementations use the extra digit for big
@@ -130,11 +126,12 @@ public class TarUtils {
             end--;
             trailer = buffer[end - 1];
         }
-        if (start == end) {
-            throw new IllegalArgumentException(
-                    exceptionMessage(buffer, offset, length, start, trailer));
-        }
-
+// buggy code
+//        if (start == end) {
+//            throw new IllegalArgumentException(
+//                    exceptionMessage(buffer, offset, length, start, trailer));
+//        }
+//
         for ( ;start < end; start++) {
             final byte currentByte = buffer[start];
             // CheckStyle:MagicNumber OFF
@@ -145,7 +142,6 @@ public class TarUtils {
             result = (result << 3) + (currentByte - '0'); // convert from ASCII
             // CheckStyle:MagicNumber ON
         }
-
         return result;
     }
 
