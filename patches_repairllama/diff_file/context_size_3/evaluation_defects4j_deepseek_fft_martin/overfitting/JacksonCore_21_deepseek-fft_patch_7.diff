diff --git src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java
index e6558fd..a7dd8a2 100644
--- src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java
+++ src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java
@@ -229,27 +229,31 @@ public class FilteringParserDelegate extends JsonParserDelegate
         // 23-May-2017, tatu: To be honest, code here is rather hairy and I don't like all
         //    conditionals; and it seems odd to return `null` but NOT considering input
         //    as closed... would love a rewrite to simplify/clear up logic here.
-        
         // Check for _allowMultipleMatches - false and at least there is one token - which is _currToken
         // check for no buffered context _exposedContext - null
         // If all the conditions matches then check for scalar / non-scalar property
         if (!_allowMultipleMatches && (_currToken != null) && (_exposedContext == null)) {
             //if not scalar and ended successfully, and !includePath, then return null
-                if (_currToken.isStructEnd()) {
-                    if (_headContext.isStartHandled()) {
+// buggy code
+//                if (_currToken.isStructEnd()) {
+//                    if (_headContext.isStartHandled()) {
+//                        return (_currToken = null);
+//                    }
+//                } else if (_currToken.isScalarValue()) {
+//                    //else if scalar, and scalar not present in obj/array and !includePath and INCLUDE_ALL matched once
+//                    // then return null 
+//                    if (!_headContext.isStartHandled() && (_itemFilter == TokenFilter.INCLUDE_ALL)) {
+//                        return (_currToken = null);
+//                    }
+                if (_currToken.isStructEnd() && !_headContext.isStartHandled()) {
                     return (_currToken = null);
-                    }
-                } else if (_currToken.isScalarValue()) {
-                    //else if scalar, and scalar not present in obj/array and !includePath and INCLUDE_ALL matched once
-                    // then return null 
-                    if (!_headContext.isStartHandled() && (_itemFilter == TokenFilter.INCLUDE_ALL)) {
+                } else if (_currToken.isScalarValue() && !_headContext.isStartHandled() && (_itemFilter == TokenFilter.INCLUDE_ALL)) {
                     return (_currToken = null);
-                    }
+    
             }
         }
         // Anything buffered?
         TokenFilterContext ctxt = _exposedContext;
-
         if (ctxt != null) {
             while (true) {
                 JsonToken t = ctxt.nextTokenToRead();
@@ -267,7 +271,6 @@ public class FilteringParserDelegate extends JsonParserDelegate
                         _currToken = t;
                         return t;
                     }
-
                     // Almost! Most likely still have the current token;
                     // with the sole exception of 
                     /*
@@ -287,7 +290,6 @@ public class FilteringParserDelegate extends JsonParserDelegate
                 }
             }
         }
-
         // If not, need to read more. If we got any:
         JsonToken t = delegate.nextToken();
         if (t == null) {
@@ -295,10 +297,8 @@ public class FilteringParserDelegate extends JsonParserDelegate
             _currToken = t;
             return t;
         }
-
         // otherwise... to include or not?
         TokenFilter f;
-        
         switch (t.id()) {
         case ID_START_ARRAY:
             f = _itemFilter;
@@ -325,7 +325,6 @@ public class FilteringParserDelegate extends JsonParserDelegate
                 return (_currToken = t);
             }
             _headContext = _headContext.createChildArrayContext(f, false);
-            
             // Also: only need buffering if parent path to be included
             if (_includePath) {
                 t = _nextTokenWithBuffering(_headContext);
@@ -335,7 +334,6 @@ public class FilteringParserDelegate extends JsonParserDelegate
                 }
             }
             break;
-
         case ID_START_OBJECT:
             f = _itemFilter;
             if (f == TokenFilter.INCLUDE_ALL) {
@@ -372,7 +370,6 @@ public class FilteringParserDelegate extends JsonParserDelegate
             // note: inclusion of surrounding Object handled separately via
             // FIELD_NAME
             break;
-
         case ID_END_ARRAY:
         case ID_END_OBJECT:
             {
@@ -388,7 +385,6 @@ public class FilteringParserDelegate extends JsonParserDelegate
                 }
             }
             break;
-
         case ID_FIELD_NAME:
             {
                 final String name = delegate.getCurrentName();
@@ -432,7 +428,6 @@ public class FilteringParserDelegate extends JsonParserDelegate
                 }
                 break;
             }
-
         default: // scalar value
             f = _itemFilter;
             if (f == TokenFilter.INCLUDE_ALL) {
@@ -448,7 +443,6 @@ public class FilteringParserDelegate extends JsonParserDelegate
             // Otherwise not included (leaves must be explicitly included)
             break;
         }
-
         // We get here if token was not yet found; offlined handling
         return _nextToken2();
     }
