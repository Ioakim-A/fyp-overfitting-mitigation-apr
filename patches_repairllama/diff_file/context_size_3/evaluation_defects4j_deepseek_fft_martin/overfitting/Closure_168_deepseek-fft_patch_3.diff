diff --git src/com/google/javascript/jscomp/TypedScopeCreator.java src/com/google/javascript/jscomp/TypedScopeCreator.java
index cf87eaa..a03b26a 100644
--- src/com/google/javascript/jscomp/TypedScopeCreator.java
+++ src/com/google/javascript/jscomp/TypedScopeCreator.java
@@ -1988,12 +1988,13 @@ final class TypedScopeCreator implements ScopeCreator {
       if (t.inGlobalScope()) {
         return;
       }
-
       if (n.isReturn() && n.getFirstChild() != null) {
         data.get(t.getScopeRoot()).recordNonEmptyReturn();
       }
+// buggy code
+//      if (t.getScopeDepth() <= 2) {
+      if (t.getScopeDepth() < 2) {
 
-      if (t.getScopeDepth() <= 2) {
         // The first-order function analyzer looks at two types of variables:
         //
         // 1) Local variables that are assigned in inner scopes ("escaped vars")
@@ -2004,7 +2005,6 @@ final class TypedScopeCreator implements ScopeCreator {
         // no reason to do this extra computation for them.
         return;
       }
-
       if (n.isName() && NodeUtil.isLValue(n) &&
           // Be careful of bleeding functions, which create variables
           // in the inner scope, not the scope where the name appears.
@@ -2017,7 +2017,6 @@ final class TypedScopeCreator implements ScopeCreator {
           if (ownerScope.isLocal()) {
             data.get(ownerScope.getRootNode()).recordAssignedName(name);
           }
-
           if (scope != ownerScope && ownerScope.isLocal()) {
             data.get(ownerScope.getRootNode()).recordEscapedVarName(name);
           }
