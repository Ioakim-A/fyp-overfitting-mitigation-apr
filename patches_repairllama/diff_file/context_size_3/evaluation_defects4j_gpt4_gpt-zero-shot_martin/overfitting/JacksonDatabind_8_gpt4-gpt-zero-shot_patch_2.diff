diff --git src/main/java/com/fasterxml/jackson/databind/deser/impl/CreatorCollector.java src/main/java/com/fasterxml/jackson/databind/deser/impl/CreatorCollector.java
index 39514f6..1ba6510 100644
--- src/main/java/com/fasterxml/jackson/databind/deser/impl/CreatorCollector.java
+++ src/main/java/com/fasterxml/jackson/databind/deser/impl/CreatorCollector.java
@@ -278,27 +278,15 @@ public class CreatorCollector
     final int mask = (1 << typeIndex);
     _hasNonDefaultCreator = true;
     AnnotatedWithParams oldOne = _creators[typeIndex];
-        // already had an explicitly marked one?
     if (oldOne != null) {
-
-            if ((_explicitCreators & mask) != 0) { // already had explicitly annotated, leave as-is
-                // but skip, if new one not annotated
+        if ((_explicitCreators & mask) != 0) { 
             if (!explicit) {
                 return;
             }
-                // both explicit: verify
-                // otherwise only verify if neither explicitly annotated.
         }
-
-            // one more thing: ok to override in sub-class
-            if (oldOne.getClass() == newOne.getClass()) {
-                // [databind#667]: avoid one particular class of bogus problems
-
+        if (oldOne.getClass() == newOne.getClass() && explicit) {
             throw new IllegalArgumentException("Conflicting "+TYPE_DESCS[typeIndex]
                     +" creators: already had explicitly marked "+oldOne+", encountered "+newOne);
-                // otherwise, which one to choose?
-                    // new type more generic, use old
-                // new type more specific, use it
         }
     }
     if (explicit) {
@@ -306,7 +294,6 @@ public class CreatorCollector
     }
     _creators[typeIndex] = _fixAccess(newOne);
 }
-
     /*
     /**********************************************************
     /* Helper class(es)
