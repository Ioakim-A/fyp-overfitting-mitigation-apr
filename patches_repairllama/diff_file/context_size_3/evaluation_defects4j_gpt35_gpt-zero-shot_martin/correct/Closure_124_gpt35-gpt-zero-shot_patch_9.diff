diff --git src/com/google/javascript/jscomp/ExploitAssigns.java src/com/google/javascript/jscomp/ExploitAssigns.java
index 0f03e35..542958d 100644
--- src/com/google/javascript/jscomp/ExploitAssigns.java
+++ src/com/google/javascript/jscomp/ExploitAssigns.java
@@ -204,21 +204,20 @@ class ExploitAssigns extends AbstractPeepholeOptimization {
    * @return Whether the replacement can be made.
    */
     private boolean isSafeReplacement(Node node, Node replacement) {
-    // No checks are needed for simple names.
         if (node.isName()) {
             return true;
         }
         Preconditions.checkArgument(node.isGetProp());
-
+        Node originalNode = node;
+        while (node.isGetProp()) {
             node = node.getFirstChild();
+        }
         if (node.isName()
                 && isNameAssignedTo(node.getString(), replacement)) {
             return false;
         }
-
         return true;
     }
-
   /**
    * @return Whether name is assigned in the expression rooted at node.
    */
