diff --git src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java
index 5cb0e43..fc79b33 100644
--- src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java
+++ src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java
@@ -178,20 +178,23 @@ public class DiscreteDistribution<T> {
      * @throws NotStrictlyPositiveException if {@code sampleSize} is not
      * positive.
      */
-    public T[] sample(int sampleSize) throws NotStrictlyPositiveException {
+// buggy code
+//     public T[] sample(int sampleSize) throws NotStrictlyPositiveException {
+//         if (sampleSize <= 0) {
+//             throw new NotStrictlyPositiveException(LocalizedFormats.NUMBER_OF_SAMPLES,
+//                     sampleSize);
+//         }
+//         final T[]out = (T[]) java.lang.reflect.Array.newInstance(singletons.get(0).getClass(), sampleSize);
+   public Object[] sample(int sampleSize) throws NotStrictlyPositiveException {
         if (sampleSize <= 0) {
             throw new NotStrictlyPositiveException(LocalizedFormats.NUMBER_OF_SAMPLES,
                     sampleSize);
         }
-
-        final T[]out = (T[]) java.lang.reflect.Array.newInstance(singletons.get(0).getClass(), sampleSize);
-
+        final Object[] out = new Object[sampleSize];
         for (int i = 0; i < sampleSize; i++) {
             out[i] = sample();
         }
-
         return out;
-
     }
 
 }
