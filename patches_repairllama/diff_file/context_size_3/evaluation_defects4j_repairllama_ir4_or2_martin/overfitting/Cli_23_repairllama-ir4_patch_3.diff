diff --git src/java/org/apache/commons/cli/HelpFormatter.java src/java/org/apache/commons/cli/HelpFormatter.java
index 9fa8ebf..b2cf4d7 100644
--- src/java/org/apache/commons/cli/HelpFormatter.java
+++ src/java/org/apache/commons/cli/HelpFormatter.java
@@ -806,36 +806,41 @@ public class HelpFormatter
                                              int nextLineTabStop, String text)
     {
         int pos = findWrapPos(text, width, 0);
-
         if (pos == -1)
         {
             sb.append(rtrim(text));
-
             return sb;
         }
         sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
-
-        // all following lines must be padded with nextLineTabStop space 
-        // characters
         final String padding = createPadding(nextLineTabStop);
-
         while (true)
         {
-            int lastPos = pos;
+// buggy code
+//             int lastPos = pos;
+//             text = padding + text.substring(pos).trim();
+//             pos = findWrapPos(text, width, 0);
+//             if (pos == -1)
+//             {
+//                 sb.append(text);
+//                 return sb;
+//             } else
+//             if (pos == lastPos)
+//             {
+//                 throw new RuntimeException("Text too long for line - throwing exception to avoid infinite loop [CLI-162]: " + text);
+           final int lastPos = pos;
             text = padding + text.substring(pos).trim();
             pos = findWrapPos(text, width, 0);
-
             if (pos == -1)
             {
                 sb.append(text);
-
                 return sb;
-            } else
+            }
+            else
             if (pos == lastPos)
             {
-                throw new RuntimeException("Text too long for line - throwing exception to avoid infinite loop [CLI-162]: " + text);
+                sb.append(text);
+                return sb;
             }
-
             sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
         }
     }
