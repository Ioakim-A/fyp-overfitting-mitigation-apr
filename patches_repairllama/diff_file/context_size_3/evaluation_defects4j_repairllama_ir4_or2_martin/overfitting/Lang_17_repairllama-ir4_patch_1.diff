diff --git src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java
index 4cb581d..b808729 100644
--- src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java
+++ src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java
@@ -80,7 +80,26 @@ public abstract class CharSequenceTranslator {
             return;
         }
         int pos = 0;
-        int len = Character.codePointCount(input, 0, input.length());
+// buggy code
+//         int len = Character.codePointCount(input, 0, input.length());
+//         while (pos < len) {
+//             int consumed = translate(input, pos, out);
+//             if (consumed == 0) {
+//                 char[] c = Character.toChars(Character.codePointAt(input, pos));
+//                 out.write(c);
+//             }
+//             else {
+//             for (int pt = 0; pt < consumed; pt++) {
+//                     if (pos < len - 2) {
+//                 pos += Character.charCount(Character.codePointAt(input, pos));
+//                     } else {
+//                         pos++;
+//                     }
+//                 }
+//                 pos--;
+//             }
+//             pos++;
+       int len = input.length();
         while (pos < len) {
             int consumed = translate(input, pos, out);
             if (consumed == 0) {
@@ -88,8 +107,6 @@ public abstract class CharSequenceTranslator {
                 out.write(c);
             }
             else {
-//          // contract with translators is that they have to understand codepoints 
-//          // and they just took care of a surrogate pair
             for (int pt = 0; pt < consumed; pt++) {
                     if (pos < len - 2) {
                 pos += Character.charCount(Character.codePointAt(input, pos));
@@ -99,7 +116,7 @@ public abstract class CharSequenceTranslator {
                 }
                 pos--;
             }
-            pos++;
+            pos += Character.charCount(Character.codePointAt(input, pos));
         }
     }
 
