diff --git src/com/google/javascript/jscomp/LiveVariablesAnalysis.java src/com/google/javascript/jscomp/LiveVariablesAnalysis.java
index 7999db4..a73e9b0 100644
--- src/com/google/javascript/jscomp/LiveVariablesAnalysis.java
+++ src/com/google/javascript/jscomp/LiveVariablesAnalysis.java
@@ -177,20 +177,17 @@ class LiveVariablesAnalysis extends
    */
   private void computeGenKill(Node n, BitSet gen, BitSet kill,
       boolean conditional) {
-
     switch (n.getType()) {
       case Token.SCRIPT:
       case Token.BLOCK:
       case Token.FUNCTION:
         return;
-
       case Token.WHILE:
       case Token.DO:
       case Token.IF:
         computeGenKill(NodeUtil.getConditionExpression(n), gen, kill,
             conditional);
         return;
-
       case Token.FOR:
         if (!NodeUtil.isForIn(n)) {
           computeGenKill(NodeUtil.getConditionExpression(n), gen, kill,
@@ -203,12 +200,14 @@ class LiveVariablesAnalysis extends
             // for(var x in y) {...}
             lhs = lhs.getLastChild();
           }
-            addToSetIfLocal(lhs, kill);
-            addToSetIfLocal(lhs, gen);
+          if (NodeUtil.isVar(rhs)) {
+            // for(x in var y) {...}
+            rhs = rhs.getLastChild();
+          }
+          computeGenKill(lhs, gen, kill, conditional);
           computeGenKill(rhs, gen, kill, conditional);
         }
         return;
-
       case Token.VAR:
         for (Node c = n.getFirstChild(); c != null; c = c.getNext()) {
           if (c.hasChildren()) {
@@ -219,21 +218,18 @@ class LiveVariablesAnalysis extends
           }
         }
         return;
-
       case Token.AND:
       case Token.OR:
         computeGenKill(n.getFirstChild(), gen, kill, conditional);
         // May short circuit.
         computeGenKill(n.getLastChild(), gen, kill, true);
         return;
-
       case Token.HOOK:
         computeGenKill(n.getFirstChild(), gen, kill, conditional);
         // Assume both sides are conditional.
         computeGenKill(n.getFirstChild().getNext(), gen, kill, true);
         computeGenKill(n.getLastChild(), gen, kill, true);
         return;
-
       case Token.NAME:
         if (isArgumentsName(n)) {
           markAllParametersEscaped();
@@ -241,7 +237,6 @@ class LiveVariablesAnalysis extends
           addToSetIfLocal(n, gen);
         }
         return;
-
       default:
         if (NodeUtil.isAssignmentOp(n) && NodeUtil.isName(n.getFirstChild())) {
           Node lhs = n.getFirstChild();
